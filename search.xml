<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[ZIP压缩.Net与Android相互解压]]></title>
      <url>https://zuoluo11.github.io/2016/09/28/ZIP%E5%8E%8B%E7%BC%A9-Net%E4%B8%8EAndroid%E7%9B%B8%E4%BA%92%E8%A7%A3%E5%8E%8B/</url>
      <content type="html"><![CDATA[<p>使用.NET搭建webservice，使用JAVA在Android端接受</p>
<p>.Net与JAVA互相通过ZIP压缩协议进行压缩和解压字符串，减少传输字节量，加快传输速度<br>增加用户友好。<br><a id="more"></a><br>Android<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div></pre></td><td class="code"><pre><div class="line">package com.example.administrator.myapplication;</div><div class="line"></div><div class="line">import android.util.Base64;</div><div class="line"></div><div class="line">import java.io.ByteArrayInputStream;</div><div class="line">import java.io.ByteArrayOutputStream;</div><div class="line">import java.io.IOException;</div><div class="line">import java.nio.ByteBuffer;</div><div class="line">import java.util.zip.GZIPInputStream;</div><div class="line">import java.util.zip.GZIPOutputStream;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Created by Administrator on 2016/9/15.</div><div class="line"> */</div><div class="line">public class GZIP &#123;</div><div class="line">    public static byte[] compress(String string) throws IOException &#123;</div><div class="line">        ByteArrayOutputStream os = new ByteArrayOutputStream(string.length());</div><div class="line">        GZIPOutputStream gos = new GZIPOutputStream(os);</div><div class="line">        gos.write(string.getBytes());</div><div class="line">        gos.close();</div><div class="line">        byte[] compressed = os.toByteArray();</div><div class="line">        os.close();</div><div class="line">        <span class="built_in">return</span> compressed;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static String decompress(byte[] compressed) throws IOException &#123;</div><div class="line">        final int BUFFER_SIZE = 32;</div><div class="line">        ByteArrayInputStream is = new ByteArrayInputStream(compressed);</div><div class="line">        GZIPInputStream gis = new GZIPInputStream(is, BUFFER_SIZE);</div><div class="line">        StringBuilder string = new StringBuilder();</div><div class="line">        byte[] data = new byte[BUFFER_SIZE];</div><div class="line">        int bytesRead;</div><div class="line">        <span class="keyword">while</span> ((bytesRead = gis.read(data)) != -1) &#123;</div><div class="line">            string.append(new String(data, 0, bytesRead));</div><div class="line">        &#125;</div><div class="line">        gis.close();</div><div class="line">        is.close();</div><div class="line">        <span class="built_in">return</span> string.toString();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static String compress1(String str) throws IOException &#123;</div><div class="line">        byte[] data=str.getBytes(<span class="string">"UTF-8"</span>);</div><div class="line">        byte[] blockcopy = ByteBuffer</div><div class="line">                .allocate(4)</div><div class="line">                .order(java.nio.ByteOrder.LITTLE_ENDIAN)</div><div class="line">                .putInt(data.length)</div><div class="line">                .array();</div><div class="line">        ByteArrayOutputStream os = new ByteArrayOutputStream(data.length);</div><div class="line">//        os.write(new byte[]&#123;0x05, 0, 0, 0&#125;,0,4);</div><div class="line">        GZIPOutputStream gos = new GZIPOutputStream(os);</div><div class="line">        gos.write(data);</div><div class="line">        gos.close();</div><div class="line">        os.close();</div><div class="line">        byte[] compressed = new byte[4 + os.toByteArray().length];</div><div class="line">        System.arraycopy(blockcopy, 0, compressed, 0, 4);</div><div class="line">        System.arraycopy(os.toByteArray(), 0, compressed, 4,</div><div class="line">                os.toByteArray().length);</div><div class="line">        byte[] result1= Base64.encode(compressed,Base64.DEFAULT);</div><div class="line">        <span class="built_in">return</span> new String (result1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static String decompress1(String zipText) throws IOException &#123;</div><div class="line">        byte[] compressed = Base64.decode(zipText,Base64.DEFAULT);</div><div class="line">        <span class="keyword">if</span> (compressed.length &gt; 4)</div><div class="line">        &#123;</div><div class="line">            GZIPInputStream gzipInputStream = new GZIPInputStream(</div><div class="line">                    new ByteArrayInputStream(compressed, 4,</div><div class="line">                            compressed.length - 4));</div><div class="line"></div><div class="line">            ByteArrayOutputStream baos = new ByteArrayOutputStream();</div><div class="line">            <span class="keyword">for</span> (int value = 0; value != -1;) &#123;</div><div class="line">                value = gzipInputStream.read();</div><div class="line">                <span class="keyword">if</span> (value != -1) &#123;</div><div class="line">                    baos.write(value);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            gzipInputStream.close();</div><div class="line">            baos.close();</div><div class="line">            String sReturn = new String(baos.toByteArray(), <span class="string">"UTF-8"</span>);</div><div class="line">            <span class="built_in">return</span> sReturn;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="built_in">return</span> <span class="string">""</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>.Net<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">using System;</div><div class="line">using System.IO;</div><div class="line">using System.IO.Compression;</div><div class="line">using System.Text;</div><div class="line"></div><div class="line"></div><div class="line">namespace GZIPService</div><div class="line">&#123;</div><div class="line">    public class ZipHelper</div><div class="line">    &#123;</div><div class="line">        public static string compress(string text)</div><div class="line">        &#123;</div><div class="line">            byte[] buffer = Encoding.UTF8.GetBytes(text);</div><div class="line">            MemoryStream ms = new MemoryStream();</div><div class="line">            using (GZipStream zip = new GZipStream(ms, CompressionMode.Compress, <span class="literal">true</span>))</div><div class="line">            &#123;</div><div class="line">                zip.Write(buffer, 0, buffer.Length);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            ms.Position = 0;</div><div class="line">            MemoryStream outStream = new MemoryStream();</div><div class="line"></div><div class="line">            byte[] compressed = new byte[ms.Length];</div><div class="line">            ms.Read(compressed, 0, compressed.Length);</div><div class="line"></div><div class="line">            byte[] gzBuffer = new byte[compressed.Length + 4];</div><div class="line">            System.Buffer.BlockCopy(compressed, 0, gzBuffer, 4, compressed.Length);</div><div class="line">            System.Buffer.BlockCopy(BitConverter.GetBytes(buffer.Length), 0, gzBuffer, 0, 4);</div><div class="line">            <span class="built_in">return</span> Convert.ToBase64String(gzBuffer);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public static string decompress(string compressedText)</div><div class="line">        &#123;</div><div class="line">            byte[] gzBuffer = Convert.FromBase64String(compressedText);</div><div class="line">            using (MemoryStream ms = new MemoryStream())</div><div class="line">            &#123;</div><div class="line">                int msgLength = BitConverter.ToInt32(gzBuffer, 0);</div><div class="line">                ms.Write(gzBuffer, 4, gzBuffer.Length - 4);</div><div class="line"></div><div class="line">                byte[] buffer = new byte[msgLength];</div><div class="line"></div><div class="line">                ms.Position = 0;</div><div class="line">                using (GZipStream zip = new GZipStream(ms, CompressionMode.Decompress))</div><div class="line">                &#123;</div><div class="line">                    zip.Read(buffer, 0, buffer.Length);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="built_in">return</span> Encoding.UTF8.GetString(buffer);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>https://zuoluo11.github.io/2016/09/17/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[c#基础-扩展方法]]></title>
      <url>https://zuoluo11.github.io/2016/09/12/c-%E5%9F%BA%E7%A1%80-%E6%89%A9%E5%B1%95%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<h2 id="扩展方法的讲解"><a href="#扩展方法的讲解" class="headerlink" title="扩展方法的讲解"></a>扩展方法的讲解</h2><p>C#扩展方法，爱你在心口难开<br>转自<a href="http://www.cnblogs.com/wufengtinghai/archive/2011/08/05/2128110.html" target="_blank" rel="external">无风听海</a> </p>
<a id="more"></a>
<p>什么是扩展方法?好几天了打算记录一下，今天我们来深入研究一下，探究一下扩展方法的实现机制；那么到底什么是扩展方法呢？<br>扩展方法使您能够向现有类型“添加”方法，而无需创建新的派生类型、重新编译或以其他方式修改原始类型。扩展方法是一种特殊的静态方法，但可以像扩展类型上的实例方法一样进行调用。对于用 C# 和 Visual Basic 编写的客户端代码，调用扩展方法与调用在类型中实际定义的方法之间没有明显的差异。<br>也许你并不明白以上的意思，那一点都没有关系，如果我们平时一定经常使用linq标准查询，那么我们就一直在使用扩展方法啦！<br>微软为枚举的集合扩展了很多的标准查询方法，极大的方便了我们的使用！请看下面的例子没有使用扩展方法</p>
<pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Text;</div><div class="line">using wuFengTingHai.Person;</div><div class="line"></div><div class="line">namespace ExtendMethod</div><div class="line">&#123;</div><div class="line">    public class LinqExtend</div><div class="line">    &#123;</div><div class="line">        private IList&lt;Person&gt; persons = new List&lt;Person&gt;();</div><div class="line">        public IList&lt;Person&gt; Persons</div><div class="line">        &#123;</div><div class="line">            get &#123;</div><div class="line">                //删除集合中名称为无风听海的记录，没有引入system.linq,所以不能使用扩展方法</div><div class="line">                foreach(Person person <span class="keyword">in</span> this.persons)</div><div class="line">                &#123;</div><div class="line">                    <span class="keyword">if</span> (person.Name.Equals(<span class="string">"无风听海"</span>))</div><div class="line">                    &#123;</div><div class="line">                        this.persons.Remove(person);</div><div class="line">                    &#125;</div><div class="line">                &#125;                </div><div class="line">                <span class="built_in">return</span> this.persons;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">set</span> &#123; this.persons = value; &#125;</div><div class="line">        &#125;        </div><div class="line">    &#125;   </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><p>使用扩展方法</p>
<pre><code><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">	using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Linq;</div><div class="line">using System.Text;</div><div class="line"></div><div class="line">namespace wuFengTingHai.Person.Extend</div><div class="line">&#123;</div><div class="line">    public class LinqExtend</div><div class="line">    &#123;</div><div class="line">        private IList&lt;Person&gt; persons = new List&lt;Person&gt;();</div><div class="line">        public IList&lt;Person&gt; Persons</div><div class="line">        &#123;</div><div class="line">            get</div><div class="line">            &#123;</div><div class="line">                //删除集合中名称为无风听海的记录，引入system.linq的扩展方法</div><div class="line">                this.persons = this.persons.Where(m =&gt; !m.Name.Equals(<span class="string">"无风听海"</span>)).ToList&lt;Person&gt;();</div><div class="line">                <span class="built_in">return</span> this.persons;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">set</span> &#123; this.persons = value; &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><p>引入system.linq后,扩展方法的智能提示<br> 从上面的例子中我们可以学到扩展方法的使用方法。那么扩展方法是怎么定义的呢？查看一下Where扩展方法的定义  </p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">#region Assembly System.Core.dll, v2.0.50727</span></div><div class="line">// C:\Program Files\Reference Assemblies\Microsoft\Framework\v3.5\System.Core.dll</div><div class="line"><span class="comment">#endregion</span></div><div class="line"></div><div class="line">using System;</div><div class="line">using System.Collections;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Runtime.CompilerServices;</div><div class="line"></div><div class="line">namespace System.Linq</div><div class="line">&#123;    </div><div class="line">    //为了方便展示，将其他的扩展方法进行了删除精简</div><div class="line">    public static class Enumerable</div><div class="line">    &#123;</div><div class="line">        public static IEnumerable&lt;TSource&gt; Where&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; <span class="built_in">source</span>, Func&lt;TSource, bool&gt; predicate);</div><div class="line"></div><div class="line">        public static IEnumerable&lt;TSource&gt; Where&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; <span class="built_in">source</span>, Func&lt;TSource, int, bool&gt; predicate);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">``` </div><div class="line">  虽然扩展方法通过实例方法语法进行调用的，但是他们却被定义为静态方法。从定义中我们可以看到，它们的第一个参数指定该方法作用于哪个类型，并且该参数以 this 修饰符为前缀。</div><div class="line"></div><div class="line">    下面我们自己定义一个Person类和PersonExtend类来扩展方法，来看看编译器究竟做了什么！</div><div class="line">	``` bash</div><div class="line">	using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Linq;</div><div class="line">using System.Text;</div><div class="line"></div><div class="line">namespace wuFengTingHai.Person</div><div class="line">&#123;</div><div class="line">    public class Person</div><div class="line">    &#123;</div><div class="line">        public Person(string name,string sex,string age)</div><div class="line">        &#123;</div><div class="line">            this.name = name;</div><div class="line">            this.sex = sex;</div><div class="line">            this.age = age;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        private string name;</div><div class="line">        public string Name</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">set</span> &#123; this.name = value; &#125;</div><div class="line">            get &#123; <span class="built_in">return</span> this.name; &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        private string sex;</div><div class="line">        public string Sex</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">set</span> &#123; this.sex = value; &#125;</div><div class="line">            get &#123; <span class="built_in">return</span> this.sex; &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        private string age;</div><div class="line">        public string Age</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">set</span> &#123; this.age = value; &#125;</div><div class="line">            get &#123; <span class="built_in">return</span> this.age; &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">         public override string  <span class="function"><span class="title">ToString</span></span>()</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">return</span> string.Format(<span class="string">"&#123;0&#125;"</span>,<span class="string">"类本身的方法覆盖了同名扩展方法"</span>);</div><div class="line">        &#125;            </div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<pre><code>PersonExtend，对Person类进行方法扩展




<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">	 using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Linq;</div><div class="line">using System.Text;</div><div class="line"></div><div class="line">namespace wuFengTingHai.Person.Extend</div><div class="line">&#123;</div><div class="line">     public static  class PersonExtend</div><div class="line">    &#123;</div><div class="line">         public static string  GetDescription(this Person person,string msg)</div><div class="line">         &#123;             </div><div class="line">             <span class="built_in">return</span> string.Format(<span class="string">"&#123;0&#125;      我是&#123;1&#125;,性别&#123;2&#125;,今年&#123;3&#125;岁"</span>,msg,person.Name,person.Sex,person.Age);</div><div class="line">         &#125;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>

客户端调用结果

让我们看一下客户端main方法的IL代码，我们就知道编译器到底干什么了！
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">	 .method private hidebysig static void  Main(string[] args) cil managed</div><div class="line">&#123;</div><div class="line">  .entrypoint</div><div class="line">  // Code size       63 (0x3f)</div><div class="line">  .maxstack  4</div><div class="line">  .locals init ([0] class [wuFengTingHai.Person]wuFengTingHai.Person.Person person)</div><div class="line">  IL_0000:  nop</div><div class="line">  IL_0001:  ldstr      bytearray (E0 65 CE 98 2C 54 77 6D )                         // .e..,Twm</div><div class="line">  IL_0006:  ldstr      bytearray (37 75 )                                           // 7u</div><div class="line">  IL_000b:  ldstr      <span class="string">"20"</span></div><div class="line">  IL_0010:  newobj     instance void [wuFengTingHai.Person]wuFengTingHai.Person.Person::.ctor(string,</div><div class="line">                                                                                              string,</div><div class="line">                                                                                              string)</div><div class="line">  IL_0015:  stloc.0</div><div class="line">  IL_0016:  ldloc.0</div><div class="line">  IL_0017:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 59 97 01 60 7B 7C 50 00   // .v.c....Y..`&#123;|P.</div><div class="line">                                  65 00 72 00 73 00 6F 00 6E 00 45 00 78 00 74 00   // e.r.s.o.n.E.x.t.</div><div class="line">                                  65 00 6E 00 64 00 03 8C 28 75 2C 00 )             // e.n.d...(u,.</div><div class="line">                       //直接使用静态类PersonExtend调用</div><div class="line">  IL_001c:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,</div><div class="line">                                                                                                                    string)</div><div class="line">  IL_0021:  call       void [mscorlib]System.Console::WriteLine(string)</div><div class="line">  IL_0026:  nop</div><div class="line">  IL_0027:  ldloc.0</div><div class="line">  IL_0028:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 50 00 65 00 72 00 73 00   // .v.c....P.e.r.s.</div><div class="line">                                  6F 00 6E 00 84 76 9E 5B 8B 4F 03 8C 28 75 2C 00 ) // o.n..v.[.O..(u,.</div><div class="line">                       //直接使用Person的扩展方法调用</div><div class="line">  IL_002d:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,</div><div class="line">                                                                                                                    string)</div><div class="line">  IL_0032:  call       void [mscorlib]System.Console::WriteLine(string)</div><div class="line">  IL_0037:  nop</div><div class="line">  IL_0038:  call       string [mscorlib]System.Console::ReadLine()</div><div class="line">  IL_003d:  pop</div><div class="line">  IL_003e:  ret</div><div class="line">&#125; // end of method Program::Main</div></pre></td></tr></table></figure>


从IL中我们可以看到扩展方法与其扩展的类之间并没有什么本质的联系，只是编译器跟我们玩的把戏罢了，最终编译器还是将扩展方法转化成静态类的静态方法调用，所以扩展方法不能访问相应类的私有字段和私有方法；至于为什么使用静态类的静态方法，我考虑可能是这样效率相对较高，同时扩展方法作为其他类的扩展，本身类的实例化没有什么意义；     

 如果扩展方法和被扩展类中的方法相同，会怎么样？

 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">	  using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Linq;</div><div class="line">using System.Text;</div><div class="line"></div><div class="line">namespace wuFengTingHai.Person.Extend</div><div class="line">&#123;</div><div class="line">     public static  class PersonExtend</div><div class="line">    &#123;</div><div class="line">         public static string  GetDescription(this Person person,string msg)</div><div class="line">         &#123;             </div><div class="line">             <span class="built_in">return</span> string.Format(<span class="string">"&#123;0&#125;      我是&#123;1&#125;,性别&#123;2&#125;,今年&#123;3&#125;岁"</span>,msg,person.Name,person.Sex,person.Age);</div><div class="line">         &#125;</div><div class="line"></div><div class="line">       </div><div class="line">         public static string ToString(this Person person)</div><div class="line">         &#123;</div><div class="line">             <span class="built_in">return</span> <span class="string">"扩展方法能够覆盖原始类的同名方法"</span>;</div><div class="line">         &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>

 客户端调用代码

 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">	  using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Linq;</div><div class="line">using System.Text;</div><div class="line">using wuFengTingHai.Person.Extend;</div><div class="line">namespace ExtendMethod</div><div class="line">&#123;</div><div class="line">    class Program</div><div class="line">    &#123;</div><div class="line">        static void Main(string[] args)</div><div class="line">        &#123;            </div><div class="line">            wuFengTingHai.Person.Person person = new wuFengTingHai.Person.Person(<span class="string">"无风听海"</span>, <span class="string">"男"</span>, <span class="string">"20"</span>);</div><div class="line">            //Console.WriteLine(wuFengTingHai.Person.Extend.PersonExtend.GetDescription(person, <span class="string">"直接通过静态类PersonExtend调用,"</span>));</div><div class="line">            //Console.WriteLine(person.GetDescription(<span class="string">"直接通过Person的实例调用,"</span>));</div><div class="line">            Console.WriteLine(person.ToString());</div><div class="line">           </div><div class="line"></div><div class="line">            Console.ReadLine();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</code></pre><p>调用结果</p>
<p>以上我们可以看到编译时，扩展方法的优先级总是比类型本身中定义的实例方法低，所以与接口或类方法具有相同名称和签名的扩展方法永远不会被调用。</p>
<p>综上进行总结<br>  扩展方法不改变被扩展类的代码，不用重新编译、修改、派生被扩展类<br>  扩展方法不能访问被扩展类的私有成员<br>  扩展方法会被被扩展类的同名方法覆盖，所以实现扩展方法我们需要承担随时被覆盖的风险<br>  扩展方法看似实现了面向对象中扩展对修改说不的特性，但是也违背了面向对象的继承原则，被扩展类的派生类是不能继承扩展扩展方法的，从而又违背了面向对象的多态性。<br>  在我们稳定的引用同一个版本的类库，但是我们没有该类库的源代码，那么我们可以使用扩展方法；但是从项目的可扩展、可维护和版本控制方面来说，都不建议</p>
<p>  使用扩展方法进行类的扩展。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[百度地图常用功能的使用]]></title>
      <url>https://zuoluo11.github.io/2016/09/10/%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E5%B8%B8%E7%94%A8%E5%8A%9F%E8%83%BD%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>百度地图API使用<br><a id="more"></a></p>
<h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><p>1.<a href="http://lbsyun.baidu.com/index.php?title=jspopular" target="_blank" rel="external">JavaScript API</a><br>2.<a href="http://developer.baidu.com/map/jsdemo.htm" target="_blank" rel="external">demo</a><br>3.<a href="http://developer.baidu.com/map/jsdemo.htm" target="_blank" rel="external">工具开源库</a>（如鼠标点击后计算范围、聚合效果等）</p>
<h1 id="常用的功能及实现"><a href="#常用的功能及实现" class="headerlink" title="常用的功能及实现"></a>常用的功能及实现</h1><h2 id="引入资源包"><a href="#引入资源包" class="headerlink" title="引入资源包"></a>引入资源包</h2><p>引入常用的资源包（引入<a href="http://api.map.baidu.com/api?v=2.0&amp;ak=tzAcIFZ5xCoRwm63NcBGfoVB" target="_blank" rel="external">http://api.map.baidu.com/api?v=2.0&amp;ak=tzAcIFZ5xCoRwm63NcBGfoVB</a> 时ak是自己申请的一个秘钥）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"http://libs.baidu.com/jquery/2.0.0/jquery.min.js"</span>&gt;&lt;/script&gt;</div><div class="line">   &lt;!--jquery--&gt;</div><div class="line">   &lt;!--百度地图--&gt;</div><div class="line">   &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://api.map.baidu.com/api?v=2.0&amp;ak=tzAcIFZ5xCoRwm63NcBGfoVB"</span>&gt;&lt;/script&gt;</div><div class="line">   &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js"</span>&gt;&lt;/script&gt;</div><div class="line">   &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css"</span> /&gt;</div><div class="line">   &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.js"</span>&gt;&lt;/script&gt;</div><div class="line">   &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.css"</span> /&gt;</div><div class="line">   &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://api.map.baidu.com/library/AreaRestriction/1.2/src/AreaRestriction_min.js"</span>&gt;&lt;/script&gt;</div><div class="line">   &lt;!--聚合--&gt;</div><div class="line">   &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js"</span>&gt;&lt;/script&gt;</div><div class="line">   &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer.js"</span>&gt;&lt;/script&gt;</div><div class="line">   &lt;!--聚合--&gt;</div><div class="line">   &lt;!--百度地图--&gt;</div></pre></td></tr></table></figure></p>
<h2 id="初始化地图"><a href="#初始化地图" class="headerlink" title="初始化地图"></a>初始化地图</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(<span class="function"><span class="title">function</span></span>()&#123; /*所有js代码放入*/&#125;);</div></pre></td></tr></table></figure>
<h2 id="设置中心点"><a href="#设置中心点" class="headerlink" title="设置中心点"></a>设置中心点</h2><p>创建地图对象设置中心点以及缩放的级别zoom<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">// 百度地图API功能</div><div class="line">           var map = new BMap.Map(<span class="string">"allmap"</span>);    // 创建Map实例</div><div class="line">           /*centerAndZoom(center:Point, zoom:Number)  none 设初始化地图。 </div><div class="line">            &lt;span style=<span class="string">"color:#ff0000;"</span>&gt; 如果center类型为Point时，zoom必须赋值，范围3-19级，&lt;/span&gt;若调用高清底图（针对移动端开发）时，</div><div class="line">             zoom可赋值范围为3-18级。如果&lt;span style=<span class="string">"color:#ff0000;"</span>&gt;center类型为字符串时，比如“北京”，zoom可以忽略&lt;/span&gt;，地图将自动根据center适配最佳zoom级别。 </div><div class="line">           */</div><div class="line">           //map.centerAndZoom(new BMap.Point(113.195425, 39.657158), 10);  //初始化地图,设置中心点坐标和地图级别</div><div class="line">           map.centerAndZoom(<span class="string">"北京市"</span>);</div><div class="line">       &#125;);</div></pre></td></tr></table></figure></p>
<h2 id="插入缩放定位等控件"><a href="#插入缩放定位等控件" class="headerlink" title="插入缩放定位等控件"></a>插入缩放定位等控件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">   var navigationControl = new BMap.NavigationControl(&#123;</div><div class="line">// 靠左上角位置</div><div class="line">anchor: BMAP_ANCHOR_TOP_LEFT,</div><div class="line">// LARGE类型</div><div class="line"><span class="built_in">type</span>: BMAP_NAVIGATION_CONTROL_LARGE,</div><div class="line">// 启用显示定位</div><div class="line"><span class="built_in">enable</span>Geolocation: <span class="literal">true</span>,</div><div class="line">showZoomInfo: <span class="literal">true</span>,</div><div class="line">   &#125;);</div><div class="line">   map.addControl(navigationControl);</div></pre></td></tr></table></figure>
<p> <img src="http://i2.buimg.com/4851/bf4465457e5af658.jpg" alt=""></p>
<h2 id="开启滚轮缩放及禁用双击放大"><a href="#开启滚轮缩放及禁用双击放大" class="headerlink" title="开启滚轮缩放及禁用双击放大"></a>开启滚轮缩放及禁用双击放大</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">map.enableScrollWheelZoom();     //开启鼠标滚轮缩放</div><div class="line">map.disableDoubleClickZoom(<span class="literal">true</span>);//禁用双击放大。</div></pre></td></tr></table></figure>
<h2 id="限制地图显示区域"><a href="#限制地图显示区域" class="headerlink" title="限制地图显示区域"></a>限制地图显示区域</h2><p>超出显示区域自动修改回限制区域，参数需要两个点的坐标，即限制区域地图的左上角和右下角坐标<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//限制区域</div><div class="line">  var b = new BMap.Bounds(new BMap.Point(111.822527, 40.296748), new BMap.Point(114.566024,39.043834));</div><div class="line">  try &#123;</div><div class="line">          BMapLib.AreaRestriction.setBounds(map, b);</div><div class="line">      &#125; catch (e) &#123;</div><div class="line">          alert(e);</div><div class="line">      &#125;</div></pre></td></tr></table></figure></p>
<h2 id="添加行政区域（县、区级别）"><a href="#添加行政区域（县、区级别）" class="headerlink" title="添加行政区域（县、区级别）"></a>添加行政区域（县、区级别）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">getBoundary</span></span>() &#123;</div><div class="line">              var bdary = new BMap.Boundary();</div><div class="line">              bdary.get(<span class="string">"西安市雁塔区"</span>, <span class="keyword">function</span> (rs) &#123;       //获取行政区域</div><div class="line">                  map.clearOverlays();        //清除地图覆盖物       </div><div class="line">                  var count = rs.boundaries.length; //行政区域的点有多少个</div><div class="line">                  <span class="keyword">if</span> (count === 0) &#123;</div><div class="line">                      alert(<span class="string">'未能获取当前输入行政区域'</span>);</div><div class="line">                      <span class="built_in">return</span>;</div><div class="line">                  &#125;</div><div class="line">                  var pointArray = [];</div><div class="line">                  <span class="keyword">for</span> (var i = 0; i &lt; count; i++) &#123;</div><div class="line">                      var ply = new BMap.Polygon(rs.boundaries[i], &#123; strokeWeight: 2, strokeColor: <span class="string">"#ff0000"</span> &#125;); //建立多边形覆盖物</div><div class="line">                      map.addOverlay(ply);  //添加覆盖物</div><div class="line">                      pointArray = pointArray.concat(ply.getPath());</div><div class="line">                  &#125;</div><div class="line">                  map.setViewport(pointArray);    //调整视野                 </div><div class="line">              &#125;);</div><div class="line">          &#125;</div></pre></td></tr></table></figure>
<p><img src="http://i2.buimg.com/4851/4ef2bb7e1d222d65.jpg" alt=""></p>
<h2 id="结合后台获得制定区域并画出"><a href="#结合后台获得制定区域并画出" class="headerlink" title="结合后台获得制定区域并画出"></a>结合后台获得制定区域并画出</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">ShowArea();</div><div class="line">            //读取已有区域</div><div class="line">            <span class="keyword">function</span> <span class="function"><span class="title">ShowArea</span></span>() &#123;</div><div class="line"></div><div class="line">                $.post(<span class="string">"Handler.ashx?action=getAreaData"</span>, <span class="string">""</span>, <span class="keyword">function</span> (data, status) &#123;</div><div class="line">                    //var data = <span class="built_in">eval</span>(dataJSON);</div><div class="line">                    var points = GetPointsArray(data);</div><div class="line">                    var polygon1 = new BMap.Polygon(points, &#123; strokeColor: <span class="string">"blue"</span>, fillColor: <span class="string">"#f0979f"</span>, strokeWeight: 2, strokeOpacity: 0.5, fillOpacity: 0.3 &#125;);  //创建多边形</div><div class="line">                    map.addOverlay(polygon1);   //增加多边形</div><div class="line">                &#125;);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">function</span> GetPointsArray(points) &#123;</div><div class="line">                var pointsArray = points.split(<span class="string">";"</span>);</div><div class="line">                var result = new Array();</div><div class="line">                <span class="keyword">for</span> (var i = 0; i &lt; pointsArray.length; i++) &#123;</div><div class="line">                    result[i] = new BMap.Point(pointsArray[i].split(<span class="string">","</span>)[0], pointsArray[i].split(<span class="string">","</span>)[1]);</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="built_in">return</span> result;</div><div class="line">            &#125;</div></pre></td></tr></table></figure>
<h2 id="后台获得区域（点的集合）"><a href="#后台获得区域（点的集合）" class="headerlink" title="后台获得区域（点的集合）"></a>后台获得区域（点的集合）</h2><p>使用ajax与一般处理程序<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.Linq;</div><div class="line">using System.Web;</div><div class="line"></div><div class="line">namespace WebApplication3</div><div class="line">&#123;</div><div class="line">    /// &lt;summary&gt;</div><div class="line">    /// Handler 的摘要说明</div><div class="line">    /// &lt;/summary&gt;</div><div class="line">    public class Handler : IHttpHandler</div><div class="line">    &#123;</div><div class="line"></div><div class="line">        public void ProcessRequest(HttpContext context)</div><div class="line">        &#123;</div><div class="line">            string action=context.Request[<span class="string">"action"</span>];</div><div class="line">            switch(action)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">case</span> <span class="string">"getAreaData"</span>:</div><div class="line">                    GetAreaData(context);</div><div class="line">                    <span class="built_in">break</span>;</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public void GetAreaData(HttpContext context)</div><div class="line">        &#123;</div><div class="line">            string s = <span class="string">"108.860872, 34.258506;108.831975, 34.258587;108.827325, 34.254061;108.82198, 34.253861;108.821721, 34.242147;108.82502, 34.242241;108.825366, 34.235732;108.828081, 34.235904;108.828549, 34.225515;108.841104, 34.22704;108.836877, 34.210519;108.839338, 34.205291;108.852262, 34.206639;108.852829, 34.18584;108.875588, 34.185636;108.875624, 34.177398;108.980798, 34.177959;109.00823, 34.180186;109.022781, 34.185512;109.039102, 34.182088;109.060345, 34.191182;109.053019, 34.212803;109.056843, 34.243072;109.054189, 34.257263;109.033871, 34.257004;109.036981, 34.256214;109.037215, 34.240337;109.027373, 34.240809;109.027372, 34.243714;109.022632, 34.243735;109.02261, 34.248791;109.002924, 34.248887;108.971729, 34.236415;108.938526, 34.235527;108.897292, 34.253332;108.89572, 34.257881;108.860872, 34.258506"</span>;</div><div class="line">            context.Response.Write(s);</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        public bool IsReusable</div><div class="line">        &#123;</div><div class="line">            get</div><div class="line">            &#123;</div><div class="line">                <span class="built_in">return</span> <span class="literal">false</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="点聚合及批量弹出窗口"><a href="#点聚合及批量弹出窗口" class="headerlink" title="点聚合及批量弹出窗口"></a>点聚合及批量弹出窗口</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">// 百度地图API功能</div><div class="line">           var map = new BMap.Map(<span class="string">"allmap"</span>);</div><div class="line">           map.centerAndZoom(new BMap.Point(116.404, 39.915), 4);</div><div class="line">           map.enableScrollWheelZoom();</div><div class="line"></div><div class="line">           var MAX = 10;</div><div class="line">           var markers = [];</div><div class="line">           var pt = null;</div><div class="line">           var i = 0;</div><div class="line">           <span class="keyword">for</span> (; i &lt; MAX; i++) &#123;</div><div class="line">               pt = new BMap.Point(Math.random() * 40 + 85, Math.random() * 30 + 21);</div><div class="line">               var marker = new BMap.Marker(pt);</div><div class="line">               markers.push(marker);</div><div class="line">               var content1 = <span class="string">'&lt;div style="margin:0;line-height:20px;padding:2px;"&gt;内容&lt;/div&gt;'</span>;</div><div class="line">               markers.push(marker);</div><div class="line">              &lt;span style=<span class="string">"color:#ff0000;"</span>&gt; //使用闭包 这样内容才能显示的不同，否则全部都会只显示最后一个content1的内容&lt;/span&gt;</div><div class="line">               (<span class="keyword">function</span> (content1) &#123;</div><div class="line">                   marker.addEventListener(<span class="string">"click"</span>, <span class="keyword">function</span> (e) &#123;</div><div class="line"></div><div class="line">                       //创建检索信息窗口对象</div><div class="line">                       var searchInfoWindow = null;</div><div class="line">                       searchInfoWindow = new BMapLib.SearchInfoWindow(map, content1, &#123;</div><div class="line">                           title: <span class="string">'信息&lt;a target="_top" onclick="alert(1)" style="margin-left:5px;font-size:12px;line-height:30px;color:#3d6dcc;font-weight:normal;text-decoration:none;cursor:pointer;"&gt;详情»&lt;/a&gt;'</span>,      //标题</div><div class="line">                           width: 250,             //宽度</div><div class="line">                           height: 200,              //高度</div><div class="line">                           panel: <span class="string">"panel"</span>,         //检索结果面板</div><div class="line">                           <span class="built_in">enable</span>AutoPan: <span class="literal">true</span>,     //自动平移</div><div class="line">                           <span class="built_in">enable</span>SendToPhone: <span class="literal">false</span>,//百度发送短信图标</div><div class="line">                           searchTypes: [</div><div class="line">                               //BMAPLIB_TAB_SEARCH,   //周边检索</div><div class="line">                               //BMAPLIB_TAB_TO_HERE,  //到这里去</div><div class="line">                               //BMAPLIB_TAB_FROM_HERE //从这里出发</div><div class="line">                           ]</div><div class="line">                       &#125;);</div><div class="line"></div><div class="line">                       searchInfoWindow.open(e.target);</div><div class="line"></div><div class="line">                   &#125;);</div><div class="line">               &#125;)(content1)</div><div class="line">           &#125;</div><div class="line">      </div><div class="line">           //最简单的用法，生成一个marker数组，然后调用markerClusterer类即可。</div><div class="line">           var markerClusterer = new BMapLib.MarkerClusterer(map, &#123; markers: markers &#125;);</div></pre></td></tr></table></figure>
<p><img src="http://i2.buimg.com/4851/f6830ddc390b1e99.jpg" alt=""><br><img src="http://i2.buimg.com/4851/fad49890bc5afa59.jpg" alt=""></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Log4Net生成空日志文件的解决方法]]></title>
      <url>https://zuoluo11.github.io/2016/09/10/Log4Net%E7%94%9F%E6%88%90%E7%A9%BA%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      <content type="html"><![CDATA[<p>设置Log4Net并自动删除空日志<br><a id="more"></a><br>1、根据网上的配置说明，该配置将记录Error 级别的错误，按照月份分文件夹，按照天来分文件进行日志的记录，<br>完成了配置如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">  &lt;configSections&gt;</div><div class="line">    &lt;section name=<span class="string">"log4net"</span> <span class="built_in">type</span>=<span class="string">"log4net.Config.Log4NetConfigurationSectionHandler, log4net, Version=1.2.11.0, Culture=neutral, PublicKeyToken=1B44E1D426115821"</span> /&gt;</div><div class="line">  &lt;/configSections&gt;</div><div class="line">  &lt;<span class="built_in">log</span>4net&gt;</div><div class="line">    &lt;root&gt;</div><div class="line">      &lt;!--&lt;level value=<span class="string">"DEBUG"</span>/&gt;--&gt;</div><div class="line">      &lt;level value=<span class="string">"ERROR"</span>/&gt;</div><div class="line">      &lt;!--根据<span class="built_in">log</span>级别记录到不同的日志文件--&gt;</div><div class="line">      &lt;!--&lt;appender-ref ref=<span class="string">"DebugLog"</span> /&gt;--&gt;</div><div class="line">      &lt;appender-ref ref=<span class="string">"ErrorLog"</span> /&gt;</div><div class="line">    &lt;/root&gt;</div><div class="line">    &lt;appender name=<span class="string">"ErrorLog"</span> <span class="built_in">type</span>=<span class="string">"log4net.Appender.RollingFileAppender"</span>&gt;</div><div class="line">      &lt;!-- 最后放开注释--&gt;</div><div class="line">      &lt;!--&lt;lockingModel <span class="built_in">type</span>=<span class="string">"命名空间.MinimalLockDeleteEmpty"</span> /&gt;--&gt;</div><div class="line">      &lt;param name=<span class="string">"File"</span> value=<span class="string">"Log\" /&gt;</span></div><div class="line">      &lt;param name="AppendToFile<span class="string">" value="</span><span class="literal">true</span><span class="string">" /&gt;</span></div><div class="line">      &lt;param name="RollingStyle<span class="string">" value="</span>Date<span class="string">" /&gt;</span></div><div class="line">      &lt;param name="DatePattern<span class="string">" value="</span>yyyy-MM\\yyyy-MM-dd.<span class="string">'log'</span><span class="string">" /&gt;</span></div><div class="line">      &lt;param name="StaticLogFileName<span class="string">" value="</span><span class="literal">false</span><span class="string">" /&gt;</span></div><div class="line">      &lt;layout type="<span class="built_in">log</span>4net.Layout.PatternLayout<span class="string">"&gt;</span></div><div class="line">        &lt;conversionPattern value="%date [%thread] %-5level %logger - %message%newline<span class="string">" /&gt;</span></div><div class="line">      &lt;/layout&gt;</div><div class="line">      &lt;securityContext type="<span class="built_in">log</span>4net.Util.WindowsSecurityContext<span class="string">"&gt;</span></div><div class="line">        &lt;credentials value="Process<span class="string">" /&gt;</span></div><div class="line">      &lt;/securityContext&gt;</div><div class="line">      &lt;filter type="<span class="built_in">log</span>4net.Filter.LevelRangeFilter<span class="string">"&gt;</span></div><div class="line">        &lt;levelMin value="ERROR<span class="string">" /&gt;</span></div><div class="line">        &lt;levelMax value="ERROR<span class="string">" /&gt;</span></div><div class="line">      &lt;/filter&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line">  &lt;/log4net&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>2、运行上面的（除红色）的设置后，发现就算没有抛出异常，log4net每天同样会创建一个空的日志文件。<br>3、查找搜索了下国内网站，未发现解决的方法，只是想到如果log4net不支持的化，可以在网站运行后<br>创建一个定时器，每隔一天检查一下对应的日志文件是否有空，有则删除；<br>4、google搜索到国外的网站，发现可以继承<strong>FileAppender.MinimalLock</strong>类 重写<strong>ReleaseLock</strong> 方法 来实现写日志完成后检查空文件并删除的功能。<br><a href="http://stackoverflow.com/questions/2533403/how-to-disable-creation-of-empty-log-file-on-app-start" target="_blank" rel="external">引用地址</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">using <span class="built_in">log</span>4net.Appender;</div><div class="line">using System;</div><div class="line">using System.Collections.Generic;</div><div class="line">using System.IO;</div><div class="line">using System.Linq;</div><div class="line">using System.Text;</div><div class="line"></div><div class="line">namespace 命名空间</div><div class="line">&#123;</div><div class="line">    public class MinimalLockDeleteEmpty : FileAppender.MinimalLock</div><div class="line">    &#123;</div><div class="line">        public override void <span class="function"><span class="title">ReleaseLock</span></span>()</div><div class="line">        &#123;</div><div class="line">            base.ReleaseLock();</div><div class="line"></div><div class="line">            var <span class="built_in">log</span>File = new FileInfo(CurrentAppender.File);</div><div class="line">            <span class="keyword">if</span> (<span class="built_in">log</span>File.Exists &amp;&amp; <span class="built_in">log</span>File.Length &lt;= 0)</div><div class="line">            &#123;</div><div class="line">                <span class="built_in">log</span>File.Delete();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>5、最后在配置文件中将类插入完成调用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;lockingModel <span class="built_in">type</span>=<span class="string">"命名空间.MinimalLockDeleteEmpty"</span> /&gt;</div></pre></td></tr></table></figure></p>
<p>6、最后Log4Net效果就是记录中没有空日志文件且存放服务器时按照月份建文件夹，文件夹内按照日期建日志文件。</p>
]]></content>
    </entry>
    
  
  
</search>
