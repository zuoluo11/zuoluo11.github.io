{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1502702226094},{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1502702226098},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1502702226095},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1502702226098},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1502702226099},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1502702226100},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1502702226099},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1502702226095},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1502702226099},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1502702226100},{"_id":"themes/next/bower.json","hash":"936b9aed1934471bb74cdaacc3fb8031eb01fe23","modified":1502702226102},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1502702226100},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1502702226101},{"_id":"themes/next/package.json","hash":"a5c189d4c4e946e936d3b5e29e2d81ddaf03ff96","modified":1502702226973},{"_id":"source/about/index.md","hash":"5c0b109e86ba604844eee12e63d915d198dc600d","modified":1515140586750},{"_id":"source/_drafts/2018阅读书单.md","hash":"82004bc9b2e7af3c0e7870104d0b4ed7cd093af2","modified":1516583114174},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1502702226103},{"_id":"source/_posts/2017年终总结.md","hash":"e4eeb4ddbcdd1d4d0d8642d99ecf1831287ca4c1","modified":1529388213212},{"_id":"source/_posts/2018计划.md","hash":"ab989d8d5a6102f3444ac222a5916f4d71f070c3","modified":1529388163356},{"_id":"source/_posts/AbstractFactoryPattern.md","hash":"9fcb0315c9845a6cf9fe433adfd03f23caf41842","modified":1516064468020},{"_id":"source/_posts/DecoratorPattern.md","hash":"4b83b458dbb0d79ece62235c9a425897d1be590d","modified":1516065519860},{"_id":"source/_posts/FactoryMethodPattern.md","hash":"963a89635e624b3b0fef72792340569433970450","modified":1516064558761},{"_id":"source/_posts/JS动态创建行.md","hash":"81a9b7b95c814bae534afc89577ae659e089ba70","modified":1502702225750},{"_id":"source/_posts/Log4Net生成空日志文件的解决方法.md","hash":"2de9ca0fb54a124572c33c6882d65ed94c6bd780","modified":1515635527257},{"_id":"source/_posts/NET防止SQL注入.md","hash":"90868d3f6e173e4c114d620cb4b587ca69cf9ab1","modified":1515635286917},{"_id":"source/_posts/PDF操作.md","hash":"40af27a7c49f7bfe789ed96b9b1c8272c0e3e700","modified":1529023273563},{"_id":"source/_posts/RSA加密解密-c-与js版.md","hash":"2f0ae9a7d557793be7013011296dc1c72e43c468","modified":1516095334154},{"_id":"source/_posts/SimpleFactoryPattern.md","hash":"f71a2403244382c883d84d36c8f77787aef9fe89","modified":1516064386405},{"_id":"source/_posts/ZIP压缩-Net与Android相互解压.md","hash":"95777924492ed62be85b374e57e20eb0779dd9f9","modified":1515635561529},{"_id":"source/_posts/aspmvc通用授权.md","hash":"b7a53ab46efdbd5d36b54ee5cba76337745e28e9","modified":1528700355995},{"_id":"source/_posts/c-基础-扩展方法.md","hash":"55e58867b9a6666d0af76d36cf3dc1caa998ec98","modified":1515635636401},{"_id":"source/_posts/hello-world.md","hash":"4b21a7e6b85ba140fb9dc245776ed1f1e08b33da","modified":1502702225758},{"_id":"source/_posts/insurance.md","hash":"99ba4147be48a0fc3a8410307d67e45a86f38572","modified":1529388376268},{"_id":"source/_posts/net动态控制发布IIS网站一.md","hash":"a3464b4e8c0151b1778a5e6322852dc13ce4b0c3","modified":1529388069973},{"_id":"source/_posts/net获得本机可用端口号.md","hash":"be402c2650b35eab08926844ed95a4de08c7da73","modified":1529388075755},{"_id":"source/_posts/window服务守护外部程序.md","hash":"be381931d2975dedd5887663ec4d5cea117e427c","modified":1515635544274},{"_id":"source/_posts/xml序列化.md","hash":"6067bc4309022827ef60916b22281925c297198b","modified":1515635445462},{"_id":"source/_posts/动态调用webservice.md","hash":"9080cb8f603ba3fff3f91042aea9620c5e100890","modified":1515635738849},{"_id":"source/_posts/去除微信昵称中emoji字符.md","hash":"ec168ca582de15d966e0a05a93c8a6a70922096a","modified":1527670491321},{"_id":"source/_posts/周日历实现.md","hash":"d777cc7935005138e821857c193e21449a7736d7","modified":1515635777656},{"_id":"source/_posts/定时任务组件FluentScheduler.md","hash":"bb1cf88f80fa5c0e8a595a4cd7f30974180ab894","modified":1515635406363},{"_id":"source/_posts/微信公众号-发送文本消息.md","hash":"508e0be6a1a8c627c17d6e187690c9e81ae94121","modified":1515635295583},{"_id":"source/_posts/微信公众号集合支付宝支付.md","hash":"856552e19f98273833b7e22c20b48c7f02139c9d","modified":1515635373595},{"_id":"source/_posts/文件上传大小限制.md","hash":"3a2a8e0bc01f96d1f0425f7f51d8b2c0be05915d","modified":1529388088188},{"_id":"source/_posts/枚举使用备忘.md","hash":"1057206c89689579c923a8268e660e8e3b188120","modified":1527665591927},{"_id":"source/_posts/流操作.md","hash":"57c3b7946f4d709e233123f6c5a0fc971e1717ae","modified":1515635273714},{"_id":"source/_posts/浏览器兼容.md","hash":"87936763ec0e1134d35910934066934e4a50cb11","modified":1515635756507},{"_id":"source/_posts/百度地图常用功能的使用.md","hash":"7da0ca730272573d9f50f597223ac172f61f8ea1","modified":1515635717323},{"_id":"source/_posts/进度检查.md","hash":"deeb871e45bdf91fb559f98ccfdba4a612d10b0b","modified":1529388227713},{"_id":"source/categories/index.md","hash":"9a2cb8acbdb95d58dadbf65e664e76e5089486dd","modified":1502702225763},{"_id":"source/tags/index.md","hash":"720af2794b18ab333e0ace6c360140e850ee415d","modified":1502702225764},{"_id":"themes/next/_config.yml","hash":"0a6416aa92ba4e9c019a343e35bca879ceacc194","modified":1515633269624},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1502702226104},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1502702226105},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1502702226105},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1502702226107},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1502702226105},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1502702226109},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1502702226110},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1502702226109},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1502702226111},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1502702226111},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1502702226106},{"_id":"themes/next/layout/_layout.swig","hash":"0f547afe52721ffcbbc32bbf18d1041f1b546685","modified":1502702226113},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1502702226108},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1502702226110},{"_id":"themes/next/layout/schedule.swig","hash":"8086f1163b10460258ecbbbe48b057b22bb2f02e","modified":1502702226972},{"_id":"themes/next/layout/index.swig","hash":"4bf29f44ca9519a005671f2f2a79a48a148b435b","modified":1502702226971},{"_id":"themes/next/layout/page.swig","hash":"22ba721a9688d490fc66f360e5a319288b63b05a","modified":1502702226971},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1502702226974},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1502702226972},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1502702226975},{"_id":"themes/next/layout/category.swig","hash":"f315f12651de8065fdad73b003da4335ef177173","modified":1502702226971},{"_id":"themes/next/layout/tag.swig","hash":"cc9878932580c890f8f3e569225e29bb37e25b49","modified":1502702226972},{"_id":"themes/next/layout/archive.swig","hash":"a1d1e91013baaaeb7deaf35c6d3975971ce38e02","modified":1502702226970},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1502702227130},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1502702227130},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1502702227130},{"_id":"themes/next/source/favicon.ico","hash":"d07d3449a6b62e740ef01e6ac0206b8f31d36487","modified":1515136332400},{"_id":"source/_posts/2017年终总结/20180102145853.jpg","hash":"ccf5e4acd2784207605ab49adc3f4fc4f011fc9f","modified":1514876362038},{"_id":"source/_posts/2017年终总结/20180102151554.jpg","hash":"bc706b4f81ed0f91cb9bc7bd928998b0bad225f6","modified":1514877360991},{"_id":"source/_posts/2017年终总结/20180102162248.jpg","hash":"7fd2705b146fc19040db9590378a11521ad27226","modified":1514881377306},{"_id":"source/_posts/2017年终总结/20180102153048.jpg","hash":"5defd0e4da0976d031ba6c5fb24f2e4abfd66044","modified":1514878261580},{"_id":"source/_posts/2017年终总结/20180102162322.jpg","hash":"2b8601e3b482de4c00b941fbcb6ab5c2d74c1020","modified":1514881406132},{"_id":"source/_posts/2017年终总结/20180102163619.jpg","hash":"b41b8fe852b4ff534a39b26a76bf0615e62db36b","modified":1514882186975},{"_id":"source/_posts/2017年终总结/sitecore.JPG","hash":"4eb140cb48d79fce6284a8e1a561a246171aef2e","modified":1514876657244},{"_id":"source/_posts/AbstractFactoryPattern/20180111104640.jpg","hash":"2632566a475410e848941ee4c76461b83e01863f","modified":1515638812421},{"_id":"source/_posts/2018计划/20180110153158.jpg","hash":"c389abb431fee38d282b7b85764f13419165530f","modified":1515570645933},{"_id":"source/_posts/AbstractFactoryPattern/20180116090042.jpg","hash":"733ce1b39423a7d59c34004cb02e688e3c24c9f4","modified":1516064452748},{"_id":"source/_posts/DecoratorPattern/20180116085436.jpg","hash":"2845a5d537a0f11a511b7046524160ce27d34f9d","modified":1516064087361},{"_id":"source/_posts/FactoryMethodPattern/20180110175538.jpg","hash":"bee4ce301d2555bd75f7fa691464bda9952ef9c1","modified":1515578147783},{"_id":"source/_posts/FactoryMethodPattern/20180116090202.jpg","hash":"dfc836d33c5f517df765070c7b4643f6e6be3547","modified":1516064531591},{"_id":"source/_posts/NET防止SQL注入/Global.png","hash":"6bb176e5d934ad73b3e31929d782375ad46884cf","modified":1512443343840},{"_id":"source/_posts/PDF操作/20180611152915.jpg","hash":"09ddd29082b79c900b5806bfadff7d315f5069a0","modified":1528702179495},{"_id":"source/_posts/SimpleFactoryPattern/20180110165111.jpg","hash":"e2552c8ecacd5f3e4ccb9c33c9ee22fe76851438","modified":1515574285491},{"_id":"source/_posts/NET防止SQL注入/SafeHelper.png","hash":"d168bdcede6fd787206afd85eb984f8fb2506675","modified":1512443304891},{"_id":"source/_posts/aspmvc通用授权/20180530161151.jpg","hash":"25b70c90619bbeeca63d5b9c1adb0729efcd04e7","modified":1527667917739},{"_id":"source/_posts/aspmvc通用授权/20180530161842.jpg","hash":"76d654cb6efd0b1461c63d4871ac2a9a5ad81074","modified":1527668326706},{"_id":"source/_posts/aspmvc通用授权/20180530162310.jpg","hash":"4539c68c2b8afc4240a52b054ba7696c2ed16ac9","modified":1527668623314},{"_id":"source/_posts/aspmvc通用授权/20180530162445.jpg","hash":"99b95deda56ead4acec9e2f6511f3ad6158a1db8","modified":1527668691771},{"_id":"source/_posts/aspmvc通用授权/20180530162916.jpg","hash":"abfdcb8da9eec4b538bf98ba7a20a79b2382dc84","modified":1527668962492},{"_id":"source/_posts/aspmvc通用授权/20180530163018.jpg","hash":"192c4aa4eaff1c8a0e85a1b8a977c035d79ebcc7","modified":1527669024702},{"_id":"source/_posts/SimpleFactoryPattern/20180116085858.jpg","hash":"9c38d63cff3e8133a891afd7fa1f7a19f2d968cf","modified":1516064347784},{"_id":"source/_posts/aspmvc通用授权/sethost.png","hash":"68a41dab5c5c6112bd7b3abfcc182a6e602aa061","modified":1527668844901},{"_id":"source/_posts/aspmvc通用授权/20180530163137.jpg","hash":"65cbbb479f0c3bdf5f3614f9afee0a7f7f62a776","modified":1527669102394},{"_id":"source/_posts/aspmvc通用授权/20180530162838.jpg","hash":"56a16e4b31fffe01dec28568009f65b792612f77","modified":1527668925416},{"_id":"source/_posts/去除微信昵称中emoji字符/20171218174151.png","hash":"a8cdcb8d5db19da76f1295e25e173da14fcc689d","modified":1513590137128},{"_id":"source/_posts/定时任务组件FluentScheduler/20171219164453.png","hash":"4a54134705c09a1a70ddfb955d12125eaff4840d","modified":1513673113082},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1502702227042},{"_id":"source/_posts/进度检查/20180511111324119.jpg","hash":"f8bdb246fb574937108d2b396c325a7ec9617add","modified":1526008423419},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1502702226112},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1502702226112},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1502702226113},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1502702226117},{"_id":"themes/next/layout/_macro/post.swig","hash":"6f3c6078b9dbc238ccf86fb228c24c0b94f67d47","modified":1502702226114},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1502702226116},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"4b029551ddb44c53f895e96cf8ff5ffbe02322fb","modified":1502702226116},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1502702226119},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1502702226118},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1502702226123},{"_id":"themes/next/layout/_partials/head.swig","hash":"09b110f77c415c5b71ebd886771a10bc84b95633","modified":1502702226121},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1502702226123},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1502702226123},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1502702226113},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1502702226124},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1502702226961},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1502702226962},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1502702226964},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1502702226964},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1502702226152},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1502702226153},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1502702226962},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1502702226941},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1502702226976},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1502702226963},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1502702226977},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1502702226977},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1502702226977},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1502702226980},{"_id":"themes/next/scripts/tags/note.js","hash":"fc4958427ca7bdb47a7d830077f432ed824973e4","modified":1502702226981},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1502702226981},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1502702227043},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1502702227045},{"_id":"themes/next/source/images/avatar.jpg","hash":"96b6f8aad9528f6cc125c2b28b611e42f588699f","modified":1502702227044},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1502702227043},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1502702227048},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1502702227045},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1502702227046},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1502702227042},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1502702227046},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1502702227048},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1502702227047},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1502702227047},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1502702227048},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1502702227047},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1502702227049},{"_id":"source/_posts/2017年终总结/IMG_1109.PNG","hash":"a641d77c8e7ea88a4bcdad1944aa7114003707b5","modified":1514881293189},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1502702227049},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1502702226154},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1502702226154},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1502702227023},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1502702227025},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1502702227039},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1502702227041},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1502702227023},{"_id":"source/_posts/2017年终总结/laishixiong.JPG","hash":"235f933d549c4ce2a5ec856867c9cdf3840d0a4f","modified":1514879169201},{"_id":"source/_posts/2017年终总结/book.jpg","hash":"ffce36c2e1d8523d5ef48ccc2d3478e4cf28a1f9","modified":1514878020530},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1502702226122},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1502702226122},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1502702226126},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1502702226126},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1502702226943},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1502702226944},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1502702226949},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1502702226136},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1502702226949},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1502702226126},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1502702226951},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1502702226951},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1502702226952},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1502702226947},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1502702226954},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1502702226953},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1502702226957},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1502702226955},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1502702226948},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1502702226945},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1502702226960},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1502702226956},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"c75024151fc63220e7d01035d8a1aff9affdecc7","modified":1502702226958},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1502702226125},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1502702226125},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1502702226956},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1502702226967},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1502702226968},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1502702226969},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1502702226970},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1502702226155},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1502702226153},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1502702226124},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1502702226950},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1502702227022},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1502702227039},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1502702227025},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1502702227023},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1502702227040},{"_id":"themes/next/source/css/_variables/base.styl","hash":"165e8cf2bd66b28692596635749e253b2840f95c","modified":1502702227041},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1502702227050},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1502702227050},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1502702227051},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1502702227051},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1502702227053},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1502702227052},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1502702227053},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1502702227054},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1502702227055},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1502702227055},{"_id":"themes/next/source/js/src/utils.js","hash":"c976214b8bbaa9512b886bf3687e94696f705e33","modified":1502702227056},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1502702227069},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1502702227081},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1502702227081},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1502702227082},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1502702227084},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1502702227084},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1502702227085},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1502702227086},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1502702227086},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1502702227081},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1502702227102},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"68db2c0bf1064176627199394f25f6dc37ea23ad","modified":1502702227072},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1502702227104},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1502702227104},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1502702227106},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1502702227106},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1502702227107},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1502702227105},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1502702227063},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1502702227105},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1502702227107},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1502702227108},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1502702227110},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1502702227109},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1502702227110},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1502702227109},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1502702227112},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1502702227109},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1502702227114},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1502702227114},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1502702227110},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1502702227111},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1502702227112},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1502702227113},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1502702227115},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1502702227111},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1502702227124},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1502702227128},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1502702227129},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1502702227123},{"_id":"source/_posts/2018计划/15146072072192945.jpg","hash":"02ed8c6097f462ae3b82bfd804eec9f31d180a39","modified":1515571887307},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1502702227103},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1502702227128},{"_id":"source/_posts/2017年终总结/IMG_1108.PNG","hash":"406c8e161f6d2b97c03163c5b6ed2cf58bafa033","modified":1514881295527},{"_id":"source/_posts/2018计划/20180110153516.jpg","hash":"934f722256e43669a31fa9afcf187b8218a5b417","modified":1515570645935},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1502702226982},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1502702226966},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1502702226984},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1502702226984},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1502702226983},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1502702226967},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1502702226984},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1502702226995},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1502702227006},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1502702227021},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1502702227026},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1502702227018},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1502702227021},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1502702227027},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1502702227026},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1502702227020},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1502702227028},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1502702227028},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1502702227034},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1502702227027},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1502702227037},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1502702227037},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1502702227038},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1502702227035},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1502702227030},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1502702227018},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"b51b1f9ee228f2252aa78f17e02e1f21ba9bac39","modified":1502702227030},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1502702227031},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1502702227033},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1502702227032},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1502702227054},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1502702227034},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1502702227017},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1502702227028},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1502702227073},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1502702227063},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"95518d298d3c5c271faec2e4977df9e5dedd5d84","modified":1502702227062},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1502702227073},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1502702227074},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1502702227075},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1502702227075},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1502702227074},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1502702227079},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1502702227083},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1502702227083},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1502702227080},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1502702227079},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1502702227087},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1502702227089},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1502702227090},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1502702227123},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1502702227122},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"524cfca7b6ab135d81ea723d8de06fdf0dbe7e56","modified":1502702227060},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1502702227061},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1502702227101},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1502702227100},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1502702227126},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1502702226986},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1502702226988},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1502702226985},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1502702226992},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1502702226986},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1502702226994},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1502702226991},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1502702226992},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1502702226989},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1502702226987},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1502702226989},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"bfd47a0b3cb643705924e25776cf545c7a61050f","modified":1502702226986},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1502702226997},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1502702226995},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1502702226998},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1502702226998},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1502702226996},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1502702226994},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1502702226990},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"58f9e6aba94733244a87d2ba5966c5a009486509","modified":1502702226998},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1502702227000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1502702227001},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1502702226999},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"268c9704481fdb0b4d1e646196386143990fe235","modified":1502702227001},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1502702227002},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1502702227000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1502702227000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bc08cfb2ef2ff44ba3fc7dffdb2deb01a9d17d15","modified":1502702227001},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1502702227002},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1502702227003},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"658accf8e196721f295003da66941e6d1f7b81b0","modified":1502702226999},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1502702227003},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1502702227005},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1502702227004},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1502702226999},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1502702227008},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1502702227005},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1502702227004},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1502702227010},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1502702227008},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1502702227005},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74019008ba973ab30f0f4a6b3c2cd33c66d3a4b4","modified":1502702227009},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1502702227008},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1502702227014},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1502702227015},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1502702227011},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1502702227016},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1502702227010},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1502702227009},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"eb45ee16051624c6e36a274c0a9538e961f10c4d","modified":1502702227017},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1502702227014},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1502702227015},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1502702227029},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1502702227030},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1502702227033},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1502702227016},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1502702227057},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1502702227057},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1502702227058},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1502702227059},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1502702227076},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1502702227077},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1502702227078},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1502702227077},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1502702227078},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1502702227092},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1502702227094},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1502702227099},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1502702227076},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1502702227068},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1502702227121},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1502702227097},{"_id":"public/search.xml","hash":"5f807a2cd9171e17be7596c28f002df26e1976cf","modified":1529388398970},{"_id":"public/about/index.html","hash":"451e9d585d3ddeb07459015727a57f8c54d8794d","modified":1529388306368},{"_id":"public/categories/index.html","hash":"4cc6b2eb2cf23923bab5c9c6833ce42c254f03c7","modified":1529388405292},{"_id":"public/tags/index.html","hash":"73c89a6a8286008377f1204f92cf5f0a7da6f27c","modified":1529388306371},{"_id":"public/2018/06/11/PDF操作/index.html","hash":"00c54a0e036427d1aec9b38ee10a90ac34c83ec8","modified":1529388306371},{"_id":"public/2018/05/30/枚举使用备忘/index.html","hash":"d71c4021e5039d754e1139f38bba0b1dcf8d9c7c","modified":1529388306371},{"_id":"public/2018/05/11/进度检查/index.html","hash":"23d57f3c2ec017e14c4b965e41551759f8040b67","modified":1529388306371},{"_id":"public/2018/01/22/2018阅读书单/index.html","hash":"838fa5cd3b206fd343180b48d164fdba86d8eda1","modified":1529388306371},{"_id":"public/2018/01/16/DecoratorPattern/index.html","hash":"6e7f8879c2f89d2cafcebec86f992b06047378c2","modified":1529388306372},{"_id":"public/2018/01/11/AbstractFactoryPattern/index.html","hash":"c45897be66a26673ef26dcb02fb8e34e0c6679ef","modified":1529388306372},{"_id":"public/2018/01/10/FactoryMethodPattern/index.html","hash":"7f49b1fb651334cd058995d92b4f53377e20613c","modified":1529388306373},{"_id":"public/2018/01/10/SimpleFactoryPattern/index.html","hash":"f5f7bd7dd1417e5add01cd6bd8514d4447946ef1","modified":1529388306373},{"_id":"public/2018/01/05/2018计划/index.html","hash":"d2740ee65fb730a006207b24860865ac4f39e952","modified":1529388306374},{"_id":"public/2018/01/02/2017年终总结/index.html","hash":"687ff373055bf68c3134fcb74d2d111f435970e8","modified":1529388306374},{"_id":"public/2017/12/19/定时任务组件FluentScheduler/index.html","hash":"a0d25082f28388905671bad3c321366fd18b32d7","modified":1529388306374},{"_id":"public/2017/12/18/去除微信昵称中emoji字符/index.html","hash":"ce55eaa1a61858ea72e619ac6aadb85dc0e295b8","modified":1529388306375},{"_id":"public/2017/12/07/微信公众号-发送文本消息/index.html","hash":"af2bca316960933b65f158f1575f6bafb0a2b506","modified":1529388306375},{"_id":"public/2017/12/05/NET防止SQL注入/index.html","hash":"c5fd6186f6dfa18f46ce3c0b33360908933c27cc","modified":1529388306376},{"_id":"public/2017/11/29/RSA加密解密-c-与js版/index.html","hash":"090aa4421d8fe625c599a62677690eb299917998","modified":1529388306377},{"_id":"public/2017/08/16/xml序列化/index.html","hash":"282a2373ae6be6bd76b77df5974b81bf03364448","modified":1529388306377},{"_id":"public/2017/07/04/微信公众号集合支付宝支付/index.html","hash":"010e4ca8a3766c6df743bfaf79bc972b66d15721","modified":1529388306377},{"_id":"public/2017/06/20/net动态控制发布IIS网站一/index.html","hash":"32dad9ed557f5dae5d2184e0401f21447230cbdc","modified":1529388306377},{"_id":"public/2018/05/30/aspmvc通用授权/index.html","hash":"a84e4644df20595b4e88ba385eb1b8895aa9807e","modified":1529388306377},{"_id":"public/2017/06/19/net获得本机可用端口号/index.html","hash":"a149c265ecde7027dcc3dae54a38de779c33d6e6","modified":1529388306377},{"_id":"public/2017/08/18/流操作/index.html","hash":"d7e884b968049f9264c74fe06d488c01e4edb8d2","modified":1529388306378},{"_id":"public/2017/01/16/周日历实现/index.html","hash":"8ed5237eca9218c99385ef1bad164d48b91b6934","modified":1529388306378},{"_id":"public/2016/12/24/动态调用webservice/index.html","hash":"287a9b85c2abc2cf755e8049cf9a00c8f090eeba","modified":1529388306378},{"_id":"public/2016/12/02/JS动态创建行/index.html","hash":"1aeeb156d1e0c21a0b1c169b8891f6a4d0aba757","modified":1529388306378},{"_id":"public/2016/10/14/浏览器兼容/index.html","hash":"93f840187c57e54815abc1238c5417b450f4e4cd","modified":1529388306378},{"_id":"public/2017/01/21/window服务守护外部程序/index.html","hash":"13a6537c9268bfc77a312bbe40b3fcbc2fbfc222","modified":1529388306379},{"_id":"public/2016/09/12/c-基础-扩展方法/index.html","hash":"df5436d6a214dcb300f0726cc965444ce617d319","modified":1529388306379},{"_id":"public/2016/09/10/百度地图常用功能的使用/index.html","hash":"2e315a4e6faf747c55e97c107149b32f0f14b1cb","modified":1529388306379},{"_id":"public/2016/09/10/Log4Net生成空日志文件的解决方法/index.html","hash":"01970f5d3bfc57af7e5cea94733075205168213f","modified":1529388306379},{"_id":"public/2016/08/10/hello-world/index.html","hash":"840aabfe2db81cf50c682bb4fcd2bcdc110e4d23","modified":1529388306379},{"_id":"public/archives/index.html","hash":"2254ee909b1e8b52ab93b39ce28a297656ba81c6","modified":1529388306379},{"_id":"public/2016/11/15/文件上传大小限制/index.html","hash":"94eb35dec19c84cc7bcc9c5a665878f97698431f","modified":1529388306379},{"_id":"public/archives/page/4/index.html","hash":"3c61dd70b593ffabfd0bd146c9930f37e35efc35","modified":1529388306380},{"_id":"public/archives/2016/index.html","hash":"719e754ff6e3c9ac4976a5fcf0b0c0fe7d38deb0","modified":1529388306380},{"_id":"public/2016/09/28/ZIP压缩-Net与Android相互解压/index.html","hash":"b73ffcbb011435ffbb53adc0e48f994e15940486","modified":1529388306380},{"_id":"public/archives/page/3/index.html","hash":"63e9ed92e885b79a012d95ca54cc9f16453d3c8c","modified":1529388306380},{"_id":"public/archives/page/2/index.html","hash":"2f4b8e8784f919ff79619d23890a65553da31d23","modified":1529388306380},{"_id":"public/archives/2016/08/index.html","hash":"5bf5adbe8aa155629380abecf02367c75e8248d6","modified":1529388306380},{"_id":"public/archives/2016/11/index.html","hash":"8765dc1de3304baee66554bba185bc41b57bab68","modified":1529388306380},{"_id":"public/archives/2017/index.html","hash":"e6376f0cd099fd1b46d9148d7fce5a2b57818c01","modified":1529388306380},{"_id":"public/archives/2016/10/index.html","hash":"f377f0bb76993e684482b2fdd124788276898fd8","modified":1529388306380},{"_id":"public/archives/2017/page/2/index.html","hash":"a47c4ffaf1254e52b7a8d069b94b2020f87a45ee","modified":1529388306380},{"_id":"public/archives/2017/01/index.html","hash":"00b06105d30b5d227e5014dec3773ddd9dcabf53","modified":1529388306380},{"_id":"public/archives/2016/12/index.html","hash":"d3d77cfd47b43e97fbcab6c84eb5935c4088f9c3","modified":1529388306380},{"_id":"public/archives/2016/09/index.html","hash":"85a579982ca14e521a9e7065a942f44f309f86e9","modified":1529388306380},{"_id":"public/archives/2017/07/index.html","hash":"afc6b74ce332f28eabafa08cb5788822a4d68f25","modified":1529388306381},{"_id":"public/archives/2017/08/index.html","hash":"37b0e98cd5c8b9ed8fdf45d9f53f1d398fc40cbd","modified":1529388306381},{"_id":"public/archives/2017/12/index.html","hash":"64b48876836e40b1d41d0f3e5b9bbbabdeddcccf","modified":1529388306381},{"_id":"public/archives/2018/index.html","hash":"bd4741c0ddbe667ae004cde34879099a35269f8c","modified":1529388306381},{"_id":"public/archives/2017/11/index.html","hash":"49114d52c737469d26fa6027f088b9b420929cf3","modified":1529388306381},{"_id":"public/archives/2018/01/index.html","hash":"b27678f4ff98036bd33ee164b3cf8c31d914baa2","modified":1529388306381},{"_id":"public/archives/2018/05/index.html","hash":"cc0cd680f99b4e9b94efbaeccd105f5441de3bdc","modified":1529388306381},{"_id":"public/archives/2018/06/index.html","hash":"086098e49e9f17e364209d035e973c15df5daa62","modified":1529388306381},{"_id":"public/index.html","hash":"db093d9e51952d9f03caa19ebf2fd3da0bb28ec4","modified":1529388405355},{"_id":"public/archives/2017/06/index.html","hash":"ec4b0a44d2467a4fb1008693b5466f548cc29fc0","modified":1529388306381},{"_id":"public/page/3/index.html","hash":"4aad654b0113f5cbabd5f6a4e79b3dc588e8a351","modified":1529388306381},{"_id":"public/page/4/index.html","hash":"984903b49b2ddd7de1a488e19f63e7c436d905d7","modified":1529388306381},{"_id":"public/archives/2018/page/2/index.html","hash":"e76b5e8d4d1e6340e25162ed3b75c46abb2c7afe","modified":1529388306382},{"_id":"public/page/2/index.html","hash":"9fb3dd8c111eb8c5ec1fd7a174c8cdbbb4fcb5b0","modified":1529388306382},{"_id":"public/tags/javascript/index.html","hash":"269e6785c08dcd269941b3d7099b1d754f8944ed","modified":1529388306382},{"_id":"public/tags/easyui/index.html","hash":"22d251286ab88e093d594c309a5ce4b921d02757","modified":1529388306382},{"_id":"public/tags/Log4Net/index.html","hash":"f43f8adc813485ca4009eb07d7eb456b1bd2a178","modified":1529388306382},{"_id":"public/tags/ASP-NET日志/index.html","hash":"871e0ed930e0ecefa9cdc30f445a77d5db4d8ac9","modified":1529388306382},{"_id":"public/tags/空日志删除/index.html","hash":"7c21471ad63bc5dd3edf8c3ccd12317e5dacea67","modified":1529388306382},{"_id":"public/tags/ASP-MVC/index.html","hash":"2160acb66baa36708a4118e9e31eb5c50e29e7db","modified":1529388306382},{"_id":"public/tags/WinForm/index.html","hash":"29849273ef98f81f2c0d4b1aaab01491cad85a04","modified":1529388306382},{"_id":"public/tags/ASP-NET/index.html","hash":"9756eee57b4a69b4c4174f23153ba78d7aa50c1c","modified":1529388306382},{"_id":"public/tags/IIS/index.html","hash":"7819c284df5cd30e0bc6f9697f0787ae727f4b34","modified":1529388306382},{"_id":"public/tags/加密解密/index.html","hash":"9a68b6ec1ae889a4506e281e81a25cd059370036","modified":1529388306382},{"_id":"public/tags/扩展方法/index.html","hash":"c25a798dbf31a68497020bb2b556e390aad422c8","modified":1529388306382},{"_id":"public/tags/c-基础/index.html","hash":"a588c0e6269e2fb79a7737dfcd24d34a2a3f65ca","modified":1529388306383},{"_id":"public/tags/支付宝/index.html","hash":"5d20b00cfb07569de524d694f888d8ed555594e8","modified":1529388306383},{"_id":"public/tags/地图操作/index.html","hash":"c19962b868ea3110843fe2b7147c6e02aa921b2b","modified":1529388306383},{"_id":"public/categories/设计模式/index.html","hash":"afc0ef1b0d77d38b95a2a02dae0cd212f3f044de","modified":1529388306383},{"_id":"public/categories/前端基础/index.html","hash":"dfb2b4536de5a5535f9790c8938018a7aedfc879","modified":1529388306383},{"_id":"public/tags/百度地图/index.html","hash":"2f46b06d66f115ac45ad1e16afb5d27a4b7189b6","modified":1529388306383},{"_id":"public/categories/插件/index.html","hash":"c89ec00b12028d69f7af18ce031f7763fcd5f145","modified":1529388405355},{"_id":"public/tags/浏览器兼容/index.html","hash":"83c10fa5b6319a23b5d6b5766ed6f7ca0109c22a","modified":1529388306383},{"_id":"public/categories/C-基础/index.html","hash":"41bc7a5e86e135ea54edcb6cee3c9820156ea052","modified":1529388306383},{"_id":"public/categories/微信公众号/index.html","hash":"ccf3e4cb6098f55034f56dab3a18067df0e377ac","modified":1529388306383},{"_id":"public/tags/发送消息/index.html","hash":"35d9cfd893f73cb41ce166748ad1cfac576297e5","modified":1529388306383},{"_id":"public/categories/C-基础/page/2/index.html","hash":"eb68f8af849120bb4720042b3b5cc9048bfc6c01","modified":1529388306383},{"_id":"public/2018/06/19/insurance/index.html","hash":"db6215313c93996a5d0d99d520d53606798963c9","modified":1529388405335},{"_id":"public/categories/生活/index.html","hash":"0f3598af514cbd67395585fb4c63da4cca3c8d61","modified":1529388405355},{"_id":"public/favicon.ico","hash":"d07d3449a6b62e740ef01e6ac0206b8f31d36487","modified":1529388306399},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1529388306399},{"_id":"public/images/avatar.jpg","hash":"96b6f8aad9528f6cc125c2b28b611e42f588699f","modified":1529388306399},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1529388306399},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529388306399},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1529388306399},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1529388306399},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1529388306400},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1529388306400},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1529388306400},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1529388306400},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1529388306400},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1529388306400},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1529388306400},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1529388306400},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1529388306400},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1529388306400},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1529388306400},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1529388306400},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1529388306400},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1529388306400},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1529388306401},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1529388306401},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1529388306401},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1529388306401},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1529388306401},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1529388306401},{"_id":"public/2018/01/16/DecoratorPattern/20180116085436.jpg","hash":"2845a5d537a0f11a511b7046524160ce27d34f9d","modified":1529388306401},{"_id":"public/2018/06/11/PDF操作/20180611152915.jpg","hash":"09ddd29082b79c900b5806bfadff7d315f5069a0","modified":1529388306401},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1529388306401},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1529388306401},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1529388306401},{"_id":"public/2018/01/10/FactoryMethodPattern/20180110175538.jpg","hash":"bee4ce301d2555bd75f7fa691464bda9952ef9c1","modified":1529388306401},{"_id":"public/2018/01/10/FactoryMethodPattern/20180116090202.jpg","hash":"dfc836d33c5f517df765070c7b4643f6e6be3547","modified":1529388306401},{"_id":"public/2017/12/05/NET防止SQL注入/SafeHelper.png","hash":"d168bdcede6fd787206afd85eb984f8fb2506675","modified":1529388306401},{"_id":"public/2018/01/11/AbstractFactoryPattern/20180111104640.jpg","hash":"2632566a475410e848941ee4c76461b83e01863f","modified":1529388306402},{"_id":"public/2018/01/11/AbstractFactoryPattern/20180116090042.jpg","hash":"733ce1b39423a7d59c34004cb02e688e3c24c9f4","modified":1529388306402},{"_id":"public/2018/01/05/2018计划/20180110153158.jpg","hash":"c389abb431fee38d282b7b85764f13419165530f","modified":1529388306402},{"_id":"public/2018/01/02/2017年终总结/20180102145853.jpg","hash":"ccf5e4acd2784207605ab49adc3f4fc4f011fc9f","modified":1529388306402},{"_id":"public/2018/01/02/2017年终总结/20180102151554.jpg","hash":"bc706b4f81ed0f91cb9bc7bd928998b0bad225f6","modified":1529388306402},{"_id":"public/2018/01/02/2017年终总结/20180102153048.jpg","hash":"5defd0e4da0976d031ba6c5fb24f2e4abfd66044","modified":1529388306402},{"_id":"public/2018/01/02/2017年终总结/20180102162248.jpg","hash":"7fd2705b146fc19040db9590378a11521ad27226","modified":1529388306402},{"_id":"public/2018/01/02/2017年终总结/20180102162322.jpg","hash":"2b8601e3b482de4c00b941fbcb6ab5c2d74c1020","modified":1529388306402},{"_id":"public/2018/01/02/2017年终总结/20180102163619.jpg","hash":"b41b8fe852b4ff534a39b26a76bf0615e62db36b","modified":1529388306402},{"_id":"public/2017/12/05/NET防止SQL注入/Global.png","hash":"6bb176e5d934ad73b3e31929d782375ad46884cf","modified":1529388306402},{"_id":"public/2018/01/02/2017年终总结/sitecore.JPG","hash":"4eb140cb48d79fce6284a8e1a561a246171aef2e","modified":1529388306404},{"_id":"public/2018/05/11/进度检查/20180511111324119.jpg","hash":"f8bdb246fb574937108d2b396c325a7ec9617add","modified":1529388306404},{"_id":"public/2017/12/18/去除微信昵称中emoji字符/20171218174151.png","hash":"a8cdcb8d5db19da76f1295e25e173da14fcc689d","modified":1529388306404},{"_id":"public/2018/05/30/aspmvc通用授权/20180530161151.jpg","hash":"25b70c90619bbeeca63d5b9c1adb0729efcd04e7","modified":1529388306404},{"_id":"public/2018/05/30/aspmvc通用授权/20180530161842.jpg","hash":"76d654cb6efd0b1461c63d4871ac2a9a5ad81074","modified":1529388306404},{"_id":"public/2018/05/30/aspmvc通用授权/20180530162310.jpg","hash":"4539c68c2b8afc4240a52b054ba7696c2ed16ac9","modified":1529388306404},{"_id":"public/2018/05/30/aspmvc通用授权/20180530162445.jpg","hash":"99b95deda56ead4acec9e2f6511f3ad6158a1db8","modified":1529388306404},{"_id":"public/2018/01/10/SimpleFactoryPattern/20180116085858.jpg","hash":"9c38d63cff3e8133a891afd7fa1f7a19f2d968cf","modified":1529388306404},{"_id":"public/2018/01/10/SimpleFactoryPattern/20180110165111.jpg","hash":"e2552c8ecacd5f3e4ccb9c33c9ee22fe76851438","modified":1529388306404},{"_id":"public/2018/05/30/aspmvc通用授权/20180530162838.jpg","hash":"56a16e4b31fffe01dec28568009f65b792612f77","modified":1529388306404},{"_id":"public/2018/05/30/aspmvc通用授权/20180530162916.jpg","hash":"abfdcb8da9eec4b538bf98ba7a20a79b2382dc84","modified":1529388306405},{"_id":"public/2017/12/19/定时任务组件FluentScheduler/20171219164453.png","hash":"4a54134705c09a1a70ddfb955d12125eaff4840d","modified":1529388306405},{"_id":"public/2018/05/30/aspmvc通用授权/20180530163018.jpg","hash":"192c4aa4eaff1c8a0e85a1b8a977c035d79ebcc7","modified":1529388308570},{"_id":"public/2018/05/30/aspmvc通用授权/sethost.png","hash":"68a41dab5c5c6112bd7b3abfcc182a6e602aa061","modified":1529388308570},{"_id":"public/2018/05/30/aspmvc通用授权/20180530163137.jpg","hash":"65cbbb479f0c3bdf5f3614f9afee0a7f7f62a776","modified":1529388308634},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1529388308634},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1529388308634},{"_id":"public/2018/01/02/2017年终总结/IMG_1109.PNG","hash":"a641d77c8e7ea88a4bcdad1944aa7114003707b5","modified":1529388308634},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1529388308646},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1529388308646},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1529388308646},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1529388308646},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1529388308646},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1529388308646},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1529388308646},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1529388308646},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1529388308646},{"_id":"public/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1529388308646},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1529388308646},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1529388308646},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1529388308646},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1529388308646},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"3587602ad777b031628bb5944864d1a4fcfea4ac","modified":1529388308647},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1529388308647},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1529388308647},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1529388308647},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1529388308647},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1529388308647},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1529388308647},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1529388308647},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1529388308647},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1529388308647},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1529388308647},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1529388308647},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1529388308647},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1529388308647},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1529388308647},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1529388308647},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1529388308647},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1529388308648},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1529388308648},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1529388308648},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1529388308648},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1529388308648},{"_id":"public/css/main.css","hash":"b356da3b15d0b6260a7e0ad9249ec1508d0c1240","modified":1529388308648},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1529388308648},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1529388308648},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1529388308649},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1529388308649},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1529388308649},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1529388308650},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1529388308650},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1529388308650},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1529388308650},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1529388308650},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1529388308650},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1529388308650},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1529388308650},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1529388308650},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1529388308650},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1529388308650},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1529388308650},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1529388308650},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1529388308651},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1529388308651},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1529388308651},{"_id":"public/2018/01/02/2017年终总结/book.jpg","hash":"ffce36c2e1d8523d5ef48ccc2d3478e4cf28a1f9","modified":1529388308651},{"_id":"public/2018/01/02/2017年终总结/laishixiong.JPG","hash":"235f933d549c4ce2a5ec856867c9cdf3840d0a4f","modified":1529388308651},{"_id":"public/2018/01/05/2018计划/15146072072192945.jpg","hash":"02ed8c6097f462ae3b82bfd804eec9f31d180a39","modified":1529388308798},{"_id":"public/2018/01/02/2017年终总结/IMG_1108.PNG","hash":"406c8e161f6d2b97c03163c5b6ed2cf58bafa033","modified":1529388308798},{"_id":"public/2018/01/05/2018计划/20180110153516.jpg","hash":"934f722256e43669a31fa9afcf187b8218a5b417","modified":1529388308798},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1529388308923}],"Category":[{"name":"生活","_id":"cjilaaytk0003ocm7pd01gcfe"},{"name":"设计模式","_id":"cjilaayub000bocm7847urpjd"},{"name":"前端基础","_id":"cjilaayux000locm7nr3tgz1q"},{"name":"插件","_id":"cjilaayv2000uocm732oikkdd"},{"name":"C#基础","_id":"cjilaayv5000xocm7lx8zqfo8"},{"name":"微信公众号","_id":"cjilaayxm001focm70xjnloh5"}],"Data":[],"Page":[{"title":"关于我","date":"2016-09-10T02:57:28.000Z","comments":0,"socail":false,"share":{"on":true,"baidu":null},"_content":"在这里记录、等待未来的自己","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-09-10 10:57:28\ncomments: false\nsocail: false\nshare:\n on: true\n baidu: \n---\n在这里记录、等待未来的自己","updated":"2018-01-05T08:23:06.750Z","path":"about/index.html","layout":"page","_id":"cjilaays30000ocm7mfuji4ay","content":"<p>在这里记录、等待未来的自己</p>\n","excerpt":"","more":"<p>在这里记录、等待未来的自己</p>\n"},{"title":"categories","date":"2016-09-10T02:48:21.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-09-10 10:48:21\ntype: \"categories\"\n---\n","updated":"2017-08-14T09:17:05.763Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjilaaywi0018ocm71ts94o46","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-09-10T02:40:14.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-09-10 10:40:14\ntype: \"tags\"\n---\n","updated":"2017-08-14T09:17:05.764Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjilaaywr001aocm77ke0y4tr","content":"","excerpt":"","more":""}],"Post":[{"title":"2017年终总结","date":"2018-01-02T06:57:40.000Z","_content":"\n\n\n 首先17年年初脑子一抽画了一个脑图，内容就是17年想要完成的事情，该计划只有开始时间和截止时间（2017-01-01至2017-12-31），其他详细执行计划则什么都没有，至于该计划最后能实现到什么程度，则可想而知了。\n {% asset_img 20180102145853.jpg 2017年初计划%}\n<!--more-->\n 对于该计划，总的来说，作为第一个主动指定的年度计划，应该给与自己肯定，但是如何细化计划的实现步骤及改善完成的效果则是18年要改进的了。\n\n 脑图中关于专业的知识除了在工作中用到的需要零星学习之外，基本没有执行（惭愧惭愧），2017年总结下来，可以叫做我的**英语学习元年**。\n\n### 赖世雄美语重头学\n\n全套从音标到高级共七本书。  \n只在上下班途中学习，17年只学习了5本，中级下和高级未进行学习，此外已完成的5本中基本上属于草草了事，部分背过的文章和句子基本上也都忘记的差不多了。学以致用，未学好更别提用。\n{% asset_img laishixiong.JPG 赖世雄美语从头学%}\n\n### 扇贝系列\n\n扇贝是从16年10月16日开始使用的，截止目前已连续打开800多天，2017年全年未曾断过，虽然有许多的水卡存在，但是我还是要给自己祝贺，此前从未有一件事能坚持如此之久。\n下面是参加扇贝2017年新年计划发的证书。\n{% asset_img 20180102151554.jpg 扇贝打卡%}\n英文简版图书（初高中水平）下面这些\n{% asset_img book.jpg 扇贝打卡%}\n\n### 其他英文学习APP\n\n除了扇贝，今年基本上把市面上常见学习软件都装了一遍，包括下面这些，基本都坚持使用最少3个月的时间。\n{% asset_img 20180102162248.jpg 不背单词%}\n{% asset_img 20180102162322.jpg 墨墨%}\n{% asset_img IMG_1108.PNG 百词斩%}\n{% asset_img IMG_1109.PNG 百词斩%}\n\n### 学以致用Sitecore\n\n2017年花了这么多的时间精力，学英语，有什么用？\n本来打算自己学学，看美剧的时候可以看得更带劲，中文始终有翻译不到位的地方，而且眼睛是看字幕的，哪有时间看具体的人物表演啊。\n但是，世事难料，8月份直接一个sitecore的培训就下来了，全英文资料培训教材和考试，直接把我干蒙了。\n赶鸭子上架，没办法，硬着头皮上。最后把自己的第一本英文资料给看完了，把全英文的在线考试过了，对我而言真不容易。\n{% asset_img sitecore.JPG sitecore证书%}\n{% asset_img 20180102163619.jpg sitecore证书%}\n\n### 失败中的失败\n\n软考高级集成项目工程师，这个确实是失败，当时想着能有时间好好复习备考，而实际计划总也赶不上变化，sitecore备考占用其中一部分时间，剩下的一部分时间则是自己东看看西玩玩就浪费掉了，150元就这么打水漂了。明年如何做，自己看着办。\n{% asset_img 20180102153048.jpg 软考%}\n\n### 最后\n18年总体计划，英语继续、专业加把劲、软考通过。\n\n虽说计划赶不上变化，但是该有还得有，计划的目的不是为了逼着你必须要怎样，而是让你知道你目前的处境、状况，应该根据这个状况适时的调整自己，无论是学习还是生活，要活出深度，今年30了十分惭愧，活到这个年纪才体会到别人早早就已经知道的道理，2018加油。\n","source":"_posts/2017年终总结.md","raw":"---\ntitle: 2017年终总结\ndate: 2018-01-02 14:57:40\ntags:\ncategories:\n- 生活\n---\n\n\n\n 首先17年年初脑子一抽画了一个脑图，内容就是17年想要完成的事情，该计划只有开始时间和截止时间（2017-01-01至2017-12-31），其他详细执行计划则什么都没有，至于该计划最后能实现到什么程度，则可想而知了。\n {% asset_img 20180102145853.jpg 2017年初计划%}\n<!--more-->\n 对于该计划，总的来说，作为第一个主动指定的年度计划，应该给与自己肯定，但是如何细化计划的实现步骤及改善完成的效果则是18年要改进的了。\n\n 脑图中关于专业的知识除了在工作中用到的需要零星学习之外，基本没有执行（惭愧惭愧），2017年总结下来，可以叫做我的**英语学习元年**。\n\n### 赖世雄美语重头学\n\n全套从音标到高级共七本书。  \n只在上下班途中学习，17年只学习了5本，中级下和高级未进行学习，此外已完成的5本中基本上属于草草了事，部分背过的文章和句子基本上也都忘记的差不多了。学以致用，未学好更别提用。\n{% asset_img laishixiong.JPG 赖世雄美语从头学%}\n\n### 扇贝系列\n\n扇贝是从16年10月16日开始使用的，截止目前已连续打开800多天，2017年全年未曾断过，虽然有许多的水卡存在，但是我还是要给自己祝贺，此前从未有一件事能坚持如此之久。\n下面是参加扇贝2017年新年计划发的证书。\n{% asset_img 20180102151554.jpg 扇贝打卡%}\n英文简版图书（初高中水平）下面这些\n{% asset_img book.jpg 扇贝打卡%}\n\n### 其他英文学习APP\n\n除了扇贝，今年基本上把市面上常见学习软件都装了一遍，包括下面这些，基本都坚持使用最少3个月的时间。\n{% asset_img 20180102162248.jpg 不背单词%}\n{% asset_img 20180102162322.jpg 墨墨%}\n{% asset_img IMG_1108.PNG 百词斩%}\n{% asset_img IMG_1109.PNG 百词斩%}\n\n### 学以致用Sitecore\n\n2017年花了这么多的时间精力，学英语，有什么用？\n本来打算自己学学，看美剧的时候可以看得更带劲，中文始终有翻译不到位的地方，而且眼睛是看字幕的，哪有时间看具体的人物表演啊。\n但是，世事难料，8月份直接一个sitecore的培训就下来了，全英文资料培训教材和考试，直接把我干蒙了。\n赶鸭子上架，没办法，硬着头皮上。最后把自己的第一本英文资料给看完了，把全英文的在线考试过了，对我而言真不容易。\n{% asset_img sitecore.JPG sitecore证书%}\n{% asset_img 20180102163619.jpg sitecore证书%}\n\n### 失败中的失败\n\n软考高级集成项目工程师，这个确实是失败，当时想着能有时间好好复习备考，而实际计划总也赶不上变化，sitecore备考占用其中一部分时间，剩下的一部分时间则是自己东看看西玩玩就浪费掉了，150元就这么打水漂了。明年如何做，自己看着办。\n{% asset_img 20180102153048.jpg 软考%}\n\n### 最后\n18年总体计划，英语继续、专业加把劲、软考通过。\n\n虽说计划赶不上变化，但是该有还得有，计划的目的不是为了逼着你必须要怎样，而是让你知道你目前的处境、状况，应该根据这个状况适时的调整自己，无论是学习还是生活，要活出深度，今年30了十分惭愧，活到这个年纪才体会到别人早早就已经知道的道理，2018加油。\n","slug":"2017年终总结","published":1,"updated":"2018-06-19T06:03:33.212Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaays60001ocm7n6x0bjte","content":"<p> 首先17年年初脑子一抽画了一个脑图，内容就是17年想要完成的事情，该计划只有开始时间和截止时间（2017-01-01至2017-12-31），其他详细执行计划则什么都没有，至于该计划最后能实现到什么程度，则可想而知了。<br> <img src=\"/2018/01/02/2017年终总结/20180102145853.jpg\" alt=\"2017年初计划\" title=\"2017年初计划\"><br><a id=\"more\"></a><br> 对于该计划，总的来说，作为第一个主动指定的年度计划，应该给与自己肯定，但是如何细化计划的实现步骤及改善完成的效果则是18年要改进的了。</p>\n<p> 脑图中关于专业的知识除了在工作中用到的需要零星学习之外，基本没有执行（惭愧惭愧），2017年总结下来，可以叫做我的<strong>英语学习元年</strong>。</p>\n<h3 id=\"赖世雄美语重头学\"><a href=\"#赖世雄美语重头学\" class=\"headerlink\" title=\"赖世雄美语重头学\"></a>赖世雄美语重头学</h3><p>全套从音标到高级共七本书。<br>只在上下班途中学习，17年只学习了5本，中级下和高级未进行学习，此外已完成的5本中基本上属于草草了事，部分背过的文章和句子基本上也都忘记的差不多了。学以致用，未学好更别提用。<br><img src=\"/2018/01/02/2017年终总结/laishixiong.JPG\" alt=\"赖世雄美语从头学\" title=\"赖世雄美语从头学\"></p>\n<h3 id=\"扇贝系列\"><a href=\"#扇贝系列\" class=\"headerlink\" title=\"扇贝系列\"></a>扇贝系列</h3><p>扇贝是从16年10月16日开始使用的，截止目前已连续打开800多天，2017年全年未曾断过，虽然有许多的水卡存在，但是我还是要给自己祝贺，此前从未有一件事能坚持如此之久。<br>下面是参加扇贝2017年新年计划发的证书。<br><img src=\"/2018/01/02/2017年终总结/20180102151554.jpg\" alt=\"扇贝打卡\" title=\"扇贝打卡\"><br>英文简版图书（初高中水平）下面这些<br><img src=\"/2018/01/02/2017年终总结/book.jpg\" alt=\"扇贝打卡\" title=\"扇贝打卡\"></p>\n<h3 id=\"其他英文学习APP\"><a href=\"#其他英文学习APP\" class=\"headerlink\" title=\"其他英文学习APP\"></a>其他英文学习APP</h3><p>除了扇贝，今年基本上把市面上常见学习软件都装了一遍，包括下面这些，基本都坚持使用最少3个月的时间。<br><img src=\"/2018/01/02/2017年终总结/20180102162248.jpg\" alt=\"不背单词\" title=\"不背单词\"><br><img src=\"/2018/01/02/2017年终总结/20180102162322.jpg\" alt=\"墨墨\" title=\"墨墨\"><br><img src=\"/2018/01/02/2017年终总结/IMG_1108.PNG\" alt=\"百词斩\" title=\"百词斩\"><br><img src=\"/2018/01/02/2017年终总结/IMG_1109.PNG\" alt=\"百词斩\" title=\"百词斩\"></p>\n<h3 id=\"学以致用Sitecore\"><a href=\"#学以致用Sitecore\" class=\"headerlink\" title=\"学以致用Sitecore\"></a>学以致用Sitecore</h3><p>2017年花了这么多的时间精力，学英语，有什么用？<br>本来打算自己学学，看美剧的时候可以看得更带劲，中文始终有翻译不到位的地方，而且眼睛是看字幕的，哪有时间看具体的人物表演啊。<br>但是，世事难料，8月份直接一个sitecore的培训就下来了，全英文资料培训教材和考试，直接把我干蒙了。<br>赶鸭子上架，没办法，硬着头皮上。最后把自己的第一本英文资料给看完了，把全英文的在线考试过了，对我而言真不容易。<br><img src=\"/2018/01/02/2017年终总结/sitecore.JPG\" alt=\"sitecore证书\" title=\"sitecore证书\"><br><img src=\"/2018/01/02/2017年终总结/20180102163619.jpg\" alt=\"sitecore证书\" title=\"sitecore证书\"></p>\n<h3 id=\"失败中的失败\"><a href=\"#失败中的失败\" class=\"headerlink\" title=\"失败中的失败\"></a>失败中的失败</h3><p>软考高级集成项目工程师，这个确实是失败，当时想着能有时间好好复习备考，而实际计划总也赶不上变化，sitecore备考占用其中一部分时间，剩下的一部分时间则是自己东看看西玩玩就浪费掉了，150元就这么打水漂了。明年如何做，自己看着办。<br><img src=\"/2018/01/02/2017年终总结/20180102153048.jpg\" alt=\"软考\" title=\"软考\"></p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>18年总体计划，英语继续、专业加把劲、软考通过。</p>\n<p>虽说计划赶不上变化，但是该有还得有，计划的目的不是为了逼着你必须要怎样，而是让你知道你目前的处境、状况，应该根据这个状况适时的调整自己，无论是学习还是生活，要活出深度，今年30了十分惭愧，活到这个年纪才体会到别人早早就已经知道的道理，2018加油。</p>\n","excerpt":"<p> 首先17年年初脑子一抽画了一个脑图，内容就是17年想要完成的事情，该计划只有开始时间和截止时间（2017-01-01至2017-12-31），其他详细执行计划则什么都没有，至于该计划最后能实现到什么程度，则可想而知了。<br> <img src=\"/2018/01/02/2017年终总结/20180102145853.jpg\" alt=\"2017年初计划\" title=\"2017年初计划\"><br>","more":"<br> 对于该计划，总的来说，作为第一个主动指定的年度计划，应该给与自己肯定，但是如何细化计划的实现步骤及改善完成的效果则是18年要改进的了。</p>\n<p> 脑图中关于专业的知识除了在工作中用到的需要零星学习之外，基本没有执行（惭愧惭愧），2017年总结下来，可以叫做我的<strong>英语学习元年</strong>。</p>\n<h3 id=\"赖世雄美语重头学\"><a href=\"#赖世雄美语重头学\" class=\"headerlink\" title=\"赖世雄美语重头学\"></a>赖世雄美语重头学</h3><p>全套从音标到高级共七本书。<br>只在上下班途中学习，17年只学习了5本，中级下和高级未进行学习，此外已完成的5本中基本上属于草草了事，部分背过的文章和句子基本上也都忘记的差不多了。学以致用，未学好更别提用。<br><img src=\"/2018/01/02/2017年终总结/laishixiong.JPG\" alt=\"赖世雄美语从头学\" title=\"赖世雄美语从头学\"></p>\n<h3 id=\"扇贝系列\"><a href=\"#扇贝系列\" class=\"headerlink\" title=\"扇贝系列\"></a>扇贝系列</h3><p>扇贝是从16年10月16日开始使用的，截止目前已连续打开800多天，2017年全年未曾断过，虽然有许多的水卡存在，但是我还是要给自己祝贺，此前从未有一件事能坚持如此之久。<br>下面是参加扇贝2017年新年计划发的证书。<br><img src=\"/2018/01/02/2017年终总结/20180102151554.jpg\" alt=\"扇贝打卡\" title=\"扇贝打卡\"><br>英文简版图书（初高中水平）下面这些<br><img src=\"/2018/01/02/2017年终总结/book.jpg\" alt=\"扇贝打卡\" title=\"扇贝打卡\"></p>\n<h3 id=\"其他英文学习APP\"><a href=\"#其他英文学习APP\" class=\"headerlink\" title=\"其他英文学习APP\"></a>其他英文学习APP</h3><p>除了扇贝，今年基本上把市面上常见学习软件都装了一遍，包括下面这些，基本都坚持使用最少3个月的时间。<br><img src=\"/2018/01/02/2017年终总结/20180102162248.jpg\" alt=\"不背单词\" title=\"不背单词\"><br><img src=\"/2018/01/02/2017年终总结/20180102162322.jpg\" alt=\"墨墨\" title=\"墨墨\"><br><img src=\"/2018/01/02/2017年终总结/IMG_1108.PNG\" alt=\"百词斩\" title=\"百词斩\"><br><img src=\"/2018/01/02/2017年终总结/IMG_1109.PNG\" alt=\"百词斩\" title=\"百词斩\"></p>\n<h3 id=\"学以致用Sitecore\"><a href=\"#学以致用Sitecore\" class=\"headerlink\" title=\"学以致用Sitecore\"></a>学以致用Sitecore</h3><p>2017年花了这么多的时间精力，学英语，有什么用？<br>本来打算自己学学，看美剧的时候可以看得更带劲，中文始终有翻译不到位的地方，而且眼睛是看字幕的，哪有时间看具体的人物表演啊。<br>但是，世事难料，8月份直接一个sitecore的培训就下来了，全英文资料培训教材和考试，直接把我干蒙了。<br>赶鸭子上架，没办法，硬着头皮上。最后把自己的第一本英文资料给看完了，把全英文的在线考试过了，对我而言真不容易。<br><img src=\"/2018/01/02/2017年终总结/sitecore.JPG\" alt=\"sitecore证书\" title=\"sitecore证书\"><br><img src=\"/2018/01/02/2017年终总结/20180102163619.jpg\" alt=\"sitecore证书\" title=\"sitecore证书\"></p>\n<h3 id=\"失败中的失败\"><a href=\"#失败中的失败\" class=\"headerlink\" title=\"失败中的失败\"></a>失败中的失败</h3><p>软考高级集成项目工程师，这个确实是失败，当时想着能有时间好好复习备考，而实际计划总也赶不上变化，sitecore备考占用其中一部分时间，剩下的一部分时间则是自己东看看西玩玩就浪费掉了，150元就这么打水漂了。明年如何做，自己看着办。<br><img src=\"/2018/01/02/2017年终总结/20180102153048.jpg\" alt=\"软考\" title=\"软考\"></p>\n<h3 id=\"最后\"><a href=\"#最后\" class=\"headerlink\" title=\"最后\"></a>最后</h3><p>18年总体计划，英语继续、专业加把劲、软考通过。</p>\n<p>虽说计划赶不上变化，但是该有还得有，计划的目的不是为了逼着你必须要怎样，而是让你知道你目前的处境、状况，应该根据这个状况适时的调整自己，无论是学习还是生活，要活出深度，今年30了十分惭愧，活到这个年纪才体会到别人早早就已经知道的道理，2018加油。</p>"},{"title":"2018阅读书单","_content":"一月：\n《大话设计模式》\n","source":"_drafts/2018阅读书单.md","raw":"---\ntitle: 2018阅读书单\ntags:\n---\n一月：\n《大话设计模式》\n","slug":"2018阅读书单","published":0,"date":"2018-01-22T01:03:37.912Z","updated":"2018-01-22T01:05:14.174Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaaytg0002ocm75yhbybhk","content":"<p>一月：<br>《大话设计模式》</p>\n","excerpt":"","more":"<p>一月：<br>《大话设计模式》</p>\n"},{"title":"2018计划","date":"2018-01-05T08:36:38.000Z","_content":"{% asset_img 15146072072192945.jpg 你好2018%}\n<!--more-->\n计划分为两部分\n一、英语学习\n1、美语从头学\na.调整学习方式，除了上下班以外，每天要最少抽出1个小时左右看书、复习、阅读（基本保证每天1课新学，其余时间复习）。\n{% asset_img 20180110153158.jpg 赖世雄美语从头学%}\n2、扇贝\na.保证打卡的同时，其余零星时间用来阅读英文简版书籍。\n{% asset_img 20180110153516.jpg 原文书%}\n二、软考\na.先刷一遍视频。\nb.看计算题，刷真题。\nc.写范文的论文。\n\n三、其他\na.育儿\nb.专业方面","source":"_posts/2018计划.md","raw":"---\ntitle: 2018计划\ndate: 2018-01-05 16:36:38\ntags:\ncategories:\n- 生活\n---\n{% asset_img 15146072072192945.jpg 你好2018%}\n<!--more-->\n计划分为两部分\n一、英语学习\n1、美语从头学\na.调整学习方式，除了上下班以外，每天要最少抽出1个小时左右看书、复习、阅读（基本保证每天1课新学，其余时间复习）。\n{% asset_img 20180110153158.jpg 赖世雄美语从头学%}\n2、扇贝\na.保证打卡的同时，其余零星时间用来阅读英文简版书籍。\n{% asset_img 20180110153516.jpg 原文书%}\n二、软考\na.先刷一遍视频。\nb.看计算题，刷真题。\nc.写范文的论文。\n\n三、其他\na.育儿\nb.专业方面","slug":"2018计划","published":1,"updated":"2018-06-19T06:02:43.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayto0004ocm7em2rp61a","content":"<img src=\"/2018/01/05/2018计划/15146072072192945.jpg\" alt=\"你好2018\" title=\"你好2018\">\n<a id=\"more\"></a>\n<p>计划分为两部分<br>一、英语学习<br>1、美语从头学<br>a.调整学习方式，除了上下班以外，每天要最少抽出1个小时左右看书、复习、阅读（基本保证每天1课新学，其余时间复习）。<br><img src=\"/2018/01/05/2018计划/20180110153158.jpg\" alt=\"赖世雄美语从头学\" title=\"赖世雄美语从头学\"><br>2、扇贝<br>a.保证打卡的同时，其余零星时间用来阅读英文简版书籍。<br><img src=\"/2018/01/05/2018计划/20180110153516.jpg\" alt=\"原文书\" title=\"原文书\"><br>二、软考<br>a.先刷一遍视频。<br>b.看计算题，刷真题。<br>c.写范文的论文。</p>\n<p>三、其他<br>a.育儿<br>b.专业方面</p>\n","excerpt":"<img src=\"/2018/01/05/2018计划/15146072072192945.jpg\" alt=\"你好2018\" title=\"你好2018\">","more":"<p>计划分为两部分<br>一、英语学习<br>1、美语从头学<br>a.调整学习方式，除了上下班以外，每天要最少抽出1个小时左右看书、复习、阅读（基本保证每天1课新学，其余时间复习）。<br><img src=\"/2018/01/05/2018计划/20180110153158.jpg\" alt=\"赖世雄美语从头学\" title=\"赖世雄美语从头学\"><br>2、扇贝<br>a.保证打卡的同时，其余零星时间用来阅读英文简版书籍。<br><img src=\"/2018/01/05/2018计划/20180110153516.jpg\" alt=\"原文书\" title=\"原文书\"><br>二、软考<br>a.先刷一遍视频。<br>b.看计算题，刷真题。<br>c.写范文的论文。</p>\n<p>三、其他<br>a.育儿<br>b.专业方面</p>"},{"title":"设计模式-抽象工厂模式","date":"2018-01-11T01:31:49.000Z","_content":" {% asset_img 20180116090042.jpg UML%}\n<!--more-->\n抽象工厂模式一句话：一个工厂抽象类，多个产品抽象类，一个工厂生产一个产品族（多个有关系的产品组合）。\n> {% post_link SimpleFactoryPattern 简单工厂模式： %}一个工厂生产多个产品\n> {% post_link FactoryMethodPattern 工厂方法模式： %}一个工厂生产一个产品\n> 抽象工厂模式：一个工厂生产一个产品族\n\n首先下面有一个关于电脑的工厂方法模式，稍后将它改造为抽象工厂模式。\n\n业务逻辑分析：\na.电脑配件有鼠标、键盘、屏幕。\nb.顾客拿到配件后进行组装使用。\n\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n\n            Parts mouse = new MouseFactory().CreateFruit();\n            mouse.PrintName();\n            Console.WriteLine(\"-------------\");\n            Parts keyboard = new KeyboardFactory().CreateFruit();\n            keyboard.PrintName();\n            Console.WriteLine(\"-------------\");\n            Parts screen = new ScreenFactory().CreateFruit();\n            screen.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 工厂抽象类\n    /// </summary>\n    public abstract class Factory\n    {\n        public abstract Parts CreateFruit();\n    }\n    /// <summary>\n    /// 鼠标工厂类\n    /// </summary>\n    public class MouseFactory : Factory\n    {\n        public override Parts CreateFruit()\n        {\n            return new Mouse();\n        }\n    }\n    /// <summary>\n    /// 键盘工厂类\n    /// </summary>\n    public class KeyboardFactory : Factory\n    {\n        public override Parts CreateFruit()\n        {\n            return new KeyBoard();\n        }\n    }\n    /// <summary>\n    /// 屏幕工厂类\n    /// </summary>\n    public class ScreenFactory : Factory\n    {\n        public override Parts CreateFruit()\n        {\n            return new Screen();\n        }\n    }\n    /// <summary>\n    /// 配件抽象类\n    /// </summary>\n    public abstract class Parts\n    {\n        /// <summary>\n        /// 配件抽象方法\n        /// </summary>\n        public abstract void PrintName();\n    }\n    /// <summary>\n    /// 鼠标类\n    /// </summary>\n    public class Mouse : Parts\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is an mouse.\");\n        }\n    }\n    /// <summary>\n    /// 键盘类\n    /// </summary>\n    public class KeyBoard : Parts\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a keyboard\");\n        }\n    }\n    /// <summary>\n    /// 屏幕类\n    /// </summary>\n    public class Screen : Parts\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a screen\");\n        }\n    }\n\n}\n\n\n```\n问题提出：顾客认为自己配置电脑太累，打算直接购买品牌机。\n很明显：上面的代码中没有体现出各个配件之间的关系且最后由用户进行组装，现在配件内部存在关联关系且由工厂组装好后直接给用户使用。\n此处可以看出横向扩展配件，如加入一个耳机比较容易，如果要加入一个纵向的产品族则很复杂。\n\n业务描述：\na.品牌机的配件都只有该品牌自己的标识，因此各个配件内部都有关系，不会买惠普的电脑里出现联想的鼠标；\nb.顾客现在可以买惠普的也可以买联想的；\n\n\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            Factory factory = new LenovoFactory();\n            factory.CreateKeyboard().PrintName();\n            factory.CreateMouse().PrintName();\n            factory.CreateScreen().PrintName();\n            Console.WriteLine(\"-----切换厂家-----\");\n            factory = new HPFactory();\n            factory.CreateKeyboard().PrintName();\n            factory.CreateMouse().PrintName();\n            factory.CreateScreen().PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 工厂抽象类\n    /// </summary>\n    public abstract class Factory\n    {\n        public abstract MouseBase CreateMouse();\n        public abstract KeyboardBase CreateKeyboard();\n        public abstract ScreenBase CreateScreen();\n    }\n\n    public abstract class MouseBase\n    {\n        public abstract void PrintName();\n    }\n    public abstract class KeyboardBase\n    {\n        public abstract void PrintName();\n    }\n    public abstract class ScreenBase\n    {\n        public abstract void PrintName();\n    }\n\n    /// <summary>\n    /// HP工厂类\n    /// </summary>\n    public class HPFactory : Factory\n    {\n        public override KeyboardBase CreateKeyboard()\n        {\n            return new HPKeyBoard();\n        }\n\n        public override MouseBase CreateMouse()\n        {\n            return new HPMouse();\n\n        }\n\n        public override ScreenBase CreateScreen()\n        {\n            return new HPScreen();\n\n        }\n    }\n\n    /// <summary>\n    /// Lenovo工厂类\n    /// </summary>\n    public class LenovoFactory : Factory\n    {\n        public override KeyboardBase CreateKeyboard()\n        {\n            return new LenovoKeyBoard();\n        }\n\n        public override MouseBase CreateMouse()\n        {\n            return new LenovoMouse();\n\n        }\n\n        public override ScreenBase CreateScreen()\n        {\n            return new LenovoScreen();\n\n        }\n    }\n   \n\n    /// <summary>\n    /// HP鼠标类\n    /// </summary>\n    public class HPMouse : MouseBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is HP鼠标.\");\n        }\n    }\n    /// <summary>\n    /// lenovo鼠标类\n    /// </summary>\n    public class LenovoMouse : MouseBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is lenovo鼠标.\");\n        }\n    }\n    /// <summary>\n    /// HP键盘类\n    /// </summary>\n    public class HPKeyBoard : KeyboardBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is HP键盘\");\n        }\n    }\n    /// <summary>\n    /// Lenovo键盘类\n    /// </summary>\n    public class LenovoKeyBoard : KeyboardBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a Lenovo键盘\");\n        }\n    }\n    /// <summary>\n    /// HP屏幕类\n    /// </summary>\n    public class HPScreen : ScreenBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is HP屏幕\");\n        }\n    }\n    /// <summary>\n    /// Lenovo屏幕类\n    /// </summary>\n    public class LenovoScreen : ScreenBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is Lenovo屏幕\");\n        }\n    }\n}\n\n\n```\n {% asset_img 20180111104640.jpg 运行结果%}\n\n此时，如果想添加一个华硕的计算机，需要做如下修改：\na.创建华硕的配件每个配件都继承该配件的抽象类；\nb.创建华硕的工厂类继承工厂抽象类；\nc.顾客直接创建华硕工厂获得计算机；\n\n[这里的总结的很好：](https://jackal007.gitbooks.io/design_pattern/content/abstract-factory.html)\n>工厂创建一种产品，抽象工厂创建的是一组产品，是一个产品系列。这里要注意的是“系列”的意思，也就是说，抽象工厂创建出的一组产品是成套的。\n>当你发现，有一个接口可以有多种实现的时候，可以考虑使用工厂方法来创建实例。\n>当你返现，有一组接口可以有多种实现方案的时候，可以考虑使用抽象工厂创建实例组。","source":"_posts/AbstractFactoryPattern.md","raw":"---\ntitle: 设计模式-抽象工厂模式\ndate: 2018-01-11 09:31:49\ntags:\ncategories:\n- 设计模式\n---\n {% asset_img 20180116090042.jpg UML%}\n<!--more-->\n抽象工厂模式一句话：一个工厂抽象类，多个产品抽象类，一个工厂生产一个产品族（多个有关系的产品组合）。\n> {% post_link SimpleFactoryPattern 简单工厂模式： %}一个工厂生产多个产品\n> {% post_link FactoryMethodPattern 工厂方法模式： %}一个工厂生产一个产品\n> 抽象工厂模式：一个工厂生产一个产品族\n\n首先下面有一个关于电脑的工厂方法模式，稍后将它改造为抽象工厂模式。\n\n业务逻辑分析：\na.电脑配件有鼠标、键盘、屏幕。\nb.顾客拿到配件后进行组装使用。\n\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n\n            Parts mouse = new MouseFactory().CreateFruit();\n            mouse.PrintName();\n            Console.WriteLine(\"-------------\");\n            Parts keyboard = new KeyboardFactory().CreateFruit();\n            keyboard.PrintName();\n            Console.WriteLine(\"-------------\");\n            Parts screen = new ScreenFactory().CreateFruit();\n            screen.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 工厂抽象类\n    /// </summary>\n    public abstract class Factory\n    {\n        public abstract Parts CreateFruit();\n    }\n    /// <summary>\n    /// 鼠标工厂类\n    /// </summary>\n    public class MouseFactory : Factory\n    {\n        public override Parts CreateFruit()\n        {\n            return new Mouse();\n        }\n    }\n    /// <summary>\n    /// 键盘工厂类\n    /// </summary>\n    public class KeyboardFactory : Factory\n    {\n        public override Parts CreateFruit()\n        {\n            return new KeyBoard();\n        }\n    }\n    /// <summary>\n    /// 屏幕工厂类\n    /// </summary>\n    public class ScreenFactory : Factory\n    {\n        public override Parts CreateFruit()\n        {\n            return new Screen();\n        }\n    }\n    /// <summary>\n    /// 配件抽象类\n    /// </summary>\n    public abstract class Parts\n    {\n        /// <summary>\n        /// 配件抽象方法\n        /// </summary>\n        public abstract void PrintName();\n    }\n    /// <summary>\n    /// 鼠标类\n    /// </summary>\n    public class Mouse : Parts\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is an mouse.\");\n        }\n    }\n    /// <summary>\n    /// 键盘类\n    /// </summary>\n    public class KeyBoard : Parts\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a keyboard\");\n        }\n    }\n    /// <summary>\n    /// 屏幕类\n    /// </summary>\n    public class Screen : Parts\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a screen\");\n        }\n    }\n\n}\n\n\n```\n问题提出：顾客认为自己配置电脑太累，打算直接购买品牌机。\n很明显：上面的代码中没有体现出各个配件之间的关系且最后由用户进行组装，现在配件内部存在关联关系且由工厂组装好后直接给用户使用。\n此处可以看出横向扩展配件，如加入一个耳机比较容易，如果要加入一个纵向的产品族则很复杂。\n\n业务描述：\na.品牌机的配件都只有该品牌自己的标识，因此各个配件内部都有关系，不会买惠普的电脑里出现联想的鼠标；\nb.顾客现在可以买惠普的也可以买联想的；\n\n\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            Factory factory = new LenovoFactory();\n            factory.CreateKeyboard().PrintName();\n            factory.CreateMouse().PrintName();\n            factory.CreateScreen().PrintName();\n            Console.WriteLine(\"-----切换厂家-----\");\n            factory = new HPFactory();\n            factory.CreateKeyboard().PrintName();\n            factory.CreateMouse().PrintName();\n            factory.CreateScreen().PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 工厂抽象类\n    /// </summary>\n    public abstract class Factory\n    {\n        public abstract MouseBase CreateMouse();\n        public abstract KeyboardBase CreateKeyboard();\n        public abstract ScreenBase CreateScreen();\n    }\n\n    public abstract class MouseBase\n    {\n        public abstract void PrintName();\n    }\n    public abstract class KeyboardBase\n    {\n        public abstract void PrintName();\n    }\n    public abstract class ScreenBase\n    {\n        public abstract void PrintName();\n    }\n\n    /// <summary>\n    /// HP工厂类\n    /// </summary>\n    public class HPFactory : Factory\n    {\n        public override KeyboardBase CreateKeyboard()\n        {\n            return new HPKeyBoard();\n        }\n\n        public override MouseBase CreateMouse()\n        {\n            return new HPMouse();\n\n        }\n\n        public override ScreenBase CreateScreen()\n        {\n            return new HPScreen();\n\n        }\n    }\n\n    /// <summary>\n    /// Lenovo工厂类\n    /// </summary>\n    public class LenovoFactory : Factory\n    {\n        public override KeyboardBase CreateKeyboard()\n        {\n            return new LenovoKeyBoard();\n        }\n\n        public override MouseBase CreateMouse()\n        {\n            return new LenovoMouse();\n\n        }\n\n        public override ScreenBase CreateScreen()\n        {\n            return new LenovoScreen();\n\n        }\n    }\n   \n\n    /// <summary>\n    /// HP鼠标类\n    /// </summary>\n    public class HPMouse : MouseBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is HP鼠标.\");\n        }\n    }\n    /// <summary>\n    /// lenovo鼠标类\n    /// </summary>\n    public class LenovoMouse : MouseBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is lenovo鼠标.\");\n        }\n    }\n    /// <summary>\n    /// HP键盘类\n    /// </summary>\n    public class HPKeyBoard : KeyboardBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is HP键盘\");\n        }\n    }\n    /// <summary>\n    /// Lenovo键盘类\n    /// </summary>\n    public class LenovoKeyBoard : KeyboardBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a Lenovo键盘\");\n        }\n    }\n    /// <summary>\n    /// HP屏幕类\n    /// </summary>\n    public class HPScreen : ScreenBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is HP屏幕\");\n        }\n    }\n    /// <summary>\n    /// Lenovo屏幕类\n    /// </summary>\n    public class LenovoScreen : ScreenBase\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is Lenovo屏幕\");\n        }\n    }\n}\n\n\n```\n {% asset_img 20180111104640.jpg 运行结果%}\n\n此时，如果想添加一个华硕的计算机，需要做如下修改：\na.创建华硕的配件每个配件都继承该配件的抽象类；\nb.创建华硕的工厂类继承工厂抽象类；\nc.顾客直接创建华硕工厂获得计算机；\n\n[这里的总结的很好：](https://jackal007.gitbooks.io/design_pattern/content/abstract-factory.html)\n>工厂创建一种产品，抽象工厂创建的是一组产品，是一个产品系列。这里要注意的是“系列”的意思，也就是说，抽象工厂创建出的一组产品是成套的。\n>当你发现，有一个接口可以有多种实现的时候，可以考虑使用工厂方法来创建实例。\n>当你返现，有一组接口可以有多种实现方案的时候，可以考虑使用抽象工厂创建实例组。","slug":"AbstractFactoryPattern","published":1,"updated":"2018-01-16T01:01:08.020Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayts0005ocm7fpwznb06","content":" <img src=\"/2018/01/11/AbstractFactoryPattern/20180116090042.jpg\" alt=\"UML\" title=\"UML\">\n<a id=\"more\"></a>\n<p>抽象工厂模式一句话：一个工厂抽象类，多个产品抽象类，一个工厂生产一个产品族（多个有关系的产品组合）。</p>\n<blockquote>\n<p><a href=\"/2018/01/10/SimpleFactoryPattern/\" title=\"简单工厂模式：\">简单工厂模式：</a>一个工厂生产多个产品<br><a href=\"/2018/01/10/FactoryMethodPattern/\" title=\"工厂方法模式：\">工厂方法模式：</a>一个工厂生产一个产品<br>抽象工厂模式：一个工厂生产一个产品族</p>\n</blockquote>\n<p>首先下面有一个关于电脑的工厂方法模式，稍后将它改造为抽象工厂模式。</p>\n<p>业务逻辑分析：<br>a.电脑配件有鼠标、键盘、屏幕。<br>b.顾客拿到配件后进行组装使用。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">            Parts mouse = <span class=\"keyword\">new</span> MouseFactory().CreateFruit();</div><div class=\"line\">            mouse.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Parts keyboard = <span class=\"keyword\">new</span> KeyboardFactory().CreateFruit();</div><div class=\"line\">            keyboard.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Parts screen = <span class=\"keyword\">new</span> ScreenFactory().CreateFruit();</div><div class=\"line\">            screen.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 工厂抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract Parts <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 鼠标工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> MouseFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Parts <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Mouse();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 键盘工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> KeyboardFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Parts <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> KeyBoard();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 屏幕工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ScreenFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Parts <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Screen();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 配件抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Parts</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 配件抽象方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 鼠标类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Mouse : Parts</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an mouse.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 键盘类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> KeyBoard : Parts</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a keyboard\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 屏幕类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Screen : Parts</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a screen\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>问题提出：顾客认为自己配置电脑太累，打算直接购买品牌机。<br>很明显：上面的代码中没有体现出各个配件之间的关系且最后由用户进行组装，现在配件内部存在关联关系且由工厂组装好后直接给用户使用。<br>此处可以看出横向扩展配件，如加入一个耳机比较容易，如果要加入一个纵向的产品族则很复杂。</p>\n<p>业务描述：<br>a.品牌机的配件都只有该品牌自己的标识，因此各个配件内部都有关系，不会买惠普的电脑里出现联想的鼠标；<br>b.顾客现在可以买惠普的也可以买联想的；</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Factory factory = <span class=\"keyword\">new</span> LenovoFactory();</div><div class=\"line\">            factory.CreateKeyboard().PrintName();</div><div class=\"line\">            factory.CreateMouse().PrintName();</div><div class=\"line\">            factory.CreateScreen().PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-----切换厂家-----\"</span>);</div><div class=\"line\">            factory = <span class=\"keyword\">new</span> HPFactory();</div><div class=\"line\">            factory.CreateKeyboard().PrintName();</div><div class=\"line\">            factory.CreateMouse().PrintName();</div><div class=\"line\">            factory.CreateScreen().PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 工厂抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract MouseBase <span class=\"title\">CreateMouse</span><span class=\"params\">()</span></span>;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract KeyboardBase <span class=\"title\">CreateKeyboard</span><span class=\"params\">()</span></span>;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract ScreenBase <span class=\"title\">CreateScreen</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> MouseBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> KeyboardBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> ScreenBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// HP工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HPFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override KeyboardBase <span class=\"title\">CreateKeyboard</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HPKeyBoard();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override MouseBase <span class=\"title\">CreateMouse</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HPMouse();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override ScreenBase <span class=\"title\">CreateScreen</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HPScreen();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Lenovo工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LenovoFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override KeyboardBase <span class=\"title\">CreateKeyboard</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LenovoKeyBoard();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override MouseBase <span class=\"title\">CreateMouse</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LenovoMouse();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override ScreenBase <span class=\"title\">CreateScreen</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LenovoScreen();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">   </div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// HP鼠标类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HPMouse : MouseBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is HP鼠标.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// lenovo鼠标类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LenovoMouse : MouseBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is lenovo鼠标.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// HP键盘类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HPKeyBoard : KeyboardBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is HP键盘\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Lenovo键盘类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LenovoKeyBoard : KeyboardBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a Lenovo键盘\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// HP屏幕类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HPScreen : ScreenBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is HP屏幕\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Lenovo屏幕类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LenovoScreen : ScreenBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is Lenovo屏幕\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n <img src=\"/2018/01/11/AbstractFactoryPattern/20180111104640.jpg\" alt=\"运行结果\" title=\"运行结果\">\n<p>此时，如果想添加一个华硕的计算机，需要做如下修改：<br>a.创建华硕的配件每个配件都继承该配件的抽象类；<br>b.创建华硕的工厂类继承工厂抽象类；<br>c.顾客直接创建华硕工厂获得计算机；</p>\n<p><a href=\"https://jackal007.gitbooks.io/design_pattern/content/abstract-factory.html\" target=\"_blank\" rel=\"external\">这里的总结的很好：</a></p>\n<blockquote>\n<p>工厂创建一种产品，抽象工厂创建的是一组产品，是一个产品系列。这里要注意的是“系列”的意思，也就是说，抽象工厂创建出的一组产品是成套的。<br>当你发现，有一个接口可以有多种实现的时候，可以考虑使用工厂方法来创建实例。<br>当你返现，有一组接口可以有多种实现方案的时候，可以考虑使用抽象工厂创建实例组。</p>\n</blockquote>\n","excerpt":"<img src=\"/2018/01/11/AbstractFactoryPattern/20180116090042.jpg\" alt=\"UML\" title=\"UML\">","more":"<p>抽象工厂模式一句话：一个工厂抽象类，多个产品抽象类，一个工厂生产一个产品族（多个有关系的产品组合）。</p>\n<blockquote>\n<p><a href=\"/2018/01/10/SimpleFactoryPattern/\" title=\"简单工厂模式：\">简单工厂模式：</a>一个工厂生产多个产品<br><a href=\"/2018/01/10/FactoryMethodPattern/\" title=\"工厂方法模式：\">工厂方法模式：</a>一个工厂生产一个产品<br>抽象工厂模式：一个工厂生产一个产品族</p>\n</blockquote>\n<p>首先下面有一个关于电脑的工厂方法模式，稍后将它改造为抽象工厂模式。</p>\n<p>业务逻辑分析：<br>a.电脑配件有鼠标、键盘、屏幕。<br>b.顾客拿到配件后进行组装使用。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            Parts mouse = <span class=\"keyword\">new</span> MouseFactory().CreateFruit();</div><div class=\"line\">            mouse.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Parts keyboard = <span class=\"keyword\">new</span> KeyboardFactory().CreateFruit();</div><div class=\"line\">            keyboard.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Parts screen = <span class=\"keyword\">new</span> ScreenFactory().CreateFruit();</div><div class=\"line\">            screen.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 工厂抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract Parts <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 鼠标工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> MouseFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Parts <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Mouse();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 键盘工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> KeyboardFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Parts <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> KeyBoard();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 屏幕工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ScreenFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Parts <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Screen();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 配件抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Parts</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 配件抽象方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 鼠标类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Mouse : Parts</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an mouse.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 键盘类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> KeyBoard : Parts</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a keyboard\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 屏幕类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Screen : Parts</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a screen\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>问题提出：顾客认为自己配置电脑太累，打算直接购买品牌机。<br>很明显：上面的代码中没有体现出各个配件之间的关系且最后由用户进行组装，现在配件内部存在关联关系且由工厂组装好后直接给用户使用。<br>此处可以看出横向扩展配件，如加入一个耳机比较容易，如果要加入一个纵向的产品族则很复杂。</p>\n<p>业务描述：<br>a.品牌机的配件都只有该品牌自己的标识，因此各个配件内部都有关系，不会买惠普的电脑里出现联想的鼠标；<br>b.顾客现在可以买惠普的也可以买联想的；</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Factory factory = <span class=\"keyword\">new</span> LenovoFactory();</div><div class=\"line\">            factory.CreateKeyboard().PrintName();</div><div class=\"line\">            factory.CreateMouse().PrintName();</div><div class=\"line\">            factory.CreateScreen().PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-----切换厂家-----\"</span>);</div><div class=\"line\">            factory = <span class=\"keyword\">new</span> HPFactory();</div><div class=\"line\">            factory.CreateKeyboard().PrintName();</div><div class=\"line\">            factory.CreateMouse().PrintName();</div><div class=\"line\">            factory.CreateScreen().PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 工厂抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract MouseBase <span class=\"title\">CreateMouse</span><span class=\"params\">()</span></span>;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract KeyboardBase <span class=\"title\">CreateKeyboard</span><span class=\"params\">()</span></span>;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract ScreenBase <span class=\"title\">CreateScreen</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> MouseBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> KeyboardBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> ScreenBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// HP工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HPFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override KeyboardBase <span class=\"title\">CreateKeyboard</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HPKeyBoard();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override MouseBase <span class=\"title\">CreateMouse</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HPMouse();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override ScreenBase <span class=\"title\">CreateScreen</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HPScreen();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Lenovo工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LenovoFactory : Factory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override KeyboardBase <span class=\"title\">CreateKeyboard</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LenovoKeyBoard();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override MouseBase <span class=\"title\">CreateMouse</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LenovoMouse();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override ScreenBase <span class=\"title\">CreateScreen</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> LenovoScreen();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">   </div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// HP鼠标类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HPMouse : MouseBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is HP鼠标.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// lenovo鼠标类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LenovoMouse : MouseBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is lenovo鼠标.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// HP键盘类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HPKeyBoard : KeyboardBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is HP键盘\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Lenovo键盘类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LenovoKeyBoard : KeyboardBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a Lenovo键盘\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// HP屏幕类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HPScreen : ScreenBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is HP屏幕\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Lenovo屏幕类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LenovoScreen : ScreenBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is Lenovo屏幕\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n <img src=\"/2018/01/11/AbstractFactoryPattern/20180111104640.jpg\" alt=\"运行结果\" title=\"运行结果\">\n<p>此时，如果想添加一个华硕的计算机，需要做如下修改：<br>a.创建华硕的配件每个配件都继承该配件的抽象类；<br>b.创建华硕的工厂类继承工厂抽象类；<br>c.顾客直接创建华硕工厂获得计算机；</p>\n<p><a href=\"https://jackal007.gitbooks.io/design_pattern/content/abstract-factory.html\">这里的总结的很好：</a></p>\n<blockquote>\n<p>工厂创建一种产品，抽象工厂创建的是一组产品，是一个产品系列。这里要注意的是“系列”的意思，也就是说，抽象工厂创建出的一组产品是成套的。<br>当你发现，有一个接口可以有多种实现的时候，可以考虑使用工厂方法来创建实例。<br>当你返现，有一组接口可以有多种实现方案的时候，可以考虑使用抽象工厂创建实例组。</p>\n</blockquote>"},{"title":"设计模式-装饰模式","date":"2018-01-16T00:53:10.000Z","_content":" {% asset_img 20180116085436.jpg 装饰模式%}\n <!--more-->\n1、 装饰者模式，动态地将责任附加到对象上。若要扩展功能，装饰者提供了比继承更加有弹性的替代方案。\n\n2、组合和继承的区别\n\n继承。继承是给一个类添加行为的比较有效的途径。通过使用继承，可以使得子类在拥有自身方法的同时，还可以拥有父类的方法。但是使用继承是静态的，在编译的时候就已经决定了子类的行为，我们不便于控制增加行为的方式和时机。\n\n组合。组合即将一个对象嵌入到另一个对象中，由另一个对象来决定是否引用该对象来扩展自己的行为。这是一种动态的方式，我们可以在应用程序中动态的控制。\n\n与继承相比，组合关系的优势就在于不会破坏类的封装性，且具有较好的松耦合性，可以使系统更加容易维护。但是它的缺点就在于要创建比继承更多的对象。\n\n3、装饰者模式的优缺点\n\n优点\n\na.装饰者模式可以提供比继承更多的灵活性\nb.可以通过一种动态的方式来扩展一个对象的功能，在运行时选择不同的装饰器，从而实现不同的行为。\nc.通过使用不同的具体装饰类以及这些装饰类的排列组合，可以创造出很多不同行为的组合。可以使用多个具体装饰类来装饰同一对象，得到功能更为强大的对象。\nd.具体构件类与具体装饰类可以独立变化，用户可以根据需要增加新的具体构件类和具体装饰类，在使用时再对其进行组合，原有代码无须改变，符合“开闭原则”。\n\n缺点\n\na.会产生很多的小对象，增加了系统的复杂性\nb.这种比继承更加灵活机动的特性，也同时意味着装饰模式比继承更加易于出错，排错也很困难，对于多次装饰的对象，调试时寻找错误可能需要逐级排查，较为烦琐。\n\n4、装饰者的使用场景\n\na.在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责。\nb.需要动态地给一个对象增加功能，这些功能也可以动态地被撤销。  \nc.当不能采用继承的方式对系统进行扩充或者采用继承不利于系统扩展和维护时。\n\n [以上内容来自网络](https://www.cnblogs.com/xinye/p/3910149.html)\n ```C\nusing System;\n\nnamespace SettingPattern4\n{\n    /// <summary>\n    /// Decorator Pattern 装饰模式\n    /// 优点：通过动态的方式为类附加功能\n    /// </summary>\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            Person p = new Student();\n            ConcreteStudent1 c1 = new ConcreteStudent1();\n            ConcreteStudent2 c2 = new ConcreteStudent2();\n\n            c1.SetPerson(p);\n            c2.SetPerson(c1);\n            c2.Operate();\n           \n\n            Console.Read();\n        }\n    }\n\n    public abstract class Person\n    {\n        public abstract void Operate();\n    }\n\n    public class Student : Person\n    {\n        public override void Operate()\n        {\n            Console.WriteLine(\"原始Student操作\");\n        }\n    }\n\n    public abstract class Decorator : Person\n    {\n        private Person person;\n        public void SetPerson(Person person)\n        {\n            this.person = person;\n        }\n        public override void Operate()\n        {\n            if (person != null)\n            {\n                person.Operate();\n            }\n        }\n    }\n\n    public class ConcreteStudent1 : Decorator\n    {\n        public override void Operate()\n        {\n            base.Operate();\n      \n            Console.WriteLine(\"ConcreteStudent1添加操作\");\n        }\n\n        public void Print()\n        {\n            Console.WriteLine(\"ConcreteStudent1 Print\");\n        }\n    }\n    public class ConcreteStudent2 : Decorator\n    {\n\n        public override void Operate()\n        {\n            base.Operate();\n            Console.WriteLine(\"ConcreteStudent2添加操作\");\n        }\n    }\n}\n\n\n\n ```","source":"_posts/DecoratorPattern.md","raw":"---\ntitle: 设计模式-装饰模式\ndate: 2018-01-16 08:53:10\ntags:\ncategories:\n- 设计模式\n---\n {% asset_img 20180116085436.jpg 装饰模式%}\n <!--more-->\n1、 装饰者模式，动态地将责任附加到对象上。若要扩展功能，装饰者提供了比继承更加有弹性的替代方案。\n\n2、组合和继承的区别\n\n继承。继承是给一个类添加行为的比较有效的途径。通过使用继承，可以使得子类在拥有自身方法的同时，还可以拥有父类的方法。但是使用继承是静态的，在编译的时候就已经决定了子类的行为，我们不便于控制增加行为的方式和时机。\n\n组合。组合即将一个对象嵌入到另一个对象中，由另一个对象来决定是否引用该对象来扩展自己的行为。这是一种动态的方式，我们可以在应用程序中动态的控制。\n\n与继承相比，组合关系的优势就在于不会破坏类的封装性，且具有较好的松耦合性，可以使系统更加容易维护。但是它的缺点就在于要创建比继承更多的对象。\n\n3、装饰者模式的优缺点\n\n优点\n\na.装饰者模式可以提供比继承更多的灵活性\nb.可以通过一种动态的方式来扩展一个对象的功能，在运行时选择不同的装饰器，从而实现不同的行为。\nc.通过使用不同的具体装饰类以及这些装饰类的排列组合，可以创造出很多不同行为的组合。可以使用多个具体装饰类来装饰同一对象，得到功能更为强大的对象。\nd.具体构件类与具体装饰类可以独立变化，用户可以根据需要增加新的具体构件类和具体装饰类，在使用时再对其进行组合，原有代码无须改变，符合“开闭原则”。\n\n缺点\n\na.会产生很多的小对象，增加了系统的复杂性\nb.这种比继承更加灵活机动的特性，也同时意味着装饰模式比继承更加易于出错，排错也很困难，对于多次装饰的对象，调试时寻找错误可能需要逐级排查，较为烦琐。\n\n4、装饰者的使用场景\n\na.在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责。\nb.需要动态地给一个对象增加功能，这些功能也可以动态地被撤销。  \nc.当不能采用继承的方式对系统进行扩充或者采用继承不利于系统扩展和维护时。\n\n [以上内容来自网络](https://www.cnblogs.com/xinye/p/3910149.html)\n ```C\nusing System;\n\nnamespace SettingPattern4\n{\n    /// <summary>\n    /// Decorator Pattern 装饰模式\n    /// 优点：通过动态的方式为类附加功能\n    /// </summary>\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            Person p = new Student();\n            ConcreteStudent1 c1 = new ConcreteStudent1();\n            ConcreteStudent2 c2 = new ConcreteStudent2();\n\n            c1.SetPerson(p);\n            c2.SetPerson(c1);\n            c2.Operate();\n           \n\n            Console.Read();\n        }\n    }\n\n    public abstract class Person\n    {\n        public abstract void Operate();\n    }\n\n    public class Student : Person\n    {\n        public override void Operate()\n        {\n            Console.WriteLine(\"原始Student操作\");\n        }\n    }\n\n    public abstract class Decorator : Person\n    {\n        private Person person;\n        public void SetPerson(Person person)\n        {\n            this.person = person;\n        }\n        public override void Operate()\n        {\n            if (person != null)\n            {\n                person.Operate();\n            }\n        }\n    }\n\n    public class ConcreteStudent1 : Decorator\n    {\n        public override void Operate()\n        {\n            base.Operate();\n      \n            Console.WriteLine(\"ConcreteStudent1添加操作\");\n        }\n\n        public void Print()\n        {\n            Console.WriteLine(\"ConcreteStudent1 Print\");\n        }\n    }\n    public class ConcreteStudent2 : Decorator\n    {\n\n        public override void Operate()\n        {\n            base.Operate();\n            Console.WriteLine(\"ConcreteStudent2添加操作\");\n        }\n    }\n}\n\n\n\n ```","slug":"DecoratorPattern","published":1,"updated":"2018-01-16T01:18:39.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaaytx0006ocm7ezajvhlq","content":" <img src=\"/2018/01/16/DecoratorPattern/20180116085436.jpg\" alt=\"装饰模式\" title=\"装饰模式\">\n <a id=\"more\"></a>\n<p>1、 装饰者模式，动态地将责任附加到对象上。若要扩展功能，装饰者提供了比继承更加有弹性的替代方案。</p>\n<p>2、组合和继承的区别</p>\n<p>继承。继承是给一个类添加行为的比较有效的途径。通过使用继承，可以使得子类在拥有自身方法的同时，还可以拥有父类的方法。但是使用继承是静态的，在编译的时候就已经决定了子类的行为，我们不便于控制增加行为的方式和时机。</p>\n<p>组合。组合即将一个对象嵌入到另一个对象中，由另一个对象来决定是否引用该对象来扩展自己的行为。这是一种动态的方式，我们可以在应用程序中动态的控制。</p>\n<p>与继承相比，组合关系的优势就在于不会破坏类的封装性，且具有较好的松耦合性，可以使系统更加容易维护。但是它的缺点就在于要创建比继承更多的对象。</p>\n<p>3、装饰者模式的优缺点</p>\n<p>优点</p>\n<p>a.装饰者模式可以提供比继承更多的灵活性<br>b.可以通过一种动态的方式来扩展一个对象的功能，在运行时选择不同的装饰器，从而实现不同的行为。<br>c.通过使用不同的具体装饰类以及这些装饰类的排列组合，可以创造出很多不同行为的组合。可以使用多个具体装饰类来装饰同一对象，得到功能更为强大的对象。<br>d.具体构件类与具体装饰类可以独立变化，用户可以根据需要增加新的具体构件类和具体装饰类，在使用时再对其进行组合，原有代码无须改变，符合“开闭原则”。</p>\n<p>缺点</p>\n<p>a.会产生很多的小对象，增加了系统的复杂性<br>b.这种比继承更加灵活机动的特性，也同时意味着装饰模式比继承更加易于出错，排错也很困难，对于多次装饰的对象，调试时寻找错误可能需要逐级排查，较为烦琐。</p>\n<p>4、装饰者的使用场景</p>\n<p>a.在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责。<br>b.需要动态地给一个对象增加功能，这些功能也可以动态地被撤销。<br>c.当不能采用继承的方式对系统进行扩充或者采用继承不利于系统扩展和维护时。</p>\n<p> <a href=\"https://www.cnblogs.com/xinye/p/3910149.html\" target=\"_blank\" rel=\"external\">以上内容来自网络</a><br> <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Decorator Pattern 装饰模式</span></div><div class=\"line\">    <span class=\"comment\">/// 优点：通过动态的方式为类附加功能</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Person p = <span class=\"keyword\">new</span> Student();</div><div class=\"line\">            ConcreteStudent1 c1 = <span class=\"keyword\">new</span> ConcreteStudent1();</div><div class=\"line\">            ConcreteStudent2 c2 = <span class=\"keyword\">new</span> ConcreteStudent2();</div><div class=\"line\"></div><div class=\"line\">            c1.SetPerson(p);</div><div class=\"line\">            c2.SetPerson(c1);</div><div class=\"line\">            c2.Operate();</div><div class=\"line\">           </div><div class=\"line\"></div><div class=\"line\">            Console.Read();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Person</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Student : Person</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"原始Student操作\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Decorator : Person</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> Person person;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">SetPerson</span><span class=\"params\">(Person person)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.person = person;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (person != null)</div><div class=\"line\">            &#123;</div><div class=\"line\">                person.Operate();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ConcreteStudent1 : Decorator</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            base.Operate();</div><div class=\"line\">      </div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"ConcreteStudent1添加操作\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"ConcreteStudent1 Print\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ConcreteStudent2 : Decorator</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            base.Operate();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"ConcreteStudent2添加操作\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<img src=\"/2018/01/16/DecoratorPattern/20180116085436.jpg\" alt=\"装饰模式\" title=\"装饰模式\">","more":"<p>1、 装饰者模式，动态地将责任附加到对象上。若要扩展功能，装饰者提供了比继承更加有弹性的替代方案。</p>\n<p>2、组合和继承的区别</p>\n<p>继承。继承是给一个类添加行为的比较有效的途径。通过使用继承，可以使得子类在拥有自身方法的同时，还可以拥有父类的方法。但是使用继承是静态的，在编译的时候就已经决定了子类的行为，我们不便于控制增加行为的方式和时机。</p>\n<p>组合。组合即将一个对象嵌入到另一个对象中，由另一个对象来决定是否引用该对象来扩展自己的行为。这是一种动态的方式，我们可以在应用程序中动态的控制。</p>\n<p>与继承相比，组合关系的优势就在于不会破坏类的封装性，且具有较好的松耦合性，可以使系统更加容易维护。但是它的缺点就在于要创建比继承更多的对象。</p>\n<p>3、装饰者模式的优缺点</p>\n<p>优点</p>\n<p>a.装饰者模式可以提供比继承更多的灵活性<br>b.可以通过一种动态的方式来扩展一个对象的功能，在运行时选择不同的装饰器，从而实现不同的行为。<br>c.通过使用不同的具体装饰类以及这些装饰类的排列组合，可以创造出很多不同行为的组合。可以使用多个具体装饰类来装饰同一对象，得到功能更为强大的对象。<br>d.具体构件类与具体装饰类可以独立变化，用户可以根据需要增加新的具体构件类和具体装饰类，在使用时再对其进行组合，原有代码无须改变，符合“开闭原则”。</p>\n<p>缺点</p>\n<p>a.会产生很多的小对象，增加了系统的复杂性<br>b.这种比继承更加灵活机动的特性，也同时意味着装饰模式比继承更加易于出错，排错也很困难，对于多次装饰的对象，调试时寻找错误可能需要逐级排查，较为烦琐。</p>\n<p>4、装饰者的使用场景</p>\n<p>a.在不影响其他对象的情况下，以动态、透明的方式给单个对象添加职责。<br>b.需要动态地给一个对象增加功能，这些功能也可以动态地被撤销。<br>c.当不能采用继承的方式对系统进行扩充或者采用继承不利于系统扩展和维护时。</p>\n<p> <a href=\"https://www.cnblogs.com/xinye/p/3910149.html\">以上内容来自网络</a><br> <figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Decorator Pattern 装饰模式</span></div><div class=\"line\">    <span class=\"comment\">/// 优点：通过动态的方式为类附加功能</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Person p = <span class=\"keyword\">new</span> Student();</div><div class=\"line\">            ConcreteStudent1 c1 = <span class=\"keyword\">new</span> ConcreteStudent1();</div><div class=\"line\">            ConcreteStudent2 c2 = <span class=\"keyword\">new</span> ConcreteStudent2();</div><div class=\"line\"></div><div class=\"line\">            c1.SetPerson(p);</div><div class=\"line\">            c2.SetPerson(c1);</div><div class=\"line\">            c2.Operate();</div><div class=\"line\">           </div><div class=\"line\"></div><div class=\"line\">            Console.Read();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Person</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Student : Person</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"原始Student操作\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Decorator : Person</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> Person person;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">SetPerson</span><span class=\"params\">(Person person)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.person = person;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (person != null)</div><div class=\"line\">            &#123;</div><div class=\"line\">                person.Operate();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ConcreteStudent1 : Decorator</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            base.Operate();</div><div class=\"line\">      </div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"ConcreteStudent1添加操作\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Print</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"ConcreteStudent1 Print\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ConcreteStudent2 : Decorator</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">Operate</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            base.Operate();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"ConcreteStudent2添加操作\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"JS动态创建行","date":"2016-12-02T05:56:30.000Z","_content":"JS在前台动态创建表格行，行的数量按照用户来定，行内有select下拉框、文本框或者是easyui-combobox组合框。\n文本框增加数字验证。\n<!--more-->\n需要做如图的报表\n\n![报表图片][1]\n  [1]: http://p1.bqimg.com/4851/7b01293160fe36b3.png\n\n1、js代码\n```javascript\n//添加空行\n        function addRow() {\n            var rowNum = $(\".firmRow\").length;\n            //增加第一行\n            var $newRow = $(\".firmRow:first\").clone();\n            $newRow.removeClass(\"hideFirmRow\");\n            //修改名称\n//          $newRow.find(\"select\").attr(\"name\", \"cFirmGuid\" + rowNum); //普通select下拉框\n            //easyui-combobox组合框控件\n            $newRow.find(\"td:eq(0)\").html(\"<select class='easyui-combobox' name='cFirmGuid\" + rowNum + \"' style='width:100%;'></select>\"); \n            $newRow.find(\"input:eq(0)\").attr(\"name\", \"cContactAdd\" + rowNum);\n            $newRow.find(\"input:eq(1)\").attr(\"name\", \"cIllegality\" + rowNum);\n            $newRow.find(\"input:eq(2)\").attr(\"name\", \"iIssueNum\" + rowNum);\n            $newRow.find(\"input:eq(3)\").attr(\"name\", \"cSituation\" + rowNum);\n            $(\"#JDJLK\").before($newRow);\n            $newRow.find(\".easyui-combobox\").combobox({\n                valueField: 'cEnterpriseGUID',\n                textField: 'cEnterpriseName',\n                data: res,\n                onChange: function (newValue, oldValue) {\n                    //获得企业地址\n                    changeEnterprise(newValue, rowNum);//修改下拉框值后，触发事件\n                }\n            });\n\n        }\n```\n\n2、HTML代码\n```html\t\t\t\t\t\t\n\t<table>\n\t<tr class=\"firmRow hideFirmRow\">\n\t    <td colspan=\"2\">\n\t\t<select class=\"easyui-combobox\" style=\"width:100%;\">\n\t\t</select>\n\t    </td>\n\t    <td colspan=\"2\">\n\t\t<asp:TextBox runat=\"server\" />\n\t    </td>\n\t    <td colspan=\"4\">\n\t\t<asp:TextBox runat=\"server\" />\n\t    </td>\n\t    <td>\n\t      \n\t\t<asp:TextBox runat=\"server\" onkeyup=\"if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\\D/g,'')}\"\n\t\t    onafterpaste=\"if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\\D/g,'')}\" />\n\t    </td>\n\t    <td colspan=\"3\">\n\t\t<asp:TextBox runat=\"server\" />\n\t    </td>\n\t</tr>\n\t</table>\n```\n3、firmRow表示是第一行，hideFirmRow用来将第一行隐藏\n当需要创建行时，直接使用jquery的Clone，将firmRow克隆然后设置值就好了，方便操作。\n```\n var $newRow = $(\".firmRow:first\").clone();\n```\n4、其中文本控件增加了JS验证，只能输入数字\n```\n<asp:TextBox runat=\"server\" onkeyup=\"if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\\D/g,'')}\"\nonafterpaste=\"if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\\D/g,'')}\" />\n```\n\n5、easyui-combobox 绑定初始化\n```\n\t    $(\".easyui-combobox\").combobox({\n\t\tvalueField: '值列名',\n\t\ttextField: '文本列名',\n\t\tdata: res //res是JSON对象\n\t    });\n```","source":"_posts/JS动态创建行.md","raw":"---\ntitle: JS动态创建行\ndate: 2016-12-02 13:56:30\ncategories: \n- 前端基础\ntags:\n- javascript \n- easyui\n---\nJS在前台动态创建表格行，行的数量按照用户来定，行内有select下拉框、文本框或者是easyui-combobox组合框。\n文本框增加数字验证。\n<!--more-->\n需要做如图的报表\n\n![报表图片][1]\n  [1]: http://p1.bqimg.com/4851/7b01293160fe36b3.png\n\n1、js代码\n```javascript\n//添加空行\n        function addRow() {\n            var rowNum = $(\".firmRow\").length;\n            //增加第一行\n            var $newRow = $(\".firmRow:first\").clone();\n            $newRow.removeClass(\"hideFirmRow\");\n            //修改名称\n//          $newRow.find(\"select\").attr(\"name\", \"cFirmGuid\" + rowNum); //普通select下拉框\n            //easyui-combobox组合框控件\n            $newRow.find(\"td:eq(0)\").html(\"<select class='easyui-combobox' name='cFirmGuid\" + rowNum + \"' style='width:100%;'></select>\"); \n            $newRow.find(\"input:eq(0)\").attr(\"name\", \"cContactAdd\" + rowNum);\n            $newRow.find(\"input:eq(1)\").attr(\"name\", \"cIllegality\" + rowNum);\n            $newRow.find(\"input:eq(2)\").attr(\"name\", \"iIssueNum\" + rowNum);\n            $newRow.find(\"input:eq(3)\").attr(\"name\", \"cSituation\" + rowNum);\n            $(\"#JDJLK\").before($newRow);\n            $newRow.find(\".easyui-combobox\").combobox({\n                valueField: 'cEnterpriseGUID',\n                textField: 'cEnterpriseName',\n                data: res,\n                onChange: function (newValue, oldValue) {\n                    //获得企业地址\n                    changeEnterprise(newValue, rowNum);//修改下拉框值后，触发事件\n                }\n            });\n\n        }\n```\n\n2、HTML代码\n```html\t\t\t\t\t\t\n\t<table>\n\t<tr class=\"firmRow hideFirmRow\">\n\t    <td colspan=\"2\">\n\t\t<select class=\"easyui-combobox\" style=\"width:100%;\">\n\t\t</select>\n\t    </td>\n\t    <td colspan=\"2\">\n\t\t<asp:TextBox runat=\"server\" />\n\t    </td>\n\t    <td colspan=\"4\">\n\t\t<asp:TextBox runat=\"server\" />\n\t    </td>\n\t    <td>\n\t      \n\t\t<asp:TextBox runat=\"server\" onkeyup=\"if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\\D/g,'')}\"\n\t\t    onafterpaste=\"if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\\D/g,'')}\" />\n\t    </td>\n\t    <td colspan=\"3\">\n\t\t<asp:TextBox runat=\"server\" />\n\t    </td>\n\t</tr>\n\t</table>\n```\n3、firmRow表示是第一行，hideFirmRow用来将第一行隐藏\n当需要创建行时，直接使用jquery的Clone，将firmRow克隆然后设置值就好了，方便操作。\n```\n var $newRow = $(\".firmRow:first\").clone();\n```\n4、其中文本控件增加了JS验证，只能输入数字\n```\n<asp:TextBox runat=\"server\" onkeyup=\"if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\\D/g,'')}\"\nonafterpaste=\"if(this.value.length==1){this.value=this.value.replace(/[^1-9]/g,'')}else{this.value=this.value.replace(/\\D/g,'')}\" />\n```\n\n5、easyui-combobox 绑定初始化\n```\n\t    $(\".easyui-combobox\").combobox({\n\t\tvalueField: '值列名',\n\t\ttextField: '文本列名',\n\t\tdata: res //res是JSON对象\n\t    });\n```","slug":"JS动态创建行","published":1,"updated":"2017-08-14T09:17:05.750Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayu20008ocm73dd4z79p","content":"<p>JS在前台动态创建表格行，行的数量按照用户来定，行内有select下拉框、文本框或者是easyui-combobox组合框。<br>文本框增加数字验证。<br><a id=\"more\"></a><br>需要做如图的报表</p>\n<p><img src=\"http://p1.bqimg.com/4851/7b01293160fe36b3.png\" alt=\"报表图片\"></p>\n<p>1、js代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//添加空行</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addRow</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> rowNum = $(<span class=\"string\">\".firmRow\"</span>).length;</div><div class=\"line\">            <span class=\"comment\">//增加第一行</span></div><div class=\"line\">            <span class=\"keyword\">var</span> $newRow = $(<span class=\"string\">\".firmRow:first\"</span>).clone();</div><div class=\"line\">            $newRow.removeClass(<span class=\"string\">\"hideFirmRow\"</span>);</div><div class=\"line\">            <span class=\"comment\">//修改名称</span></div><div class=\"line\"><span class=\"comment\">//          $newRow.find(\"select\").attr(\"name\", \"cFirmGuid\" + rowNum); //普通select下拉框</span></div><div class=\"line\">            <span class=\"comment\">//easyui-combobox组合框控件</span></div><div class=\"line\">            $newRow.find(<span class=\"string\">\"td:eq(0)\"</span>).html(<span class=\"string\">\"&lt;select class='easyui-combobox' name='cFirmGuid\"</span> + rowNum + <span class=\"string\">\"' style='width:100%;'&gt;&lt;/select&gt;\"</span>); </div><div class=\"line\">            $newRow.find(<span class=\"string\">\"input:eq(0)\"</span>).attr(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"cContactAdd\"</span> + rowNum);</div><div class=\"line\">            $newRow.find(<span class=\"string\">\"input:eq(1)\"</span>).attr(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"cIllegality\"</span> + rowNum);</div><div class=\"line\">            $newRow.find(<span class=\"string\">\"input:eq(2)\"</span>).attr(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"iIssueNum\"</span> + rowNum);</div><div class=\"line\">            $newRow.find(<span class=\"string\">\"input:eq(3)\"</span>).attr(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"cSituation\"</span> + rowNum);</div><div class=\"line\">            $(<span class=\"string\">\"#JDJLK\"</span>).before($newRow);</div><div class=\"line\">            $newRow.find(<span class=\"string\">\".easyui-combobox\"</span>).combobox(&#123;</div><div class=\"line\">                <span class=\"attr\">valueField</span>: <span class=\"string\">'cEnterpriseGUID'</span>,</div><div class=\"line\">                <span class=\"attr\">textField</span>: <span class=\"string\">'cEnterpriseName'</span>,</div><div class=\"line\">                <span class=\"attr\">data</span>: res,</div><div class=\"line\">                <span class=\"attr\">onChange</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newValue, oldValue</span>) </span>&#123;</div><div class=\"line\">                    <span class=\"comment\">//获得企业地址</span></div><div class=\"line\">                    changeEnterprise(newValue, rowNum);<span class=\"comment\">//修改下拉框值后，触发事件</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure></p>\n<p>2、HTML代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">\"firmRow hideFirmRow\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">class</span>=<span class=\"string\">\"easyui-combobox\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100%;\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"4\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">      </div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"if(this.value.length==1)&#123;this.value=this.value.replace(/[^1-9]/g,'')&#125;else&#123;this.value=this.value.replace(/\\D/g,'')&#125;\"</span></span></div><div class=\"line\">\t    <span class=\"attr\">onafterpaste</span>=<span class=\"string\">\"if(this.value.length==1)&#123;this.value=this.value.replace(/[^1-9]/g,'')&#125;else&#123;this.value=this.value.replace(/\\D/g,'')&#125;\"</span> /&gt;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"3\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>3、firmRow表示是第一行，hideFirmRow用来将第一行隐藏<br>当需要创建行时，直接使用jquery的Clone，将firmRow克隆然后设置值就好了，方便操作。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">var $newRow = $(&quot;.firmRow:first&quot;).clone();</div></pre></td></tr></table></figure></p>\n<p>4、其中文本控件增加了JS验证，只能输入数字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;asp:TextBox runat=&quot;server&quot; onkeyup=&quot;if(this.value.length==1)&#123;this.value=this.value.replace(/[^1-9]/g,&apos;&apos;)&#125;else&#123;this.value=this.value.replace(/\\D/g,&apos;&apos;)&#125;&quot;</div><div class=\"line\">onafterpaste=&quot;if(this.value.length==1)&#123;this.value=this.value.replace(/[^1-9]/g,&apos;&apos;)&#125;else&#123;this.value=this.value.replace(/\\D/g,&apos;&apos;)&#125;&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>5、easyui-combobox 绑定初始化<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">   $(&quot;.easyui-combobox&quot;).combobox(&#123;</div><div class=\"line\">valueField: &apos;值列名&apos;,</div><div class=\"line\">textField: &apos;文本列名&apos;,</div><div class=\"line\">data: res //res是JSON对象</div><div class=\"line\">   &#125;);</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>JS在前台动态创建表格行，行的数量按照用户来定，行内有select下拉框、文本框或者是easyui-combobox组合框。<br>文本框增加数字验证。<br>","more":"<br>需要做如图的报表</p>\n<p><img src=\"http://p1.bqimg.com/4851/7b01293160fe36b3.png\" alt=\"报表图片\"></p>\n<p>1、js代码<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//添加空行</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addRow</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">var</span> rowNum = $(<span class=\"string\">\".firmRow\"</span>).length;</div><div class=\"line\">            <span class=\"comment\">//增加第一行</span></div><div class=\"line\">            <span class=\"keyword\">var</span> $newRow = $(<span class=\"string\">\".firmRow:first\"</span>).clone();</div><div class=\"line\">            $newRow.removeClass(<span class=\"string\">\"hideFirmRow\"</span>);</div><div class=\"line\">            <span class=\"comment\">//修改名称</span></div><div class=\"line\"><span class=\"comment\">//          $newRow.find(\"select\").attr(\"name\", \"cFirmGuid\" + rowNum); //普通select下拉框</span></div><div class=\"line\">            <span class=\"comment\">//easyui-combobox组合框控件</span></div><div class=\"line\">            $newRow.find(<span class=\"string\">\"td:eq(0)\"</span>).html(<span class=\"string\">\"&lt;select class='easyui-combobox' name='cFirmGuid\"</span> + rowNum + <span class=\"string\">\"' style='width:100%;'&gt;&lt;/select&gt;\"</span>); </div><div class=\"line\">            $newRow.find(<span class=\"string\">\"input:eq(0)\"</span>).attr(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"cContactAdd\"</span> + rowNum);</div><div class=\"line\">            $newRow.find(<span class=\"string\">\"input:eq(1)\"</span>).attr(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"cIllegality\"</span> + rowNum);</div><div class=\"line\">            $newRow.find(<span class=\"string\">\"input:eq(2)\"</span>).attr(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"iIssueNum\"</span> + rowNum);</div><div class=\"line\">            $newRow.find(<span class=\"string\">\"input:eq(3)\"</span>).attr(<span class=\"string\">\"name\"</span>, <span class=\"string\">\"cSituation\"</span> + rowNum);</div><div class=\"line\">            $(<span class=\"string\">\"#JDJLK\"</span>).before($newRow);</div><div class=\"line\">            $newRow.find(<span class=\"string\">\".easyui-combobox\"</span>).combobox(&#123;</div><div class=\"line\">                <span class=\"attr\">valueField</span>: <span class=\"string\">'cEnterpriseGUID'</span>,</div><div class=\"line\">                <span class=\"attr\">textField</span>: <span class=\"string\">'cEnterpriseName'</span>,</div><div class=\"line\">                <span class=\"attr\">data</span>: res,</div><div class=\"line\">                <span class=\"attr\">onChange</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">newValue, oldValue</span>) </span>&#123;</div><div class=\"line\">                    <span class=\"comment\">//获得企业地址</span></div><div class=\"line\">                    changeEnterprise(newValue, rowNum);<span class=\"comment\">//修改下拉框值后，触发事件</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure></p>\n<p>2、HTML代码<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">\"firmRow hideFirmRow\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">select</span> <span class=\"attr\">class</span>=<span class=\"string\">\"easyui-combobox\"</span> <span class=\"attr\">style</span>=<span class=\"string\">\"width:100%;\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"2\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"4\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">      </div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">onkeyup</span>=<span class=\"string\">\"if(this.value.length==1)&#123;this.value=this.value.replace(/[^1-9]/g,'')&#125;else&#123;this.value=this.value.replace(/\\D/g,'')&#125;\"</span></div><div class=\"line\">\t    <span class=\"attr\">onafterpaste</span>=<span class=\"string\">\"if(this.value.length==1)&#123;this.value=this.value.replace(/[^1-9]/g,'')&#125;else&#123;this.value=this.value.replace(/\\D/g,'')&#125;\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span> <span class=\"attr\">colspan</span>=<span class=\"string\">\"3\"</span>&gt;</span></div><div class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">asp:TextBox</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>3、firmRow表示是第一行，hideFirmRow用来将第一行隐藏<br>当需要创建行时，直接使用jquery的Clone，将firmRow克隆然后设置值就好了，方便操作。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">var $newRow = $(&quot;.firmRow:first&quot;).clone();</div></pre></td></tr></table></figure></p>\n<p>4、其中文本控件增加了JS验证，只能输入数字<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;asp:TextBox runat=&quot;server&quot; onkeyup=&quot;if(this.value.length==1)&#123;this.value=this.value.replace(/[^1-9]/g,&apos;&apos;)&#125;else&#123;this.value=this.value.replace(/\\D/g,&apos;&apos;)&#125;&quot;</div><div class=\"line\">onafterpaste=&quot;if(this.value.length==1)&#123;this.value=this.value.replace(/[^1-9]/g,&apos;&apos;)&#125;else&#123;this.value=this.value.replace(/\\D/g,&apos;&apos;)&#125;&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>5、easyui-combobox 绑定初始化<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">   $(&quot;.easyui-combobox&quot;).combobox(&#123;</div><div class=\"line\">valueField: &apos;值列名&apos;,</div><div class=\"line\">textField: &apos;文本列名&apos;,</div><div class=\"line\">data: res //res是JSON对象</div><div class=\"line\">   &#125;);</div></pre></td></tr></table></figure></p>"},{"title":"设计模式-工厂方法模式","date":"2018-01-10T09:30:26.000Z","_content":" {% asset_img 20180116090202.jpg UML%}\n<!--more-->\n工厂方法模式一句话：一个产品抽象类，一个工厂抽象类，一个工厂生产一个产品。\n> {% post_link SimpleFactoryPattern 简单工厂模式%}如果扩展多个产品，需要修改工厂类中的静态方法，明显不符合开放关闭原则（新增开放修改关闭）,引入工厂方法模式。\n> 本篇内容只针对工厂方法模式（Factory Method Pattern）。\n\n简单工厂模式基础代码\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            //实例化苹果和香蕉\n            Fruit first = FruitFactory.CreateFruit(\"Apple\");\n            first.PrintName();\n            Console.WriteLine(\"-------------\");\n            Fruit second = FruitFactory.CreateFruit(\"Banana\");\n            second.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 水果工厂类\n    /// </summary>\n    public class FruitFactory\n    {\n        /// <summary>\n        /// 静态水果生产方法\n        /// </summary>\n        /// <param name=\"fruitName\"></param>\n        /// <returns></returns>\n        public static Fruit CreateFruit(string fruitName)\n        {\n            Fruit result;\n            switch (fruitName)\n            {\n                case \"Apple\": result = new Apple(); break;\n                case \"Banana\": result = new Banana(); break;\n                default:\n                    result = new Apple();//未找到返回一个苹果\n                    break;\n            }\n            return result;\n        }\n    }\n    /// <summary>\n    /// 水果抽象类\n    /// </summary>\n    public abstract class Fruit\n    {\n        /// <summary>\n        /// 水果抽象方法\n        /// </summary>\n        public abstract void PrintName();\n    }\n    /// <summary>\n    /// 苹果类\n    /// </summary>\n    public class Apple : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is an apple.\");\n        }\n    }\n    /// <summary>\n    /// 香蕉类\n    /// </summary>\n    public class Banana : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a banana\");\n        }\n    }\n}\n\n\n```\n\n在上面的代码基础上进行增加一个橘子类，需要做哪些修改呢？\na.创建橘子类继承水果并实现抽象方法PrintName；\nb.修改水果工厂CreateFruit方法，增加case分支语句；\nc.修改客户类，增加获得橘子的语句；\n代码如下：\n\n```C\n\t/// <summary>\n    /// 橘子类\n    /// </summary>\n    public class Orange : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a orange\");\n        }\n    }\n\n```\n```C\n\t\t/// <summary>\n    /// 静态水果生产方法\n    /// </summary>\n    /// <param name=\"fruitName\"></param>\n    /// <returns></returns>\n    public static Fruit CreateFruit(string fruitName)\n    {\n        Fruit result;\n        switch (fruitName)\n        {\n            case \"Apple\": result = new Apple(); break;\n            case \"Banana\": result = new Banana(); break;\n            case \"Orange\": result = new Orange(); break;//增加橘子分支\n            default:\n                result = new Apple();//未找到返回一个苹果\n                break;\n        }\n        return result;\n    }\n\n```\n```C\n \tstatic void Main(string[] args)\n    {\n        //实例化苹果和香蕉\n        Fruit first = FruitFactory.CreateFruit(\"Apple\");\n        first.PrintName();\n        Console.WriteLine(\"-------------\");\n        Fruit second = FruitFactory.CreateFruit(\"Banana\");\n        second.PrintName();\n        Console.WriteLine(\"-------------\");\n        //增加实例化橘子\n        Fruit third = FruitFactory.CreateFruit(\"Orange\");\n        third.PrintName();\n        Console.Read();\n\n    }\n\n```\n {% asset_img 20180110175538.jpg 运行结果%}\n\n做完上面的工作后，可以发现增加一个产品需要修改工厂类方法，明显违背开放关闭原则。\n因此将上面的代码进一步进行整理（修改成为工厂方法模式）。\na.新增抽象工厂类;\nb.针对每个产品都增加一个对应的工厂类；\nc.顾客使用时，使用对应的工厂类来创建产品；\n\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            //实例化苹果和香蕉\n            Fruit first = new AppleFactory().CreateFruit();\n            first.PrintName();\n            Console.WriteLine(\"-------------\");\n            Fruit second = new BananaFactory().CreateFruit();\n            second.PrintName();\n            Console.WriteLine(\"-------------\");\n            //实例化橘子\n            Fruit third = new OrangeFactory().CreateFruit();\n            third.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 水果工厂类抽象类\n    /// </summary>\n    public abstract class FruitFactory\n    {\n        public abstract Fruit CreateFruit();\n    }\n    /// <summary>\n    /// 苹果工厂类\n    /// </summary>\n    public class AppleFactory:FruitFactory\n    {\n        public override Fruit CreateFruit()\n        {\n            return new Apple();\n        }\n    }\n    /// <summary>\n    /// 香蕉工厂类\n    /// </summary>\n    public class BananaFactory : FruitFactory\n    {\n        public override Fruit CreateFruit()\n        {\n            return new Banana();\n        }\n    }\n    /// <summary>\n    /// 橘子工厂类\n    /// </summary>\n    public class OrangeFactory : FruitFactory\n    {\n        public override Fruit CreateFruit()\n        {\n            return new Orange();\n        }\n    }\n    /// <summary>\n    /// 水果抽象类\n    /// </summary>\n    public abstract class Fruit\n    {\n        /// <summary>\n        /// 水果抽象方法\n        /// </summary>\n        public abstract void PrintName();\n    }\n    /// <summary>\n    /// 苹果类\n    /// </summary>\n    public class Apple : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is an apple.\");\n        }\n    }\n    /// <summary>\n    /// 香蕉类\n    /// </summary>\n    public class Banana : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a banana\");\n        }\n    }\n    /// <summary>\n    /// 橘子类\n    /// </summary>\n    public class Orange : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a orange\");\n        }\n    }\n\n}\n\n\n```\n通过上面的修改可以发现，当再次增加一个新的产品时，原来的代码不需要进行修改，只需要新增该产品类和对应的工厂类即可。\n\n**总结**\n**使用场景**\na. 针对同一种类多个产品的生产与消费的解耦，满足开放关闭原则。\n\n**优点**\n避免简单工厂类不易扩展与工厂类业务逻辑复杂的缺陷\n**缺点**\n当多个产品打包后的产品族需要进行扩展时，则显无能为力。\n**即横向单个产品的扩展方便，纵向产品族扩展复杂**\n\n针对此缺点引入{% post_link AbstractFactoryPattern 设计模式-抽象工厂模式 %}。\n","source":"_posts/FactoryMethodPattern.md","raw":"---\ntitle: 设计模式-工厂方法模式\ndate: 2018-01-10 17:30:26\ntags:\ncategories:\n- 设计模式\n---\n {% asset_img 20180116090202.jpg UML%}\n<!--more-->\n工厂方法模式一句话：一个产品抽象类，一个工厂抽象类，一个工厂生产一个产品。\n> {% post_link SimpleFactoryPattern 简单工厂模式%}如果扩展多个产品，需要修改工厂类中的静态方法，明显不符合开放关闭原则（新增开放修改关闭）,引入工厂方法模式。\n> 本篇内容只针对工厂方法模式（Factory Method Pattern）。\n\n简单工厂模式基础代码\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            //实例化苹果和香蕉\n            Fruit first = FruitFactory.CreateFruit(\"Apple\");\n            first.PrintName();\n            Console.WriteLine(\"-------------\");\n            Fruit second = FruitFactory.CreateFruit(\"Banana\");\n            second.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 水果工厂类\n    /// </summary>\n    public class FruitFactory\n    {\n        /// <summary>\n        /// 静态水果生产方法\n        /// </summary>\n        /// <param name=\"fruitName\"></param>\n        /// <returns></returns>\n        public static Fruit CreateFruit(string fruitName)\n        {\n            Fruit result;\n            switch (fruitName)\n            {\n                case \"Apple\": result = new Apple(); break;\n                case \"Banana\": result = new Banana(); break;\n                default:\n                    result = new Apple();//未找到返回一个苹果\n                    break;\n            }\n            return result;\n        }\n    }\n    /// <summary>\n    /// 水果抽象类\n    /// </summary>\n    public abstract class Fruit\n    {\n        /// <summary>\n        /// 水果抽象方法\n        /// </summary>\n        public abstract void PrintName();\n    }\n    /// <summary>\n    /// 苹果类\n    /// </summary>\n    public class Apple : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is an apple.\");\n        }\n    }\n    /// <summary>\n    /// 香蕉类\n    /// </summary>\n    public class Banana : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a banana\");\n        }\n    }\n}\n\n\n```\n\n在上面的代码基础上进行增加一个橘子类，需要做哪些修改呢？\na.创建橘子类继承水果并实现抽象方法PrintName；\nb.修改水果工厂CreateFruit方法，增加case分支语句；\nc.修改客户类，增加获得橘子的语句；\n代码如下：\n\n```C\n\t/// <summary>\n    /// 橘子类\n    /// </summary>\n    public class Orange : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a orange\");\n        }\n    }\n\n```\n```C\n\t\t/// <summary>\n    /// 静态水果生产方法\n    /// </summary>\n    /// <param name=\"fruitName\"></param>\n    /// <returns></returns>\n    public static Fruit CreateFruit(string fruitName)\n    {\n        Fruit result;\n        switch (fruitName)\n        {\n            case \"Apple\": result = new Apple(); break;\n            case \"Banana\": result = new Banana(); break;\n            case \"Orange\": result = new Orange(); break;//增加橘子分支\n            default:\n                result = new Apple();//未找到返回一个苹果\n                break;\n        }\n        return result;\n    }\n\n```\n```C\n \tstatic void Main(string[] args)\n    {\n        //实例化苹果和香蕉\n        Fruit first = FruitFactory.CreateFruit(\"Apple\");\n        first.PrintName();\n        Console.WriteLine(\"-------------\");\n        Fruit second = FruitFactory.CreateFruit(\"Banana\");\n        second.PrintName();\n        Console.WriteLine(\"-------------\");\n        //增加实例化橘子\n        Fruit third = FruitFactory.CreateFruit(\"Orange\");\n        third.PrintName();\n        Console.Read();\n\n    }\n\n```\n {% asset_img 20180110175538.jpg 运行结果%}\n\n做完上面的工作后，可以发现增加一个产品需要修改工厂类方法，明显违背开放关闭原则。\n因此将上面的代码进一步进行整理（修改成为工厂方法模式）。\na.新增抽象工厂类;\nb.针对每个产品都增加一个对应的工厂类；\nc.顾客使用时，使用对应的工厂类来创建产品；\n\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            //实例化苹果和香蕉\n            Fruit first = new AppleFactory().CreateFruit();\n            first.PrintName();\n            Console.WriteLine(\"-------------\");\n            Fruit second = new BananaFactory().CreateFruit();\n            second.PrintName();\n            Console.WriteLine(\"-------------\");\n            //实例化橘子\n            Fruit third = new OrangeFactory().CreateFruit();\n            third.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 水果工厂类抽象类\n    /// </summary>\n    public abstract class FruitFactory\n    {\n        public abstract Fruit CreateFruit();\n    }\n    /// <summary>\n    /// 苹果工厂类\n    /// </summary>\n    public class AppleFactory:FruitFactory\n    {\n        public override Fruit CreateFruit()\n        {\n            return new Apple();\n        }\n    }\n    /// <summary>\n    /// 香蕉工厂类\n    /// </summary>\n    public class BananaFactory : FruitFactory\n    {\n        public override Fruit CreateFruit()\n        {\n            return new Banana();\n        }\n    }\n    /// <summary>\n    /// 橘子工厂类\n    /// </summary>\n    public class OrangeFactory : FruitFactory\n    {\n        public override Fruit CreateFruit()\n        {\n            return new Orange();\n        }\n    }\n    /// <summary>\n    /// 水果抽象类\n    /// </summary>\n    public abstract class Fruit\n    {\n        /// <summary>\n        /// 水果抽象方法\n        /// </summary>\n        public abstract void PrintName();\n    }\n    /// <summary>\n    /// 苹果类\n    /// </summary>\n    public class Apple : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is an apple.\");\n        }\n    }\n    /// <summary>\n    /// 香蕉类\n    /// </summary>\n    public class Banana : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a banana\");\n        }\n    }\n    /// <summary>\n    /// 橘子类\n    /// </summary>\n    public class Orange : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a orange\");\n        }\n    }\n\n}\n\n\n```\n通过上面的修改可以发现，当再次增加一个新的产品时，原来的代码不需要进行修改，只需要新增该产品类和对应的工厂类即可。\n\n**总结**\n**使用场景**\na. 针对同一种类多个产品的生产与消费的解耦，满足开放关闭原则。\n\n**优点**\n避免简单工厂类不易扩展与工厂类业务逻辑复杂的缺陷\n**缺点**\n当多个产品打包后的产品族需要进行扩展时，则显无能为力。\n**即横向单个产品的扩展方便，纵向产品族扩展复杂**\n\n针对此缺点引入{% post_link AbstractFactoryPattern 设计模式-抽象工厂模式 %}。\n","slug":"FactoryMethodPattern","published":1,"updated":"2018-01-16T01:02:38.761Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayu7000aocm7jwhg7ptv","content":" <img src=\"/2018/01/10/FactoryMethodPattern/20180116090202.jpg\" alt=\"UML\" title=\"UML\">\n<a id=\"more\"></a>\n<p>工厂方法模式一句话：一个产品抽象类，一个工厂抽象类，一个工厂生产一个产品。</p>\n<blockquote>\n<p><a href=\"/2018/01/10/SimpleFactoryPattern/\" title=\"简单工厂模式\">简单工厂模式</a>如果扩展多个产品，需要修改工厂类中的静态方法，明显不符合开放关闭原则（新增开放修改关闭）,引入工厂方法模式。<br>本篇内容只针对工厂方法模式（Factory Method Pattern）。</p>\n</blockquote>\n<p>简单工厂模式基础代码<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">            Fruit first = FruitFactory.CreateFruit(<span class=\"string\">\"Apple\"</span>);</div><div class=\"line\">            first.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Fruit second = FruitFactory.CreateFruit(<span class=\"string\">\"Banana\"</span>);</div><div class=\"line\">            second.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 静态水果生产方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"fruitName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">(<span class=\"built_in\">string</span> fruitName)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Fruit result;</div><div class=\"line\">            <span class=\"keyword\">switch</span> (fruitName)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"Apple\"</span>: result = <span class=\"keyword\">new</span> Apple(); <span class=\"keyword\">break</span>;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"Banana\"</span>: result = <span class=\"keyword\">new</span> Banana(); <span class=\"keyword\">break</span>;</div><div class=\"line\">                <span class=\"keyword\">default</span>:</div><div class=\"line\">                    result = <span class=\"keyword\">new</span> Apple();<span class=\"comment\">//未找到返回一个苹果</span></div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 水果抽象方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Apple : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an apple.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Banana : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a banana\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在上面的代码基础上进行增加一个橘子类，需要做哪些修改呢？<br>a.创建橘子类继承水果并实现抽象方法PrintName；<br>b.修改水果工厂CreateFruit方法，增加case分支语句；<br>c.修改客户类，增加获得橘子的语句；<br>代码如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">   <span class=\"comment\">/// 橘子类</span></div><div class=\"line\">   <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Orange : Fruit</div><div class=\"line\">   &#123;</div><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">       &#123;</div><div class=\"line\">           Console.WriteLine(<span class=\"string\">\"This is a orange\"</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">  <span class=\"comment\">/// 静态水果生产方法</span></div><div class=\"line\">  <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">  <span class=\"comment\">/// &lt;param name=\"fruitName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">  <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">(<span class=\"built_in\">string</span> fruitName)</span></span></div><div class=\"line\">  &#123;</div><div class=\"line\">      Fruit result;</div><div class=\"line\">      <span class=\"keyword\">switch</span> (fruitName)</div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">\"Apple\"</span>: result = <span class=\"keyword\">new</span> Apple(); <span class=\"keyword\">break</span>;</div><div class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">\"Banana\"</span>: result = <span class=\"keyword\">new</span> Banana(); <span class=\"keyword\">break</span>;</div><div class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">\"Orange\"</span>: result = <span class=\"keyword\">new</span> Orange(); <span class=\"keyword\">break</span>;<span class=\"comment\">//增加橘子分支</span></div><div class=\"line\">          <span class=\"keyword\">default</span>:</div><div class=\"line\">              result = <span class=\"keyword\">new</span> Apple();<span class=\"comment\">//未找到返回一个苹果</span></div><div class=\"line\">              <span class=\"keyword\">break</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"keyword\">return</span> result;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">  &#123;</div><div class=\"line\">      <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">      Fruit first = FruitFactory.CreateFruit(<span class=\"string\">\"Apple\"</span>);</div><div class=\"line\">      first.PrintName();</div><div class=\"line\">      Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">      Fruit second = FruitFactory.CreateFruit(<span class=\"string\">\"Banana\"</span>);</div><div class=\"line\">      second.PrintName();</div><div class=\"line\">      Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">      <span class=\"comment\">//增加实例化橘子</span></div><div class=\"line\">      Fruit third = FruitFactory.CreateFruit(<span class=\"string\">\"Orange\"</span>);</div><div class=\"line\">      third.PrintName();</div><div class=\"line\">      Console.Read();</div><div class=\"line\"></div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n <img src=\"/2018/01/10/FactoryMethodPattern/20180110175538.jpg\" alt=\"运行结果\" title=\"运行结果\">\n<p>做完上面的工作后，可以发现增加一个产品需要修改工厂类方法，明显违背开放关闭原则。<br>因此将上面的代码进一步进行整理（修改成为工厂方法模式）。<br>a.新增抽象工厂类;<br>b.针对每个产品都增加一个对应的工厂类；<br>c.顾客使用时，使用对应的工厂类来创建产品；</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">            Fruit first = <span class=\"keyword\">new</span> AppleFactory().CreateFruit();</div><div class=\"line\">            first.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Fruit second = <span class=\"keyword\">new</span> BananaFactory().CreateFruit();</div><div class=\"line\">            second.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            <span class=\"comment\">//实例化橘子</span></div><div class=\"line\">            Fruit third = <span class=\"keyword\">new</span> OrangeFactory().CreateFruit();</div><div class=\"line\">            third.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果工厂类抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> AppleFactory:FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Apple();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> BananaFactory : FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Banana();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 橘子工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> OrangeFactory : FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Orange();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 水果抽象方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Apple : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an apple.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Banana : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a banana\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 橘子类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Orange : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a orange\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>通过上面的修改可以发现，当再次增加一个新的产品时，原来的代码不需要进行修改，只需要新增该产品类和对应的工厂类即可。</p>\n<p><strong>总结</strong><br><strong>使用场景</strong><br>a. 针对同一种类多个产品的生产与消费的解耦，满足开放关闭原则。</p>\n<p><strong>优点</strong><br>避免简单工厂类不易扩展与工厂类业务逻辑复杂的缺陷<br><strong>缺点</strong><br>当多个产品打包后的产品族需要进行扩展时，则显无能为力。<br><strong>即横向单个产品的扩展方便，纵向产品族扩展复杂</strong></p>\n<p>针对此缺点引入<a href=\"/2018/01/11/AbstractFactoryPattern/\" title=\"设计模式-抽象工厂模式\">设计模式-抽象工厂模式</a>。</p>\n","excerpt":"<img src=\"/2018/01/10/FactoryMethodPattern/20180116090202.jpg\" alt=\"UML\" title=\"UML\">","more":"<p>工厂方法模式一句话：一个产品抽象类，一个工厂抽象类，一个工厂生产一个产品。</p>\n<blockquote>\n<p><a href=\"/2018/01/10/SimpleFactoryPattern/\" title=\"简单工厂模式\">简单工厂模式</a>如果扩展多个产品，需要修改工厂类中的静态方法，明显不符合开放关闭原则（新增开放修改关闭）,引入工厂方法模式。<br>本篇内容只针对工厂方法模式（Factory Method Pattern）。</p>\n</blockquote>\n<p>简单工厂模式基础代码<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">            Fruit first = FruitFactory.CreateFruit(<span class=\"string\">\"Apple\"</span>);</div><div class=\"line\">            first.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Fruit second = FruitFactory.CreateFruit(<span class=\"string\">\"Banana\"</span>);</div><div class=\"line\">            second.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 静态水果生产方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"fruitName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">(<span class=\"built_in\">string</span> fruitName)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Fruit result;</div><div class=\"line\">            <span class=\"keyword\">switch</span> (fruitName)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"Apple\"</span>: result = <span class=\"keyword\">new</span> Apple(); <span class=\"keyword\">break</span>;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"Banana\"</span>: result = <span class=\"keyword\">new</span> Banana(); <span class=\"keyword\">break</span>;</div><div class=\"line\">                <span class=\"keyword\">default</span>:</div><div class=\"line\">                    result = <span class=\"keyword\">new</span> Apple();<span class=\"comment\">//未找到返回一个苹果</span></div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 水果抽象方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Apple : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an apple.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Banana : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a banana\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>在上面的代码基础上进行增加一个橘子类，需要做哪些修改呢？<br>a.创建橘子类继承水果并实现抽象方法PrintName；<br>b.修改水果工厂CreateFruit方法，增加case分支语句；<br>c.修改客户类，增加获得橘子的语句；<br>代码如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">   <span class=\"comment\">/// 橘子类</span></div><div class=\"line\">   <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">   <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Orange : Fruit</div><div class=\"line\">   &#123;</div><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">       </span>&#123;</div><div class=\"line\">           Console.WriteLine(<span class=\"string\">\"This is a orange\"</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">  <span class=\"comment\">/// 静态水果生产方法</span></div><div class=\"line\">  <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">  <span class=\"comment\">/// &lt;param name=\"fruitName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">  <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">(<span class=\"built_in\">string</span> fruitName)</span></div><div class=\"line\">  </span>&#123;</div><div class=\"line\">      Fruit result;</div><div class=\"line\">      <span class=\"keyword\">switch</span> (fruitName)</div><div class=\"line\">      &#123;</div><div class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">\"Apple\"</span>: result = <span class=\"keyword\">new</span> Apple(); <span class=\"keyword\">break</span>;</div><div class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">\"Banana\"</span>: result = <span class=\"keyword\">new</span> Banana(); <span class=\"keyword\">break</span>;</div><div class=\"line\">          <span class=\"keyword\">case</span> <span class=\"string\">\"Orange\"</span>: result = <span class=\"keyword\">new</span> Orange(); <span class=\"keyword\">break</span>;<span class=\"comment\">//增加橘子分支</span></div><div class=\"line\">          <span class=\"keyword\">default</span>:</div><div class=\"line\">              result = <span class=\"keyword\">new</span> Apple();<span class=\"comment\">//未找到返回一个苹果</span></div><div class=\"line\">              <span class=\"keyword\">break</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">      <span class=\"keyword\">return</span> result;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">  </span>&#123;</div><div class=\"line\">      <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">      Fruit first = FruitFactory.CreateFruit(<span class=\"string\">\"Apple\"</span>);</div><div class=\"line\">      first.PrintName();</div><div class=\"line\">      Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">      Fruit second = FruitFactory.CreateFruit(<span class=\"string\">\"Banana\"</span>);</div><div class=\"line\">      second.PrintName();</div><div class=\"line\">      Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">      <span class=\"comment\">//增加实例化橘子</span></div><div class=\"line\">      Fruit third = FruitFactory.CreateFruit(<span class=\"string\">\"Orange\"</span>);</div><div class=\"line\">      third.PrintName();</div><div class=\"line\">      Console.Read();</div><div class=\"line\"></div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n <img src=\"/2018/01/10/FactoryMethodPattern/20180110175538.jpg\" alt=\"运行结果\" title=\"运行结果\">\n<p>做完上面的工作后，可以发现增加一个产品需要修改工厂类方法，明显违背开放关闭原则。<br>因此将上面的代码进一步进行整理（修改成为工厂方法模式）。<br>a.新增抽象工厂类;<br>b.针对每个产品都增加一个对应的工厂类；<br>c.顾客使用时，使用对应的工厂类来创建产品；</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">            Fruit first = <span class=\"keyword\">new</span> AppleFactory().CreateFruit();</div><div class=\"line\">            first.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Fruit second = <span class=\"keyword\">new</span> BananaFactory().CreateFruit();</div><div class=\"line\">            second.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            <span class=\"comment\">//实例化橘子</span></div><div class=\"line\">            Fruit third = <span class=\"keyword\">new</span> OrangeFactory().CreateFruit();</div><div class=\"line\">            third.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果工厂类抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> AppleFactory:FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Apple();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> BananaFactory : FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Banana();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 橘子工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> OrangeFactory : FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Orange();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 水果抽象方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Apple : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an apple.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Banana : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a banana\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 橘子类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Orange : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a orange\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>通过上面的修改可以发现，当再次增加一个新的产品时，原来的代码不需要进行修改，只需要新增该产品类和对应的工厂类即可。</p>\n<p><strong>总结</strong><br><strong>使用场景</strong><br>a. 针对同一种类多个产品的生产与消费的解耦，满足开放关闭原则。</p>\n<p><strong>优点</strong><br>避免简单工厂类不易扩展与工厂类业务逻辑复杂的缺陷<br><strong>缺点</strong><br>当多个产品打包后的产品族需要进行扩展时，则显无能为力。<br><strong>即横向单个产品的扩展方便，纵向产品族扩展复杂</strong></p>\n<p>针对此缺点引入<a href=\"/2018/01/11/AbstractFactoryPattern/\" title=\"设计模式-抽象工厂模式\">设计模式-抽象工厂模式</a>。</p>"},{"title":"Log4Net生成空日志文件的解决方法","date":"2016-09-10T12:26:04.000Z","+description":"Log4Net配置对于空日志文件的解决","_content":"\n设置Log4Net并自动删除空日志\n<!--more-->\n1、根据网上的配置说明，该配置将记录Error 级别的错误，按照月份分文件夹，按照天来分文件进行日志的记录，\n完成了配置如下：\n``` bash\n<configuration>\n  <configSections>\n    <section name=\"log4net\" type=\"log4net.Config.Log4NetConfigurationSectionHandler, log4net, Version=1.2.11.0, Culture=neutral, PublicKeyToken=1B44E1D426115821\" />\n  </configSections>\n  <log4net>\n    <root>\n      <!--<level value=\"DEBUG\"/>-->\n      <level value=\"ERROR\"/>\n      <!--根据log级别记录到不同的日志文件-->\n      <!--<appender-ref ref=\"DebugLog\" />-->\n      <appender-ref ref=\"ErrorLog\" />\n    </root>\n    <appender name=\"ErrorLog\" type=\"log4net.Appender.RollingFileAppender\">\n      <!-- 最后放开注释-->\n      <!--<lockingModel type=\"命名空间.MinimalLockDeleteEmpty\" />-->\n      <param name=\"File\" value=\"Log\\\" />\n      <param name=\"AppendToFile\" value=\"true\" />\n      <param name=\"RollingStyle\" value=\"Date\" />\n      <param name=\"DatePattern\" value=\"yyyy-MM\\\\yyyy-MM-dd.'log'\" />\n      <param name=\"StaticLogFileName\" value=\"false\" />\n      <layout type=\"log4net.Layout.PatternLayout\">\n        <conversionPattern value=\"%date [%thread] %-5level %logger - %message%newline\" />\n      </layout>\n      <securityContext type=\"log4net.Util.WindowsSecurityContext\">\n        <credentials value=\"Process\" />\n      </securityContext>\n      <filter type=\"log4net.Filter.LevelRangeFilter\">\n        <levelMin value=\"ERROR\" />\n        <levelMax value=\"ERROR\" />\n      </filter>\n    </appender>\n  </log4net>\n</configuration>\n```\n2、运行上面的（除红色）的设置后，发现就算没有抛出异常，log4net每天同样会创建一个空的日志文件。\n3、查找搜索了下国内网站，未发现解决的方法，只是想到如果log4net不支持的化，可以在网站运行后\n创建一个定时器，每隔一天检查一下对应的日志文件是否有空，有则删除；\n4、google搜索到国外的网站，发现可以继承**FileAppender.MinimalLock**类 重写**ReleaseLock** 方法 来实现写日志完成后检查空文件并删除的功能。\n[引用地址](http://stackoverflow.com/questions/2533403/how-to-disable-creation-of-empty-log-file-on-app-start)\n```C\nusing log4net.Appender;\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\n\nnamespace 命名空间\n{\n    public class MinimalLockDeleteEmpty : FileAppender.MinimalLock\n    {\n        public override void ReleaseLock()\n        {\n            base.ReleaseLock();\n\n            var logFile = new FileInfo(CurrentAppender.File);\n            if (logFile.Exists && logFile.Length <= 0)\n            {\n                logFile.Delete();\n            }\n        }\n    }\n}\n```\n5、最后在配置文件中将类插入完成调用\n```C\n<lockingModel type=\"命名空间.MinimalLockDeleteEmpty\" />\n```\n\n6、最后Log4Net效果就是记录中没有空日志文件且存放服务器时按照月份建文件夹，文件夹内按照日期建日志文件。","source":"_posts/Log4Net生成空日志文件的解决方法.md","raw":"---\ntitle: Log4Net生成空日志文件的解决方法\ndate: 2016-09-10 20:26:04\ntags:\n- Log4Net\n- ASP.NET日志\n- 空日志删除\ncategories:\n- 插件\n+description: \"Log4Net配置对于空日志文件的解决\"\n---\n\n设置Log4Net并自动删除空日志\n<!--more-->\n1、根据网上的配置说明，该配置将记录Error 级别的错误，按照月份分文件夹，按照天来分文件进行日志的记录，\n完成了配置如下：\n``` bash\n<configuration>\n  <configSections>\n    <section name=\"log4net\" type=\"log4net.Config.Log4NetConfigurationSectionHandler, log4net, Version=1.2.11.0, Culture=neutral, PublicKeyToken=1B44E1D426115821\" />\n  </configSections>\n  <log4net>\n    <root>\n      <!--<level value=\"DEBUG\"/>-->\n      <level value=\"ERROR\"/>\n      <!--根据log级别记录到不同的日志文件-->\n      <!--<appender-ref ref=\"DebugLog\" />-->\n      <appender-ref ref=\"ErrorLog\" />\n    </root>\n    <appender name=\"ErrorLog\" type=\"log4net.Appender.RollingFileAppender\">\n      <!-- 最后放开注释-->\n      <!--<lockingModel type=\"命名空间.MinimalLockDeleteEmpty\" />-->\n      <param name=\"File\" value=\"Log\\\" />\n      <param name=\"AppendToFile\" value=\"true\" />\n      <param name=\"RollingStyle\" value=\"Date\" />\n      <param name=\"DatePattern\" value=\"yyyy-MM\\\\yyyy-MM-dd.'log'\" />\n      <param name=\"StaticLogFileName\" value=\"false\" />\n      <layout type=\"log4net.Layout.PatternLayout\">\n        <conversionPattern value=\"%date [%thread] %-5level %logger - %message%newline\" />\n      </layout>\n      <securityContext type=\"log4net.Util.WindowsSecurityContext\">\n        <credentials value=\"Process\" />\n      </securityContext>\n      <filter type=\"log4net.Filter.LevelRangeFilter\">\n        <levelMin value=\"ERROR\" />\n        <levelMax value=\"ERROR\" />\n      </filter>\n    </appender>\n  </log4net>\n</configuration>\n```\n2、运行上面的（除红色）的设置后，发现就算没有抛出异常，log4net每天同样会创建一个空的日志文件。\n3、查找搜索了下国内网站，未发现解决的方法，只是想到如果log4net不支持的化，可以在网站运行后\n创建一个定时器，每隔一天检查一下对应的日志文件是否有空，有则删除；\n4、google搜索到国外的网站，发现可以继承**FileAppender.MinimalLock**类 重写**ReleaseLock** 方法 来实现写日志完成后检查空文件并删除的功能。\n[引用地址](http://stackoverflow.com/questions/2533403/how-to-disable-creation-of-empty-log-file-on-app-start)\n```C\nusing log4net.Appender;\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Text;\n\nnamespace 命名空间\n{\n    public class MinimalLockDeleteEmpty : FileAppender.MinimalLock\n    {\n        public override void ReleaseLock()\n        {\n            base.ReleaseLock();\n\n            var logFile = new FileInfo(CurrentAppender.File);\n            if (logFile.Exists && logFile.Length <= 0)\n            {\n                logFile.Delete();\n            }\n        }\n    }\n}\n```\n5、最后在配置文件中将类插入完成调用\n```C\n<lockingModel type=\"命名空间.MinimalLockDeleteEmpty\" />\n```\n\n6、最后Log4Net效果就是记录中没有空日志文件且存放服务器时按照月份建文件夹，文件夹内按照日期建日志文件。","slug":"Log4Net生成空日志文件的解决方法","published":1,"updated":"2018-01-11T01:52:07.257Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayue000docm7syj0uk8a","content":"<p>设置Log4Net并自动删除空日志<br><a id=\"more\"></a><br>1、根据网上的配置说明，该配置将记录Error 级别的错误，按照月份分文件夹，按照天来分文件进行日志的记录，<br>完成了配置如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt;</div><div class=\"line\">  &lt;configSections&gt;</div><div class=\"line\">    &lt;section name=<span class=\"string\">\"log4net\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"log4net.Config.Log4NetConfigurationSectionHandler, log4net, Version=1.2.11.0, Culture=neutral, PublicKeyToken=1B44E1D426115821\"</span> /&gt;</div><div class=\"line\">  &lt;/configSections&gt;</div><div class=\"line\">  &lt;<span class=\"built_in\">log</span>4net&gt;</div><div class=\"line\">    &lt;root&gt;</div><div class=\"line\">      &lt;!--&lt;level value=<span class=\"string\">\"DEBUG\"</span>/&gt;--&gt;</div><div class=\"line\">      &lt;level value=<span class=\"string\">\"ERROR\"</span>/&gt;</div><div class=\"line\">      &lt;!--根据<span class=\"built_in\">log</span>级别记录到不同的日志文件--&gt;</div><div class=\"line\">      &lt;!--&lt;appender-ref ref=<span class=\"string\">\"DebugLog\"</span> /&gt;--&gt;</div><div class=\"line\">      &lt;appender-ref ref=<span class=\"string\">\"ErrorLog\"</span> /&gt;</div><div class=\"line\">    &lt;/root&gt;</div><div class=\"line\">    &lt;appender name=<span class=\"string\">\"ErrorLog\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"log4net.Appender.RollingFileAppender\"</span>&gt;</div><div class=\"line\">      &lt;!-- 最后放开注释--&gt;</div><div class=\"line\">      &lt;!--&lt;lockingModel <span class=\"built_in\">type</span>=<span class=\"string\">\"命名空间.MinimalLockDeleteEmpty\"</span> /&gt;--&gt;</div><div class=\"line\">      &lt;param name=<span class=\"string\">\"File\"</span> value=<span class=\"string\">\"Log\\\" /&gt;</span></div><div class=\"line\">      &lt;param name=\"AppendToFile<span class=\"string\">\" value=\"</span><span class=\"literal\">true</span><span class=\"string\">\" /&gt;</span></div><div class=\"line\">      &lt;param name=\"RollingStyle<span class=\"string\">\" value=\"</span>Date<span class=\"string\">\" /&gt;</span></div><div class=\"line\">      &lt;param name=\"DatePattern<span class=\"string\">\" value=\"</span>yyyy-MM\\\\yyyy-MM-dd.<span class=\"string\">'log'</span><span class=\"string\">\" /&gt;</span></div><div class=\"line\">      &lt;param name=\"StaticLogFileName<span class=\"string\">\" value=\"</span><span class=\"literal\">false</span><span class=\"string\">\" /&gt;</span></div><div class=\"line\">      &lt;layout type=\"<span class=\"built_in\">log</span>4net.Layout.PatternLayout<span class=\"string\">\"&gt;</span></div><div class=\"line\">        &lt;conversionPattern value=\"%date [%thread] %-5level %logger - %message%newline<span class=\"string\">\" /&gt;</span></div><div class=\"line\">      &lt;/layout&gt;</div><div class=\"line\">      &lt;securityContext type=\"<span class=\"built_in\">log</span>4net.Util.WindowsSecurityContext<span class=\"string\">\"&gt;</span></div><div class=\"line\">        &lt;credentials value=\"Process<span class=\"string\">\" /&gt;</span></div><div class=\"line\">      &lt;/securityContext&gt;</div><div class=\"line\">      &lt;filter type=\"<span class=\"built_in\">log</span>4net.Filter.LevelRangeFilter<span class=\"string\">\"&gt;</span></div><div class=\"line\">        &lt;levelMin value=\"ERROR<span class=\"string\">\" /&gt;</span></div><div class=\"line\">        &lt;levelMax value=\"ERROR<span class=\"string\">\" /&gt;</span></div><div class=\"line\">      &lt;/filter&gt;</div><div class=\"line\">    &lt;/appender&gt;</div><div class=\"line\">  &lt;/log4net&gt;</div><div class=\"line\">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>\n<p>2、运行上面的（除红色）的设置后，发现就算没有抛出异常，log4net每天同样会创建一个空的日志文件。<br>3、查找搜索了下国内网站，未发现解决的方法，只是想到如果log4net不支持的化，可以在网站运行后<br>创建一个定时器，每隔一天检查一下对应的日志文件是否有空，有则删除；<br>4、google搜索到国外的网站，发现可以继承<strong>FileAppender.MinimalLock</strong>类 重写<strong>ReleaseLock</strong> 方法 来实现写日志完成后检查空文件并删除的功能。<br><a href=\"http://stackoverflow.com/questions/2533403/how-to-disable-creation-of-empty-log-file-on-app-start\" target=\"_blank\" rel=\"external\">引用地址</a><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> log4net.Appender;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> 命名空间</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> MinimalLockDeleteEmpty : FileAppender.MinimalLock</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">ReleaseLock</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            base.ReleaseLock();</div><div class=\"line\"></div><div class=\"line\">            var logFile = <span class=\"keyword\">new</span> FileInfo(CurrentAppender.File);</div><div class=\"line\">            <span class=\"keyword\">if</span> (logFile.Exists &amp;&amp; logFile.Length &lt;= <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                logFile.Delete();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>5、最后在配置文件中将类插入完成调用<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;lockingModel type=<span class=\"string\">\"命名空间.MinimalLockDeleteEmpty\"</span> /&gt;</div></pre></td></tr></table></figure></p>\n<p>6、最后Log4Net效果就是记录中没有空日志文件且存放服务器时按照月份建文件夹，文件夹内按照日期建日志文件。</p>\n","excerpt":"<p>设置Log4Net并自动删除空日志<br>","more":"<br>1、根据网上的配置说明，该配置将记录Error 级别的错误，按照月份分文件夹，按照天来分文件进行日志的记录，<br>完成了配置如下：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;configuration&gt;</div><div class=\"line\">  &lt;configSections&gt;</div><div class=\"line\">    &lt;section name=<span class=\"string\">\"log4net\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"log4net.Config.Log4NetConfigurationSectionHandler, log4net, Version=1.2.11.0, Culture=neutral, PublicKeyToken=1B44E1D426115821\"</span> /&gt;</div><div class=\"line\">  &lt;/configSections&gt;</div><div class=\"line\">  &lt;<span class=\"built_in\">log</span>4net&gt;</div><div class=\"line\">    &lt;root&gt;</div><div class=\"line\">      &lt;!--&lt;level value=<span class=\"string\">\"DEBUG\"</span>/&gt;--&gt;</div><div class=\"line\">      &lt;level value=<span class=\"string\">\"ERROR\"</span>/&gt;</div><div class=\"line\">      &lt;!--根据<span class=\"built_in\">log</span>级别记录到不同的日志文件--&gt;</div><div class=\"line\">      &lt;!--&lt;appender-ref ref=<span class=\"string\">\"DebugLog\"</span> /&gt;--&gt;</div><div class=\"line\">      &lt;appender-ref ref=<span class=\"string\">\"ErrorLog\"</span> /&gt;</div><div class=\"line\">    &lt;/root&gt;</div><div class=\"line\">    &lt;appender name=<span class=\"string\">\"ErrorLog\"</span> <span class=\"built_in\">type</span>=<span class=\"string\">\"log4net.Appender.RollingFileAppender\"</span>&gt;</div><div class=\"line\">      &lt;!-- 最后放开注释--&gt;</div><div class=\"line\">      &lt;!--&lt;lockingModel <span class=\"built_in\">type</span>=<span class=\"string\">\"命名空间.MinimalLockDeleteEmpty\"</span> /&gt;--&gt;</div><div class=\"line\">      &lt;param name=<span class=\"string\">\"File\"</span> value=<span class=\"string\">\"Log\\\" /&gt;</div><div class=\"line\">      &lt;param name=\"</span>AppendToFile<span class=\"string\">\" value=\"</span><span class=\"literal\">true</span><span class=\"string\">\" /&gt;</div><div class=\"line\">      &lt;param name=\"</span>RollingStyle<span class=\"string\">\" value=\"</span>Date<span class=\"string\">\" /&gt;</div><div class=\"line\">      &lt;param name=\"</span>DatePattern<span class=\"string\">\" value=\"</span>yyyy-MM\\\\yyyy-MM-dd.<span class=\"string\">'log'</span><span class=\"string\">\" /&gt;</div><div class=\"line\">      &lt;param name=\"</span>StaticLogFileName<span class=\"string\">\" value=\"</span><span class=\"literal\">false</span><span class=\"string\">\" /&gt;</div><div class=\"line\">      &lt;layout type=\"</span><span class=\"built_in\">log</span>4net.Layout.PatternLayout<span class=\"string\">\"&gt;</div><div class=\"line\">        &lt;conversionPattern value=\"</span>%date [%thread] %-5level %logger - %message%newline<span class=\"string\">\" /&gt;</div><div class=\"line\">      &lt;/layout&gt;</div><div class=\"line\">      &lt;securityContext type=\"</span><span class=\"built_in\">log</span>4net.Util.WindowsSecurityContext<span class=\"string\">\"&gt;</div><div class=\"line\">        &lt;credentials value=\"</span>Process<span class=\"string\">\" /&gt;</div><div class=\"line\">      &lt;/securityContext&gt;</div><div class=\"line\">      &lt;filter type=\"</span><span class=\"built_in\">log</span>4net.Filter.LevelRangeFilter<span class=\"string\">\"&gt;</div><div class=\"line\">        &lt;levelMin value=\"</span>ERROR<span class=\"string\">\" /&gt;</div><div class=\"line\">        &lt;levelMax value=\"</span>ERROR<span class=\"string\">\" /&gt;</div><div class=\"line\">      &lt;/filter&gt;</div><div class=\"line\">    &lt;/appender&gt;</div><div class=\"line\">  &lt;/log4net&gt;</div><div class=\"line\">&lt;/configuration&gt;</span></div></pre></td></tr></table></figure></p>\n<p>2、运行上面的（除红色）的设置后，发现就算没有抛出异常，log4net每天同样会创建一个空的日志文件。<br>3、查找搜索了下国内网站，未发现解决的方法，只是想到如果log4net不支持的化，可以在网站运行后<br>创建一个定时器，每隔一天检查一下对应的日志文件是否有空，有则删除；<br>4、google搜索到国外的网站，发现可以继承<strong>FileAppender.MinimalLock</strong>类 重写<strong>ReleaseLock</strong> 方法 来实现写日志完成后检查空文件并删除的功能。<br><a href=\"http://stackoverflow.com/questions/2533403/how-to-disable-creation-of-empty-log-file-on-app-start\">引用地址</a><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> log4net.Appender;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> 命名空间</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> MinimalLockDeleteEmpty : FileAppender.MinimalLock</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">ReleaseLock</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            base.ReleaseLock();</div><div class=\"line\"></div><div class=\"line\">            var logFile = <span class=\"keyword\">new</span> FileInfo(CurrentAppender.File);</div><div class=\"line\">            <span class=\"keyword\">if</span> (logFile.Exists &amp;&amp; logFile.Length &lt;= <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                logFile.Delete();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>5、最后在配置文件中将类插入完成调用<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;lockingModel type=<span class=\"string\">\"命名空间.MinimalLockDeleteEmpty\"</span> /&gt;</div></pre></td></tr></table></figure></p>\n<p>6、最后Log4Net效果就是记录中没有空日志文件且存放服务器时按照月份建文件夹，文件夹内按照日期建日志文件。</p>"},{"title":".NET防止SQL注入","date":"2017-12-05T03:07:19.000Z","_content":"\n问题描述：测试人员通过IBM appscan工具进行网站系统扫描，发现SQL注入漏洞，\n如何能进行全局性的修改，将所有请求的内容进行过滤？\n\n解决办法：通过全局应用程序类，将所有的请求进行敏感字过滤。\n\n\n{% asset_img Global.png Global Application Class 全局应用程序类 %}\n{% asset_img SafeHelper.png 过滤敏感字符工具类 %}\n\n<!--more-->\n\n1、Global.asax\n```C\nusing MxWeiXinPF.Common;\nusing System;\n\nnamespace MxWeiXinPF.Web\n{\n    public class Global : System.Web.HttpApplication\n    {\n\n        protected void Application_Start(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Session_Start(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Application_BeginRequest(object sender, EventArgs e)\n        {\n            if (Request.Cookies != null)\n            {\n                if (SafeHelper.CookieData())\n                {\n                    Response.Write(\"您提交的Cookie数据有恶意字符！\");\n                    Response.End();\n\n                }\n\n\n            }\n\n            if (Request.UrlReferrer != null)\n            {\n                if (SafeHelper.referer())\n                {\n                    Response.Write(\"您提交的Referrer数据有恶意字符！\");\n                    Response.End();\n                }\n            }\n\n            if (Request.RequestType.ToUpper() == \"POST\")\n            {\n                if (SafeHelper.PostData())\n                {\n\n                    Response.Write(\"您提交的Post数据有恶意字符！\");\n                    Response.End();\n                }\n            }\n            if (Request.RequestType.ToUpper() == \"GET\")\n            {\n                if (SafeHelper.GetData())\n                {\n                    Response.Write(\"您提交的Get数据有恶意字符！\");\n                    Response.End();\n                }\n            }\n\n        }\n\n        protected void Application_AuthenticateRequest(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Application_Error(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Session_End(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Application_End(object sender, EventArgs e)\n        {\n\n        }\n        \n    }\n}\n\n\n```\n\n2、SafeHelper.cs\n```C\nusing System.Text.RegularExpressions;\nusing System.Web;\n\nnamespace MxWeiXinPF.Common\n{\n    public class SafeHelper\n    {\n        private const string StrRegex = @\"\\b(alert|confirm|prompt)\\b|^\\+/v(8|9)|\\b(and|or)\\b.{1,6}?(=|>|<|\\bin\\b|\\blike\\b)|/\\*.+?\\*/|<\\s*script\\b|<\\s*img\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)\";\n\n        public static bool PostData()\n        {\n            bool result = false;\n\n            for (int i = 0; i < HttpContext.Current.Request.Form.Count; i++)\n            {\n                result = CheckData(HttpContext.Current.Request.Form[i].ToString());\n                if (result)\n                {\n                    break;\n                }\n            }\n            return result;\n        }\n\n\n        public static bool GetData()\n        {\n            bool result = false;\n\n            for (int i = 0; i < HttpContext.Current.Request.QueryString.Count; i++)\n            {\n                result = CheckData(HttpContext.Current.Request.QueryString[i].ToString());\n                if (result)\n                {\n                    break;\n                }\n            }\n            return result;\n        }\n\n\n        public static bool CookieData()\n        {\n            bool result = false;\n            for (int i = 0; i < HttpContext.Current.Request.Cookies.Count; i++)\n            {\n                result = CheckData(HttpContext.Current.Request.Cookies[i].Value.ToLower());\n                if (result)\n                {\n                    break;\n                }\n            }\n            return result;\n\n        }\n        public static bool referer()\n        {\n            bool result = false;\n            return result = CheckData(HttpContext.Current.Request.UrlReferrer.ToString());\n        }\n\n        public static bool CheckData(string inputData)\n        {\n            if (Regex.IsMatch(inputData, StrRegex))\n            {\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n    }\n}\n\n```","source":"_posts/NET防止SQL注入.md","raw":"---\ntitle: .NET防止SQL注入\ndate: 2017-12-05 11:07:19\ntags:\n- ASP.NET\ncategories:\n- C#基础\n---\n\n问题描述：测试人员通过IBM appscan工具进行网站系统扫描，发现SQL注入漏洞，\n如何能进行全局性的修改，将所有请求的内容进行过滤？\n\n解决办法：通过全局应用程序类，将所有的请求进行敏感字过滤。\n\n\n{% asset_img Global.png Global Application Class 全局应用程序类 %}\n{% asset_img SafeHelper.png 过滤敏感字符工具类 %}\n\n<!--more-->\n\n1、Global.asax\n```C\nusing MxWeiXinPF.Common;\nusing System;\n\nnamespace MxWeiXinPF.Web\n{\n    public class Global : System.Web.HttpApplication\n    {\n\n        protected void Application_Start(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Session_Start(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Application_BeginRequest(object sender, EventArgs e)\n        {\n            if (Request.Cookies != null)\n            {\n                if (SafeHelper.CookieData())\n                {\n                    Response.Write(\"您提交的Cookie数据有恶意字符！\");\n                    Response.End();\n\n                }\n\n\n            }\n\n            if (Request.UrlReferrer != null)\n            {\n                if (SafeHelper.referer())\n                {\n                    Response.Write(\"您提交的Referrer数据有恶意字符！\");\n                    Response.End();\n                }\n            }\n\n            if (Request.RequestType.ToUpper() == \"POST\")\n            {\n                if (SafeHelper.PostData())\n                {\n\n                    Response.Write(\"您提交的Post数据有恶意字符！\");\n                    Response.End();\n                }\n            }\n            if (Request.RequestType.ToUpper() == \"GET\")\n            {\n                if (SafeHelper.GetData())\n                {\n                    Response.Write(\"您提交的Get数据有恶意字符！\");\n                    Response.End();\n                }\n            }\n\n        }\n\n        protected void Application_AuthenticateRequest(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Application_Error(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Session_End(object sender, EventArgs e)\n        {\n\n        }\n\n        protected void Application_End(object sender, EventArgs e)\n        {\n\n        }\n        \n    }\n}\n\n\n```\n\n2、SafeHelper.cs\n```C\nusing System.Text.RegularExpressions;\nusing System.Web;\n\nnamespace MxWeiXinPF.Common\n{\n    public class SafeHelper\n    {\n        private const string StrRegex = @\"\\b(alert|confirm|prompt)\\b|^\\+/v(8|9)|\\b(and|or)\\b.{1,6}?(=|>|<|\\bin\\b|\\blike\\b)|/\\*.+?\\*/|<\\s*script\\b|<\\s*img\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)\";\n\n        public static bool PostData()\n        {\n            bool result = false;\n\n            for (int i = 0; i < HttpContext.Current.Request.Form.Count; i++)\n            {\n                result = CheckData(HttpContext.Current.Request.Form[i].ToString());\n                if (result)\n                {\n                    break;\n                }\n            }\n            return result;\n        }\n\n\n        public static bool GetData()\n        {\n            bool result = false;\n\n            for (int i = 0; i < HttpContext.Current.Request.QueryString.Count; i++)\n            {\n                result = CheckData(HttpContext.Current.Request.QueryString[i].ToString());\n                if (result)\n                {\n                    break;\n                }\n            }\n            return result;\n        }\n\n\n        public static bool CookieData()\n        {\n            bool result = false;\n            for (int i = 0; i < HttpContext.Current.Request.Cookies.Count; i++)\n            {\n                result = CheckData(HttpContext.Current.Request.Cookies[i].Value.ToLower());\n                if (result)\n                {\n                    break;\n                }\n            }\n            return result;\n\n        }\n        public static bool referer()\n        {\n            bool result = false;\n            return result = CheckData(HttpContext.Current.Request.UrlReferrer.ToString());\n        }\n\n        public static bool CheckData(string inputData)\n        {\n            if (Regex.IsMatch(inputData, StrRegex))\n            {\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n    }\n}\n\n```","slug":"NET防止SQL注入","published":1,"updated":"2018-01-11T01:48:06.917Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayuh000focm72kt4ers0","content":"<p>问题描述：测试人员通过IBM appscan工具进行网站系统扫描，发现SQL注入漏洞，<br>如何能进行全局性的修改，将所有请求的内容进行过滤？</p>\n<p>解决办法：通过全局应用程序类，将所有的请求进行敏感字过滤。</p>\n<img src=\"/2017/12/05/NET防止SQL注入/Global.png\" alt=\"Global Application Class 全局应用程序类\" title=\"Global Application Class 全局应用程序类\">\n<img src=\"/2017/12/05/NET防止SQL注入/SafeHelper.png\" alt=\"过滤敏感字符工具类\" title=\"过滤敏感字符工具类\">\n<a id=\"more\"></a>\n<p>1、Global.asax<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> MxWeiXinPF.Common;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> MxWeiXinPF.Web</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Global : System.Web.HttpApplication</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_Start</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Session_Start</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_BeginRequest</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (Request.Cookies != null)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (SafeHelper.CookieData())</div><div class=\"line\">                &#123;</div><div class=\"line\">                    Response.Write(<span class=\"string\">\"您提交的Cookie数据有恶意字符！\"</span>);</div><div class=\"line\">                    Response.End();</div><div class=\"line\"></div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (Request.UrlReferrer != null)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (SafeHelper.referer())</div><div class=\"line\">                &#123;</div><div class=\"line\">                    Response.Write(<span class=\"string\">\"您提交的Referrer数据有恶意字符！\"</span>);</div><div class=\"line\">                    Response.End();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (Request.RequestType.ToUpper() == <span class=\"string\">\"POST\"</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (SafeHelper.PostData())</div><div class=\"line\">                &#123;</div><div class=\"line\"></div><div class=\"line\">                    Response.Write(<span class=\"string\">\"您提交的Post数据有恶意字符！\"</span>);</div><div class=\"line\">                    Response.End();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (Request.RequestType.ToUpper() == <span class=\"string\">\"GET\"</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (SafeHelper.GetData())</div><div class=\"line\">                &#123;</div><div class=\"line\">                    Response.Write(<span class=\"string\">\"您提交的Get数据有恶意字符！\"</span>);</div><div class=\"line\">                    Response.End();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_AuthenticateRequest</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_Error</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Session_End</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_End</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2、SafeHelper.cs<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> MxWeiXinPF.Common</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> SafeHelper</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">string</span> StrRegex = @<span class=\"string\">\"\\b(alert|confirm|prompt)\\b|^\\+/v(8|9)|\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|/\\*.+?\\*/|&lt;\\s*script\\b|&lt;\\s*img\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">PostData</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> result = <span class=\"literal\">false</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; HttpContext.Current.Request.Form.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                result = CheckData(HttpContext.Current.Request.Form[i].ToString());</div><div class=\"line\">                <span class=\"keyword\">if</span> (result)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">GetData</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> result = <span class=\"literal\">false</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; HttpContext.Current.Request.QueryString.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                result = CheckData(HttpContext.Current.Request.QueryString[i].ToString());</div><div class=\"line\">                <span class=\"keyword\">if</span> (result)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">CookieData</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> result = <span class=\"literal\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; HttpContext.Current.Request.Cookies.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                result = CheckData(HttpContext.Current.Request.Cookies[i].Value.ToLower());</div><div class=\"line\">                <span class=\"keyword\">if</span> (result)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">referer</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> result = <span class=\"literal\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">return</span> result = CheckData(HttpContext.Current.Request.UrlReferrer.ToString());</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">CheckData</span><span class=\"params\">(<span class=\"built_in\">string</span> inputData)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (Regex.IsMatch(inputData, StrRegex))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>问题描述：测试人员通过IBM appscan工具进行网站系统扫描，发现SQL注入漏洞，<br>如何能进行全局性的修改，将所有请求的内容进行过滤？</p>\n<p>解决办法：通过全局应用程序类，将所有的请求进行敏感字过滤。</p>\n<img src=\"/2017/12/05/NET防止SQL注入/Global.png\" alt=\"Global Application Class 全局应用程序类\" title=\"Global Application Class 全局应用程序类\">\n<img src=\"/2017/12/05/NET防止SQL注入/SafeHelper.png\" alt=\"过滤敏感字符工具类\" title=\"过滤敏感字符工具类\">","more":"<p>1、Global.asax<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> MxWeiXinPF.Common;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> MxWeiXinPF.Web</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Global : System.Web.HttpApplication</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_Start</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Session_Start</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_BeginRequest</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (Request.Cookies != null)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (SafeHelper.CookieData())</div><div class=\"line\">                &#123;</div><div class=\"line\">                    Response.Write(<span class=\"string\">\"您提交的Cookie数据有恶意字符！\"</span>);</div><div class=\"line\">                    Response.End();</div><div class=\"line\"></div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (Request.UrlReferrer != null)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (SafeHelper.referer())</div><div class=\"line\">                &#123;</div><div class=\"line\">                    Response.Write(<span class=\"string\">\"您提交的Referrer数据有恶意字符！\"</span>);</div><div class=\"line\">                    Response.End();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (Request.RequestType.ToUpper() == <span class=\"string\">\"POST\"</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (SafeHelper.PostData())</div><div class=\"line\">                &#123;</div><div class=\"line\"></div><div class=\"line\">                    Response.Write(<span class=\"string\">\"您提交的Post数据有恶意字符！\"</span>);</div><div class=\"line\">                    Response.End();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (Request.RequestType.ToUpper() == <span class=\"string\">\"GET\"</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (SafeHelper.GetData())</div><div class=\"line\">                &#123;</div><div class=\"line\">                    Response.Write(<span class=\"string\">\"您提交的Get数据有恶意字符！\"</span>);</div><div class=\"line\">                    Response.End();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_AuthenticateRequest</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_Error</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Session_End</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Application_End</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2、SafeHelper.cs<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> MxWeiXinPF.Common</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> SafeHelper</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">const</span> <span class=\"built_in\">string</span> StrRegex = @<span class=\"string\">\"\\b(alert|confirm|prompt)\\b|^\\+/v(8|9)|\\b(and|or)\\b.&#123;1,6&#125;?(=|&gt;|&lt;|\\bin\\b|\\blike\\b)|/\\*.+?\\*/|&lt;\\s*script\\b|&lt;\\s*img\\b|\\bEXEC\\b|UNION.+?SELECT|UPDATE.+?SET|INSERT\\s+INTO.+?VALUES|(SELECT|DELETE).+?FROM|(CREATE|ALTER|DROP|TRUNCATE)\\s+(TABLE|DATABASE)\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">PostData</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> result = <span class=\"literal\">false</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; HttpContext.Current.Request.Form.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                result = CheckData(HttpContext.Current.Request.Form[i].ToString());</div><div class=\"line\">                <span class=\"keyword\">if</span> (result)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">GetData</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> result = <span class=\"literal\">false</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; HttpContext.Current.Request.QueryString.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                result = CheckData(HttpContext.Current.Request.QueryString[i].ToString());</div><div class=\"line\">                <span class=\"keyword\">if</span> (result)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">CookieData</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> result = <span class=\"literal\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; HttpContext.Current.Request.Cookies.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                result = CheckData(HttpContext.Current.Request.Cookies[i].Value.ToLower());</div><div class=\"line\">                <span class=\"keyword\">if</span> (result)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">referer</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> result = <span class=\"literal\">false</span>;</div><div class=\"line\">            <span class=\"keyword\">return</span> result = CheckData(HttpContext.Current.Request.UrlReferrer.ToString());</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">CheckData</span><span class=\"params\">(<span class=\"built_in\">string</span> inputData)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (Regex.IsMatch(inputData, StrRegex))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"PDF操作","date":"2018-06-11T06:36:07.000Z","+description":"iText","_content":"\nPDF操作去除页脚部位的水印\n\n\n<!--more-->\n## 问题描述\n\n使用某报表插件时，由于免费版导出PDF会出现水印字体，因此考虑将该水印去除后，输出到客户端浏览器。\n{% asset_img 20180611152915.jpg 页脚位置出现水印 %}\n\n\n考虑的解决方案包括：\n1、 报表插件导出PDF ->编辑PDF水印->PDF输出到客户端。\n2、 报表插件导出图片->编程处理图片水印->将多张图片生成PDF->PDF输出到客户端。\n3、 寻找破解版的报表插件直接导出PDF。\n4、 自己通过代码直接生成Word，不使用第三方报表插件。\n\nOK上面就是能够想到的解决方法。\n\n第4种方案应该可以实现，但相对来说工作量大一些，放到最后尝试，所以没有使用。\n第3种方案简单粗暴，但在实现过程中发现第三方报表插件的版本5.6虽然有破解版，但由于版本过低，导致页面只能在\n低版本的IE中才能查看，明显无法用于实际环境。\n第2种方案虽然比直接操作PDF复杂一些，但是肯定能实现，在实现的过程中发现，报表插件导出的图片IMG中会存在分页内容，所以暂时放弃。（后期发现可以导出多张图片）\n``` c\n        String visitGUID=Guid.NewGuid().ToString();\n        IGRExportOption ExportOption = Report.PrepareExport(GRExportType.gretIMG);\n        IGRE2IMGOption E2IMGOption = ExportOption.AsE2IMGOption;\n        E2IMGOption.ImageType = GRExportImageType.greitPNG;\n        E2IMGOption.AllInOne = false; //所有页产生在一个图像文件中\n        E2IMGOption.FileName = ReportPath + \"\\\\SuperviseExamine\\\\Result\\\\\" + visitGUID + \"\\\\\" + visitGUID + \".png\";\n        Report.Export();\n\n```\n最后留下第1种方案并开始进行尝试实现。\n\n## 收集网上信息\n\n对PDF操作肯定找第三方控件了，iText上场。\n### PDF操作插件 iText\niText is a PDF library that allows you to CREATE, ADAPT, INSPECT and MAINTAIN documents in the Portable Document Format (PDF), allowing you to add PDF functionality to your software projects with ease.  We even have documentation to help you get coding.\n\nWe have two currently supported versions: iText 5 and iText 7. Both are available under AGPL and Commercial license.\n* iText 5 AGPL\n* iText 7 community: https://www.nuget.org/packages/itext7/\n\niText 5 is a one solution library that is complex, but well documented to help you create your solutions.\n\niText 7 is a complete re-write of iText 5, allowing you to choose your adventure with add-ons, all based on a simple, modular code structure that is easy to use and well documented.\n\n本次使用iText5插件，版本号5.5.13\n\n## 代码\n\n### 最终实现代码\n\n方便找到这篇文章的朋友，直接将实现的代码放出\n``` c\n public class ServerUtility\n    {\n        //直接使用流对象进行数据处理\n        public static void ResponseBinaryPDF(HttpContextBase context, IGRBinaryObject ExportResult, string FileName, string ContentType, string OpenMode)\n        {\n            //通过已有PDF来修改水印\n            //using (FileStream fs = new FileStream(outputFilePath, FileMode.Open))\n            //{\n            //    byte[] bytes = new byte[(int)fs.Length];\n            //    fs.Read(bytes, 0, bytes.Length);\n            //    fs.Close();\n            //}\n\n            byte[] inputPdfStreamData = (byte[])(ExportResult.SaveToVariant());//PDF字节流\n\n            using (MemoryStream outputPdfStream = new MemoryStream())\n            {\n                //使用PDF字节数组初始化PDFReader\n                PdfReader reader = new PdfReader(inputPdfStreamData);\n                //按照原PDF的内容创建PdfStamper对象，准备放一张白色图片去掉水印\n                using (PdfStamper stamper = new PdfStamper(reader, outputPdfStream))\n                {\n                    int pageCount = reader.NumberOfPages;\n                    //多页循环\n                    for (int i = 1; i <= pageCount; i++)\n                    {\n                        //创建一个用来覆盖水印的白色背景图片，大小要比水印稍大\n                        iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(new Bitmap(400, 30), BaseColor.WHITE);\n                        //把图片放到水印的位置（IText使用的单位是pt而不是px，（0,0）坐标是PDF左下角！！）\n                        image.SetAbsolutePosition(Convert.ToInt16(70), Convert.ToInt16(37));\n                        //添加图片到PDF的当前页\n                        stamper.GetOverContent(i).AddImage(image, true);\n                    }\n                }\n\n                //将MemoryStream输出到客户端浏览器\n                string Disposition = \"\";\n\n                if (OpenMode != null && OpenMode.Length > 0)\n                    Disposition = OpenMode + \"; \";\n\n                Disposition += ServerUtility.EncodeAttachmentFileName(context.Request.UserAgent, FileName);\n\n                context.Response.ContentType = ContentType;\n                context.Response.AppendHeader(\"Content-Length\", ExportResult.DataSize.ToString());\n                context.Response.AppendHeader(\"Content-Disposition\", Disposition);\n                context.Response.ClearContent();\n                object Data = ExportResult.SaveToVariant();\n                context.Response.BinaryWrite(outputPdfStream.ToArray());\n                context.Response.Flush();\n            }\n\n        }\n    }    \n```\n\n### 实现代码过程\n\n1、 网络上找到了简单实用iText操作PDF的代码，分为三块内容，第一块是创建空白PDF，第二块是创建水印，第三块去除水印。\n```c\n    static void temp1()\n        {\n            string workingFolder = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);\n            string startFile = Path.Combine(workingFolder, \"StartFile.pdf\");\n            string watermarkedFile = Path.Combine(workingFolder, \"Watermarked.pdf\");\n            string unwatermarkedFile = Path.Combine(workingFolder, \"Un-watermarked.pdf\");\n            string watermarkText = \"This is a test\";\n\n            //watermarkedFile= @\"E:\\a\\1.pdf\";\n            //SECTION 1\n            //Create a 5 page PDF, nothing special here\n            using (FileStream fs = new FileStream(startFile, FileMode.Create, FileAccess.Write, FileShare.None))\n            {\n                using (Document doc = new Document(PageSize.LETTER))\n                {\n                    using (PdfWriter witier = PdfWriter.GetInstance(doc, fs))\n                    {\n                        doc.Open();\n\n                        for (int i = 1; i <= 5; i++)\n                        {\n                            doc.NewPage();\n                            doc.Add(new Paragraph(String.Format(\"This is page {0}\", i)));\n                        }\n\n                        doc.Close();\n                    }\n                }\n            }\n\n            //SECTION 2\n            //Create our watermark on a separate layer.The only different here is that we are adding the watermark to a PdfLayer which is an OCG or Optional Content Group\n            PdfReader reader1 = new PdfReader(startFile);\n            using (FileStream fs = new FileStream(watermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))\n            {\n                using (PdfStamper stamper = new PdfStamper(reader1, fs))\n                {\n                    int pageCount1 = reader1.NumberOfPages;\n                    //Create a new layer\n                    PdfLayer layer = new PdfLayer(\"WatermarkLayer\", stamper.Writer);\n                    for (int i = 1; i <= pageCount1; i++)\n                    {\n                        iTextSharp.text.Rectangle rect = reader1.GetPageSize(i);\n                        //Get the ContentByte object\n                        PdfContentByte cb = stamper.GetUnderContent(i);\n                        //Tell the CB that the next commands should be \"bound\" to this new layer\n                        cb.BeginLayer(layer);\n                        cb.SetFontAndSize(BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED), 50);\n                        PdfGState gState = new PdfGState();\n                        gState.FillOpacity = 0.25f;\n                        cb.SetGState(gState);\n                        cb.SetColorFill(BaseColor.BLACK);\n                        cb.BeginText();\n                        cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, watermarkText, rect.Width / 2, rect.Height / 2, 45f);\n                        cb.EndText();\n                        //\"Close\" the layer\n                        cb.EndLayer();\n                    }\n                }\n            }\n\n            //SECTION 3\n            //Remove the layer created above\n            //First we bind a reader to the watermarked file, then strip out a bunch of things, and finally use a simple stamper to write out the edited reader\n            PdfReader reader2 = new PdfReader(watermarkedFile);\n\n            //NOTE, This will destroy all layers in the document, only use if you don't have additional layers\n            //Remove the OCG group completely from the document.\n            //reader2.Catalog.Remove(PdfName.OCPROPERTIES);\n\n            //Clean up the reader, optional\n            reader2.RemoveUnusedObjects();\n\n            //Placeholder variables\n            PRStream stream;\n            String content;\n            PdfDictionary page;\n            PdfArray contentarray;\n\n            //Get the page count\n            int pageCount2 = reader2.NumberOfPages;\n            //Loop through each page\n            for (int i = 1; i <= pageCount2; i++)\n            {\n                //Get the page\n                page = reader2.GetPageN(i);\n                //Get the raw content\n                contentarray = page.GetAsArray(PdfName.CONTENTS);\n                if (contentarray != null)\n                {\n                    //Loop through content\n                    for (int j = 0; j < contentarray.Size; j++)\n                    {\n                        //Get the raw byte stream\n                        stream = (PRStream)contentarray.GetAsStream(j);\n                        //Convert to a string. NOTE, you might need a different encoding here\n                        content = System.Text.Encoding.ASCII.GetString(PdfReader.GetStreamBytes(stream));\n                        //Look for the OCG token in the stream as well as our watermarked text\n                        if (content.IndexOf(\"/OC\") >= 0 && content.IndexOf(watermarkText) >= 0)\n                        {\n                            //Remove it by giving it zero length and zero data\n                            stream.Put(PdfName.LENGTH, new PdfNumber(0));\n                            stream.SetData(new byte[0]);\n                        }\n                    }\n                }\n            }\n\n            //Write the content out\n            using (FileStream fs = new FileStream(unwatermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))\n            {\n                using (PdfStamper stamper = new PdfStamper(reader2, fs))\n                {\n\n                }\n            }\n            //this.Close();\n        }\n```\n\n2、由于水印位置固定且位于页脚处无其他内容，因此创建白色图片覆盖水印未知实现去除功能。\n结合上面的代码和网上找到的相关实现进行修改后如下：\n```c\n static void temp2()\n        {\n            string watermarkedFile = @\"E:\\a\\1out.pdf\";\n            string startFile = @\"E:\\a\\1.pdf\";\n            File.Delete(watermarkedFile);\n            PdfReader reader1 = new PdfReader(startFile);\n            using (FileStream fs = new FileStream(watermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))\n            {\n                using (PdfStamper stamper = new PdfStamper(reader1, fs))\n                {\n                    int pageCount1 = reader1.NumberOfPages;\n                    //Create a new layer\n                    PdfLayer layer = new PdfLayer(\"WatermarkLayer\", stamper.Writer);\n                    for (int i = 1; i <= pageCount1; i++)\n                    {\n                        PdfContentByte canvas = stamper.GetOverContent(i);\n                        canvas.SaveState();\n                        canvas.SetColorFill(BaseColor.RED);\n                        //PdfGState gs = new PdfGState();\n                        //gs.FillOpacity = 0.6f;//设置透明度\n                        //canvas.SetGState(gs);\n                        //PDF的左下角的坐标是（0,0），单位是pt\n                        canvas.Rectangle(70, 38, 400, 30);\n                        canvas.Fill();\n                        canvas.RestoreState();\n                    }\n\n                    stamper.Close();\n                    reader1.Close();\n                }\n            }\n        }\n\n```\n\n\n3、结合到实际的系统中(将有水印和无水印的两个PDF保存到本地，再以流方式传给客户端浏览器)\n\n```c\n        /// <summary>\n        /// 将报表生成的二进制数据响应给 HTPP 请求客户端\n        /// </summary>\n        /// <param name=\"context\"> HTPP 请求对象</param>\n        /// <param name=\"ExportResult\">报表生成的二进制数据</param>\n        /// <param name=\"FileName\">指定下载(或保存)文件时的默认文件名称</param>\n        /// <param name=\"ContentType\">响应的ContentType</param>\n        /// <param name=\"OpenMode\">指定生成的数据打开模式，可选[inline|attachment]，\"inline\"表示在网页中内联显示，\"attachment\"表示以附件文件形式下载。如果不指定，由浏览器自动确定打开方式。</param>\n        public static void ResponseBinaryPDF(HttpContextBase context, IGRBinaryObject ExportResult, string FileName, string ContentType, string OpenMode)\n        {\n            #region 保存到本地pdf\n\n            string newFileName = DirFileHelper.GetRamCode() + \".pdf\"; //随机生成新的文件名\n            string upLoadPath = DirFileHelper.GetUpLoadPath(); //保存目录相对路径\n            string fullUpLoadPath = DirFileHelper.GetMapPath(upLoadPath); //保存目录的物理路径\n            string newFilePath = upLoadPath + newFileName; //保存后的路径\n\n            //检查保存的物理路径是否存在，不存在则创建\n            if (!Directory.Exists(fullUpLoadPath))\n            {\n                Directory.CreateDirectory(fullUpLoadPath);\n            }\n\n            //保存文件\n            ExportResult.SaveToFile(fullUpLoadPath + newFileName);\n\n\n            #endregion\n\n            #region 读取pdf去除水印\n\n\n            string inputFilePath = fullUpLoadPath + newFileName;\n            string outputFilePath = fullUpLoadPath + newFileName.Replace(\".pdf\", \"_removed.pdf\");//去除水印后pdf\n            try\n            {\n                using (Stream inputPdfStream = new FileStream(inputFilePath, FileMode.Open, FileAccess.Read, FileShare.Read))\n                using (Stream outputPdfStream = new FileStream(outputFilePath, FileMode.Create, FileAccess.Write, FileShare.ReadWrite))\n                {\n                    //Opens the unmodified PDF for reading\n                    PdfReader reader = new PdfReader(inputPdfStream);\n                    //Creates a stamper to put an image on the original pdf\n                    PdfStamper stamper = new PdfStamper(reader, outputPdfStream); //{ FormFlattening = true, FreeTextFlattening = true };\n\n                    int pageCount = reader.NumberOfPages;\n                    ////Create a new layer\n                    //PdfLayer layer = new PdfLayer(\"WatermarkLayer\", stamper.Writer);\n                    for (int i = 1; i <= pageCount; i++)\n                    {\n                        //PdfContentByte canvas = stamper.GetUnderContent(i);\n                        //Creates an image that is the size i need to hide the text i'm interested in removing\n                        iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(new Bitmap(400, 30), BaseColor.WHITE);\n                        //Sets the position that the image needs to be placed (ie the location of the text to be removed)\n                        //txtX.Text = 33,txtY.Text = 708 70, 38, 400, 30\n                        image.SetAbsolutePosition(Convert.ToInt16(70), Convert.ToInt16(37));\n                        //Adds the image to the output pdf\n                        stamper.GetOverContent(i).AddImage(image, true);\n                    }\n\n\n                    //Creates the first copy of the outputted pdf\n                    stamper.Close();\n                }\n            }\n            catch (Exception ex)\n            {\n            }\n\n\n            #endregion\n\n            #region 返回客户端浏览器PDF\n            //以字符流的形式下载文件\n            using (FileStream fs = new FileStream(outputFilePath, FileMode.Open))\n            {\n                byte[] bytes = new byte[(int)fs.Length];\n                fs.Read(bytes, 0, bytes.Length);\n                fs.Close();\n                string Disposition = \"\";\n\n                if (OpenMode != null && OpenMode.Length > 0)\n                    Disposition = OpenMode + \"; \";\n\n                Disposition += ServerUtility.EncodeAttachmentFileName(context.Request.UserAgent, FileName);\n\n                context.Response.ContentType = ContentType;\n                context.Response.AppendHeader(\"Content-Length\", ExportResult.DataSize.ToString());\n                context.Response.AppendHeader(\"Content-Disposition\", Disposition);\n\n                context.Response.ClearContent();\n                object Data = ExportResult.SaveToVariant();\n                context.Response.BinaryWrite(bytes);\n\n                context.Response.Flush();\n            }\n\n\n            #endregion\n\n\n        }       \n\n```\n\n\n\n## 网上相关资源与信息\n1、 [iText官网](https://itextpdf.com/)\n2、 [iText的NuGet地址](https://www.nuget.org/packages/iTextSharp/)\n3、 [How to convert pdfstamper to byte array](http://www.it1352.com/245699.html)\n4、 [PdfStamper获得字节数组](http://stackoverflow.org.cn/front/ask/view?ask_id=236528)\n5、 [pt,px,em](http://www.runoob.com/w3cnote/px-pt-em-convert-table.html)\n6、 [使用itext直接替换PDF中的文本](https://blog.csdn.net/sishenkankan/article/details/53107195)","source":"_posts/PDF操作.md","raw":"---\ntitle: PDF操作\ndate: 2018-06-11 14:36:07\ntags:\ncategories:\n- 插件\n+description: \"iText\"\n---\n\nPDF操作去除页脚部位的水印\n\n\n<!--more-->\n## 问题描述\n\n使用某报表插件时，由于免费版导出PDF会出现水印字体，因此考虑将该水印去除后，输出到客户端浏览器。\n{% asset_img 20180611152915.jpg 页脚位置出现水印 %}\n\n\n考虑的解决方案包括：\n1、 报表插件导出PDF ->编辑PDF水印->PDF输出到客户端。\n2、 报表插件导出图片->编程处理图片水印->将多张图片生成PDF->PDF输出到客户端。\n3、 寻找破解版的报表插件直接导出PDF。\n4、 自己通过代码直接生成Word，不使用第三方报表插件。\n\nOK上面就是能够想到的解决方法。\n\n第4种方案应该可以实现，但相对来说工作量大一些，放到最后尝试，所以没有使用。\n第3种方案简单粗暴，但在实现过程中发现第三方报表插件的版本5.6虽然有破解版，但由于版本过低，导致页面只能在\n低版本的IE中才能查看，明显无法用于实际环境。\n第2种方案虽然比直接操作PDF复杂一些，但是肯定能实现，在实现的过程中发现，报表插件导出的图片IMG中会存在分页内容，所以暂时放弃。（后期发现可以导出多张图片）\n``` c\n        String visitGUID=Guid.NewGuid().ToString();\n        IGRExportOption ExportOption = Report.PrepareExport(GRExportType.gretIMG);\n        IGRE2IMGOption E2IMGOption = ExportOption.AsE2IMGOption;\n        E2IMGOption.ImageType = GRExportImageType.greitPNG;\n        E2IMGOption.AllInOne = false; //所有页产生在一个图像文件中\n        E2IMGOption.FileName = ReportPath + \"\\\\SuperviseExamine\\\\Result\\\\\" + visitGUID + \"\\\\\" + visitGUID + \".png\";\n        Report.Export();\n\n```\n最后留下第1种方案并开始进行尝试实现。\n\n## 收集网上信息\n\n对PDF操作肯定找第三方控件了，iText上场。\n### PDF操作插件 iText\niText is a PDF library that allows you to CREATE, ADAPT, INSPECT and MAINTAIN documents in the Portable Document Format (PDF), allowing you to add PDF functionality to your software projects with ease.  We even have documentation to help you get coding.\n\nWe have two currently supported versions: iText 5 and iText 7. Both are available under AGPL and Commercial license.\n* iText 5 AGPL\n* iText 7 community: https://www.nuget.org/packages/itext7/\n\niText 5 is a one solution library that is complex, but well documented to help you create your solutions.\n\niText 7 is a complete re-write of iText 5, allowing you to choose your adventure with add-ons, all based on a simple, modular code structure that is easy to use and well documented.\n\n本次使用iText5插件，版本号5.5.13\n\n## 代码\n\n### 最终实现代码\n\n方便找到这篇文章的朋友，直接将实现的代码放出\n``` c\n public class ServerUtility\n    {\n        //直接使用流对象进行数据处理\n        public static void ResponseBinaryPDF(HttpContextBase context, IGRBinaryObject ExportResult, string FileName, string ContentType, string OpenMode)\n        {\n            //通过已有PDF来修改水印\n            //using (FileStream fs = new FileStream(outputFilePath, FileMode.Open))\n            //{\n            //    byte[] bytes = new byte[(int)fs.Length];\n            //    fs.Read(bytes, 0, bytes.Length);\n            //    fs.Close();\n            //}\n\n            byte[] inputPdfStreamData = (byte[])(ExportResult.SaveToVariant());//PDF字节流\n\n            using (MemoryStream outputPdfStream = new MemoryStream())\n            {\n                //使用PDF字节数组初始化PDFReader\n                PdfReader reader = new PdfReader(inputPdfStreamData);\n                //按照原PDF的内容创建PdfStamper对象，准备放一张白色图片去掉水印\n                using (PdfStamper stamper = new PdfStamper(reader, outputPdfStream))\n                {\n                    int pageCount = reader.NumberOfPages;\n                    //多页循环\n                    for (int i = 1; i <= pageCount; i++)\n                    {\n                        //创建一个用来覆盖水印的白色背景图片，大小要比水印稍大\n                        iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(new Bitmap(400, 30), BaseColor.WHITE);\n                        //把图片放到水印的位置（IText使用的单位是pt而不是px，（0,0）坐标是PDF左下角！！）\n                        image.SetAbsolutePosition(Convert.ToInt16(70), Convert.ToInt16(37));\n                        //添加图片到PDF的当前页\n                        stamper.GetOverContent(i).AddImage(image, true);\n                    }\n                }\n\n                //将MemoryStream输出到客户端浏览器\n                string Disposition = \"\";\n\n                if (OpenMode != null && OpenMode.Length > 0)\n                    Disposition = OpenMode + \"; \";\n\n                Disposition += ServerUtility.EncodeAttachmentFileName(context.Request.UserAgent, FileName);\n\n                context.Response.ContentType = ContentType;\n                context.Response.AppendHeader(\"Content-Length\", ExportResult.DataSize.ToString());\n                context.Response.AppendHeader(\"Content-Disposition\", Disposition);\n                context.Response.ClearContent();\n                object Data = ExportResult.SaveToVariant();\n                context.Response.BinaryWrite(outputPdfStream.ToArray());\n                context.Response.Flush();\n            }\n\n        }\n    }    \n```\n\n### 实现代码过程\n\n1、 网络上找到了简单实用iText操作PDF的代码，分为三块内容，第一块是创建空白PDF，第二块是创建水印，第三块去除水印。\n```c\n    static void temp1()\n        {\n            string workingFolder = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);\n            string startFile = Path.Combine(workingFolder, \"StartFile.pdf\");\n            string watermarkedFile = Path.Combine(workingFolder, \"Watermarked.pdf\");\n            string unwatermarkedFile = Path.Combine(workingFolder, \"Un-watermarked.pdf\");\n            string watermarkText = \"This is a test\";\n\n            //watermarkedFile= @\"E:\\a\\1.pdf\";\n            //SECTION 1\n            //Create a 5 page PDF, nothing special here\n            using (FileStream fs = new FileStream(startFile, FileMode.Create, FileAccess.Write, FileShare.None))\n            {\n                using (Document doc = new Document(PageSize.LETTER))\n                {\n                    using (PdfWriter witier = PdfWriter.GetInstance(doc, fs))\n                    {\n                        doc.Open();\n\n                        for (int i = 1; i <= 5; i++)\n                        {\n                            doc.NewPage();\n                            doc.Add(new Paragraph(String.Format(\"This is page {0}\", i)));\n                        }\n\n                        doc.Close();\n                    }\n                }\n            }\n\n            //SECTION 2\n            //Create our watermark on a separate layer.The only different here is that we are adding the watermark to a PdfLayer which is an OCG or Optional Content Group\n            PdfReader reader1 = new PdfReader(startFile);\n            using (FileStream fs = new FileStream(watermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))\n            {\n                using (PdfStamper stamper = new PdfStamper(reader1, fs))\n                {\n                    int pageCount1 = reader1.NumberOfPages;\n                    //Create a new layer\n                    PdfLayer layer = new PdfLayer(\"WatermarkLayer\", stamper.Writer);\n                    for (int i = 1; i <= pageCount1; i++)\n                    {\n                        iTextSharp.text.Rectangle rect = reader1.GetPageSize(i);\n                        //Get the ContentByte object\n                        PdfContentByte cb = stamper.GetUnderContent(i);\n                        //Tell the CB that the next commands should be \"bound\" to this new layer\n                        cb.BeginLayer(layer);\n                        cb.SetFontAndSize(BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED), 50);\n                        PdfGState gState = new PdfGState();\n                        gState.FillOpacity = 0.25f;\n                        cb.SetGState(gState);\n                        cb.SetColorFill(BaseColor.BLACK);\n                        cb.BeginText();\n                        cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, watermarkText, rect.Width / 2, rect.Height / 2, 45f);\n                        cb.EndText();\n                        //\"Close\" the layer\n                        cb.EndLayer();\n                    }\n                }\n            }\n\n            //SECTION 3\n            //Remove the layer created above\n            //First we bind a reader to the watermarked file, then strip out a bunch of things, and finally use a simple stamper to write out the edited reader\n            PdfReader reader2 = new PdfReader(watermarkedFile);\n\n            //NOTE, This will destroy all layers in the document, only use if you don't have additional layers\n            //Remove the OCG group completely from the document.\n            //reader2.Catalog.Remove(PdfName.OCPROPERTIES);\n\n            //Clean up the reader, optional\n            reader2.RemoveUnusedObjects();\n\n            //Placeholder variables\n            PRStream stream;\n            String content;\n            PdfDictionary page;\n            PdfArray contentarray;\n\n            //Get the page count\n            int pageCount2 = reader2.NumberOfPages;\n            //Loop through each page\n            for (int i = 1; i <= pageCount2; i++)\n            {\n                //Get the page\n                page = reader2.GetPageN(i);\n                //Get the raw content\n                contentarray = page.GetAsArray(PdfName.CONTENTS);\n                if (contentarray != null)\n                {\n                    //Loop through content\n                    for (int j = 0; j < contentarray.Size; j++)\n                    {\n                        //Get the raw byte stream\n                        stream = (PRStream)contentarray.GetAsStream(j);\n                        //Convert to a string. NOTE, you might need a different encoding here\n                        content = System.Text.Encoding.ASCII.GetString(PdfReader.GetStreamBytes(stream));\n                        //Look for the OCG token in the stream as well as our watermarked text\n                        if (content.IndexOf(\"/OC\") >= 0 && content.IndexOf(watermarkText) >= 0)\n                        {\n                            //Remove it by giving it zero length and zero data\n                            stream.Put(PdfName.LENGTH, new PdfNumber(0));\n                            stream.SetData(new byte[0]);\n                        }\n                    }\n                }\n            }\n\n            //Write the content out\n            using (FileStream fs = new FileStream(unwatermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))\n            {\n                using (PdfStamper stamper = new PdfStamper(reader2, fs))\n                {\n\n                }\n            }\n            //this.Close();\n        }\n```\n\n2、由于水印位置固定且位于页脚处无其他内容，因此创建白色图片覆盖水印未知实现去除功能。\n结合上面的代码和网上找到的相关实现进行修改后如下：\n```c\n static void temp2()\n        {\n            string watermarkedFile = @\"E:\\a\\1out.pdf\";\n            string startFile = @\"E:\\a\\1.pdf\";\n            File.Delete(watermarkedFile);\n            PdfReader reader1 = new PdfReader(startFile);\n            using (FileStream fs = new FileStream(watermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))\n            {\n                using (PdfStamper stamper = new PdfStamper(reader1, fs))\n                {\n                    int pageCount1 = reader1.NumberOfPages;\n                    //Create a new layer\n                    PdfLayer layer = new PdfLayer(\"WatermarkLayer\", stamper.Writer);\n                    for (int i = 1; i <= pageCount1; i++)\n                    {\n                        PdfContentByte canvas = stamper.GetOverContent(i);\n                        canvas.SaveState();\n                        canvas.SetColorFill(BaseColor.RED);\n                        //PdfGState gs = new PdfGState();\n                        //gs.FillOpacity = 0.6f;//设置透明度\n                        //canvas.SetGState(gs);\n                        //PDF的左下角的坐标是（0,0），单位是pt\n                        canvas.Rectangle(70, 38, 400, 30);\n                        canvas.Fill();\n                        canvas.RestoreState();\n                    }\n\n                    stamper.Close();\n                    reader1.Close();\n                }\n            }\n        }\n\n```\n\n\n3、结合到实际的系统中(将有水印和无水印的两个PDF保存到本地，再以流方式传给客户端浏览器)\n\n```c\n        /// <summary>\n        /// 将报表生成的二进制数据响应给 HTPP 请求客户端\n        /// </summary>\n        /// <param name=\"context\"> HTPP 请求对象</param>\n        /// <param name=\"ExportResult\">报表生成的二进制数据</param>\n        /// <param name=\"FileName\">指定下载(或保存)文件时的默认文件名称</param>\n        /// <param name=\"ContentType\">响应的ContentType</param>\n        /// <param name=\"OpenMode\">指定生成的数据打开模式，可选[inline|attachment]，\"inline\"表示在网页中内联显示，\"attachment\"表示以附件文件形式下载。如果不指定，由浏览器自动确定打开方式。</param>\n        public static void ResponseBinaryPDF(HttpContextBase context, IGRBinaryObject ExportResult, string FileName, string ContentType, string OpenMode)\n        {\n            #region 保存到本地pdf\n\n            string newFileName = DirFileHelper.GetRamCode() + \".pdf\"; //随机生成新的文件名\n            string upLoadPath = DirFileHelper.GetUpLoadPath(); //保存目录相对路径\n            string fullUpLoadPath = DirFileHelper.GetMapPath(upLoadPath); //保存目录的物理路径\n            string newFilePath = upLoadPath + newFileName; //保存后的路径\n\n            //检查保存的物理路径是否存在，不存在则创建\n            if (!Directory.Exists(fullUpLoadPath))\n            {\n                Directory.CreateDirectory(fullUpLoadPath);\n            }\n\n            //保存文件\n            ExportResult.SaveToFile(fullUpLoadPath + newFileName);\n\n\n            #endregion\n\n            #region 读取pdf去除水印\n\n\n            string inputFilePath = fullUpLoadPath + newFileName;\n            string outputFilePath = fullUpLoadPath + newFileName.Replace(\".pdf\", \"_removed.pdf\");//去除水印后pdf\n            try\n            {\n                using (Stream inputPdfStream = new FileStream(inputFilePath, FileMode.Open, FileAccess.Read, FileShare.Read))\n                using (Stream outputPdfStream = new FileStream(outputFilePath, FileMode.Create, FileAccess.Write, FileShare.ReadWrite))\n                {\n                    //Opens the unmodified PDF for reading\n                    PdfReader reader = new PdfReader(inputPdfStream);\n                    //Creates a stamper to put an image on the original pdf\n                    PdfStamper stamper = new PdfStamper(reader, outputPdfStream); //{ FormFlattening = true, FreeTextFlattening = true };\n\n                    int pageCount = reader.NumberOfPages;\n                    ////Create a new layer\n                    //PdfLayer layer = new PdfLayer(\"WatermarkLayer\", stamper.Writer);\n                    for (int i = 1; i <= pageCount; i++)\n                    {\n                        //PdfContentByte canvas = stamper.GetUnderContent(i);\n                        //Creates an image that is the size i need to hide the text i'm interested in removing\n                        iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(new Bitmap(400, 30), BaseColor.WHITE);\n                        //Sets the position that the image needs to be placed (ie the location of the text to be removed)\n                        //txtX.Text = 33,txtY.Text = 708 70, 38, 400, 30\n                        image.SetAbsolutePosition(Convert.ToInt16(70), Convert.ToInt16(37));\n                        //Adds the image to the output pdf\n                        stamper.GetOverContent(i).AddImage(image, true);\n                    }\n\n\n                    //Creates the first copy of the outputted pdf\n                    stamper.Close();\n                }\n            }\n            catch (Exception ex)\n            {\n            }\n\n\n            #endregion\n\n            #region 返回客户端浏览器PDF\n            //以字符流的形式下载文件\n            using (FileStream fs = new FileStream(outputFilePath, FileMode.Open))\n            {\n                byte[] bytes = new byte[(int)fs.Length];\n                fs.Read(bytes, 0, bytes.Length);\n                fs.Close();\n                string Disposition = \"\";\n\n                if (OpenMode != null && OpenMode.Length > 0)\n                    Disposition = OpenMode + \"; \";\n\n                Disposition += ServerUtility.EncodeAttachmentFileName(context.Request.UserAgent, FileName);\n\n                context.Response.ContentType = ContentType;\n                context.Response.AppendHeader(\"Content-Length\", ExportResult.DataSize.ToString());\n                context.Response.AppendHeader(\"Content-Disposition\", Disposition);\n\n                context.Response.ClearContent();\n                object Data = ExportResult.SaveToVariant();\n                context.Response.BinaryWrite(bytes);\n\n                context.Response.Flush();\n            }\n\n\n            #endregion\n\n\n        }       \n\n```\n\n\n\n## 网上相关资源与信息\n1、 [iText官网](https://itextpdf.com/)\n2、 [iText的NuGet地址](https://www.nuget.org/packages/iTextSharp/)\n3、 [How to convert pdfstamper to byte array](http://www.it1352.com/245699.html)\n4、 [PdfStamper获得字节数组](http://stackoverflow.org.cn/front/ask/view?ask_id=236528)\n5、 [pt,px,em](http://www.runoob.com/w3cnote/px-pt-em-convert-table.html)\n6、 [使用itext直接替换PDF中的文本](https://blog.csdn.net/sishenkankan/article/details/53107195)","slug":"PDF操作","published":1,"updated":"2018-06-15T00:41:13.563Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayul000hocm71593gxpc","content":"<p>PDF操作去除页脚部位的水印</p>\n<a id=\"more\"></a>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>使用某报表插件时，由于免费版导出PDF会出现水印字体，因此考虑将该水印去除后，输出到客户端浏览器。<br><img src=\"/2018/06/11/PDF操作/20180611152915.jpg\" alt=\"页脚位置出现水印\" title=\"页脚位置出现水印\"></p>\n<p>考虑的解决方案包括：<br>1、 报表插件导出PDF -&gt;编辑PDF水印-&gt;PDF输出到客户端。<br>2、 报表插件导出图片-&gt;编程处理图片水印-&gt;将多张图片生成PDF-&gt;PDF输出到客户端。<br>3、 寻找破解版的报表插件直接导出PDF。<br>4、 自己通过代码直接生成Word，不使用第三方报表插件。</p>\n<p>OK上面就是能够想到的解决方法。</p>\n<p>第4种方案应该可以实现，但相对来说工作量大一些，放到最后尝试，所以没有使用。<br>第3种方案简单粗暴，但在实现过程中发现第三方报表插件的版本5.6虽然有破解版，但由于版本过低，导致页面只能在<br>低版本的IE中才能查看，明显无法用于实际环境。<br>第2种方案虽然比直接操作PDF复杂一些，但是肯定能实现，在实现的过程中发现，报表插件导出的图片IMG中会存在分页内容，所以暂时放弃。（后期发现可以导出多张图片）<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">String visitGUID=Guid.NewGuid().ToString();</div><div class=\"line\">IGRExportOption ExportOption = Report.PrepareExport(GRExportType.gretIMG);</div><div class=\"line\">IGRE2IMGOption E2IMGOption = ExportOption.AsE2IMGOption;</div><div class=\"line\">E2IMGOption.ImageType = GRExportImageType.greitPNG;</div><div class=\"line\">E2IMGOption.AllInOne = <span class=\"literal\">false</span>; <span class=\"comment\">//所有页产生在一个图像文件中</span></div><div class=\"line\">E2IMGOption.FileName = ReportPath + <span class=\"string\">\"\\\\SuperviseExamine\\\\Result\\\\\"</span> + visitGUID + <span class=\"string\">\"\\\\\"</span> + visitGUID + <span class=\"string\">\".png\"</span>;</div><div class=\"line\">Report.Export();</div></pre></td></tr></table></figure></p>\n<p>最后留下第1种方案并开始进行尝试实现。</p>\n<h2 id=\"收集网上信息\"><a href=\"#收集网上信息\" class=\"headerlink\" title=\"收集网上信息\"></a>收集网上信息</h2><p>对PDF操作肯定找第三方控件了，iText上场。</p>\n<h3 id=\"PDF操作插件-iText\"><a href=\"#PDF操作插件-iText\" class=\"headerlink\" title=\"PDF操作插件 iText\"></a>PDF操作插件 iText</h3><p>iText is a PDF library that allows you to CREATE, ADAPT, INSPECT and MAINTAIN documents in the Portable Document Format (PDF), allowing you to add PDF functionality to your software projects with ease.  We even have documentation to help you get coding.</p>\n<p>We have two currently supported versions: iText 5 and iText 7. Both are available under AGPL and Commercial license.</p>\n<ul>\n<li>iText 5 AGPL</li>\n<li>iText 7 community: <a href=\"https://www.nuget.org/packages/itext7/\" target=\"_blank\" rel=\"external\">https://www.nuget.org/packages/itext7/</a></li>\n</ul>\n<p>iText 5 is a one solution library that is complex, but well documented to help you create your solutions.</p>\n<p>iText 7 is a complete re-write of iText 5, allowing you to choose your adventure with add-ons, all based on a simple, modular code structure that is easy to use and well documented.</p>\n<p>本次使用iText5插件，版本号5.5.13</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"最终实现代码\"><a href=\"#最终实现代码\" class=\"headerlink\" title=\"最终实现代码\"></a>最终实现代码</h3><p>方便找到这篇文章的朋友，直接将实现的代码放出<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ServerUtility</div><div class=\"line\">   &#123;</div><div class=\"line\">       <span class=\"comment\">//直接使用流对象进行数据处理</span></div><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ResponseBinaryPDF</span><span class=\"params\">(HttpContextBase context, IGRBinaryObject ExportResult, <span class=\"built_in\">string</span> FileName, <span class=\"built_in\">string</span> ContentType, <span class=\"built_in\">string</span> OpenMode)</span></span></div><div class=\"line\">       &#123;</div><div class=\"line\">           <span class=\"comment\">//通过已有PDF来修改水印</span></div><div class=\"line\">           <span class=\"comment\">//using (FileStream fs = new FileStream(outputFilePath, FileMode.Open))</span></div><div class=\"line\">           <span class=\"comment\">//&#123;</span></div><div class=\"line\">           <span class=\"comment\">//    byte[] bytes = new byte[(int)fs.Length];</span></div><div class=\"line\">           <span class=\"comment\">//    fs.Read(bytes, 0, bytes.Length);</span></div><div class=\"line\">           <span class=\"comment\">//    fs.Close();</span></div><div class=\"line\">           <span class=\"comment\">//&#125;</span></div><div class=\"line\"></div><div class=\"line\">           byte[] inputPdfStreamData = (byte[])(ExportResult.SaveToVariant());<span class=\"comment\">//PDF字节流</span></div><div class=\"line\"></div><div class=\"line\">           <span class=\"keyword\">using</span> (MemoryStream outputPdfStream = <span class=\"keyword\">new</span> MemoryStream())</div><div class=\"line\">           &#123;</div><div class=\"line\">               <span class=\"comment\">//使用PDF字节数组初始化PDFReader</span></div><div class=\"line\">               PdfReader reader = <span class=\"keyword\">new</span> PdfReader(inputPdfStreamData);</div><div class=\"line\">               <span class=\"comment\">//按照原PDF的内容创建PdfStamper对象，准备放一张白色图片去掉水印</span></div><div class=\"line\">               <span class=\"keyword\">using</span> (PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader, outputPdfStream))</div><div class=\"line\">               &#123;</div><div class=\"line\">                   <span class=\"keyword\">int</span> pageCount = reader.NumberOfPages;</div><div class=\"line\">                   <span class=\"comment\">//多页循环</span></div><div class=\"line\">                   <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount; i++)</div><div class=\"line\">                   &#123;</div><div class=\"line\">                       <span class=\"comment\">//创建一个用来覆盖水印的白色背景图片，大小要比水印稍大</span></div><div class=\"line\">                       iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(<span class=\"keyword\">new</span> Bitmap(<span class=\"number\">400</span>, <span class=\"number\">30</span>), BaseColor.WHITE);</div><div class=\"line\">                       <span class=\"comment\">//把图片放到水印的位置（IText使用的单位是pt而不是px，（0,0）坐标是PDF左下角！！）</span></div><div class=\"line\">                       image.SetAbsolutePosition(Convert.ToInt16(<span class=\"number\">70</span>), Convert.ToInt16(<span class=\"number\">37</span>));</div><div class=\"line\">                       <span class=\"comment\">//添加图片到PDF的当前页</span></div><div class=\"line\">                       stamper.GetOverContent(i).AddImage(image, <span class=\"literal\">true</span>);</div><div class=\"line\">                   &#125;</div><div class=\"line\">               &#125;</div><div class=\"line\"></div><div class=\"line\">               <span class=\"comment\">//将MemoryStream输出到客户端浏览器</span></div><div class=\"line\">               <span class=\"built_in\">string</span> Disposition = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\">               <span class=\"keyword\">if</span> (OpenMode != null &amp;&amp; OpenMode.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                   Disposition = OpenMode + <span class=\"string\">\"; \"</span>;</div><div class=\"line\"></div><div class=\"line\">               Disposition += ServerUtility.EncodeAttachmentFileName(context.Request.UserAgent, FileName);</div><div class=\"line\"></div><div class=\"line\">               context.Response.ContentType = ContentType;</div><div class=\"line\">               context.Response.AppendHeader(<span class=\"string\">\"Content-Length\"</span>, ExportResult.DataSize.ToString());</div><div class=\"line\">               context.Response.AppendHeader(<span class=\"string\">\"Content-Disposition\"</span>, Disposition);</div><div class=\"line\">               context.Response.ClearContent();</div><div class=\"line\">               object Data = ExportResult.SaveToVariant();</div><div class=\"line\">               context.Response.BinaryWrite(outputPdfStream.ToArray());</div><div class=\"line\">               context.Response.Flush();</div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"实现代码过程\"><a href=\"#实现代码过程\" class=\"headerlink\" title=\"实现代码过程\"></a>实现代码过程</h3><p>1、 网络上找到了简单实用iText操作PDF的代码，分为三块内容，第一块是创建空白PDF，第二块是创建水印，第三块去除水印。<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">temp1</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"built_in\">string</span> workingFolder = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);</div><div class=\"line\">        <span class=\"built_in\">string</span> startFile = Path.Combine(workingFolder, <span class=\"string\">\"StartFile.pdf\"</span>);</div><div class=\"line\">        <span class=\"built_in\">string</span> watermarkedFile = Path.Combine(workingFolder, <span class=\"string\">\"Watermarked.pdf\"</span>);</div><div class=\"line\">        <span class=\"built_in\">string</span> unwatermarkedFile = Path.Combine(workingFolder, <span class=\"string\">\"Un-watermarked.pdf\"</span>);</div><div class=\"line\">        <span class=\"built_in\">string</span> watermarkText = <span class=\"string\">\"This is a test\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//watermarkedFile= @\"E:\\a\\1.pdf\";</span></div><div class=\"line\">        <span class=\"comment\">//SECTION 1</span></div><div class=\"line\">        <span class=\"comment\">//Create a 5 page PDF, nothing special here</span></div><div class=\"line\">        <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(startFile, FileMode.Create, FileAccess.Write, FileShare.None))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">using</span> (Document doc = <span class=\"keyword\">new</span> Document(PageSize.LETTER))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">using</span> (PdfWriter witier = PdfWriter.GetInstance(doc, fs))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    doc.Open();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        doc.NewPage();</div><div class=\"line\">                        doc.Add(<span class=\"keyword\">new</span> Paragraph(String.Format(<span class=\"string\">\"This is page &#123;0&#125;\"</span>, i)));</div><div class=\"line\">                    &#125;</div><div class=\"line\"></div><div class=\"line\">                    doc.Close();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//SECTION 2</span></div><div class=\"line\">        <span class=\"comment\">//Create our watermark on a separate layer.The only different here is that we are adding the watermark to a PdfLayer which is an OCG or Optional Content Group</span></div><div class=\"line\">        PdfReader reader1 = <span class=\"keyword\">new</span> PdfReader(startFile);</div><div class=\"line\">        <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(watermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">using</span> (PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader1, fs))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">int</span> pageCount1 = reader1.NumberOfPages;</div><div class=\"line\">                <span class=\"comment\">//Create a new layer</span></div><div class=\"line\">                PdfLayer layer = <span class=\"keyword\">new</span> PdfLayer(<span class=\"string\">\"WatermarkLayer\"</span>, stamper.Writer);</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount1; i++)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    iTextSharp.text.Rectangle rect = reader1.GetPageSize(i);</div><div class=\"line\">                    <span class=\"comment\">//Get the ContentByte object</span></div><div class=\"line\">                    PdfContentByte cb = stamper.GetUnderContent(i);</div><div class=\"line\">                    <span class=\"comment\">//Tell the CB that the next commands should be \"bound\" to this new layer</span></div><div class=\"line\">                    cb.BeginLayer(layer);</div><div class=\"line\">                    cb.SetFontAndSize(BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED), <span class=\"number\">50</span>);</div><div class=\"line\">                    PdfGState gState = <span class=\"keyword\">new</span> PdfGState();</div><div class=\"line\">                    gState.FillOpacity = <span class=\"number\">0.25f</span>;</div><div class=\"line\">                    cb.SetGState(gState);</div><div class=\"line\">                    cb.SetColorFill(BaseColor.BLACK);</div><div class=\"line\">                    cb.BeginText();</div><div class=\"line\">                    cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, watermarkText, rect.Width / <span class=\"number\">2</span>, rect.Height / <span class=\"number\">2</span>, <span class=\"number\">45f</span>);</div><div class=\"line\">                    cb.EndText();</div><div class=\"line\">                    <span class=\"comment\">//\"Close\" the layer</span></div><div class=\"line\">                    cb.EndLayer();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//SECTION 3</span></div><div class=\"line\">        <span class=\"comment\">//Remove the layer created above</span></div><div class=\"line\">        <span class=\"comment\">//First we bind a reader to the watermarked file, then strip out a bunch of things, and finally use a simple stamper to write out the edited reader</span></div><div class=\"line\">        PdfReader reader2 = <span class=\"keyword\">new</span> PdfReader(watermarkedFile);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//NOTE, This will destroy all layers in the document, only use if you don't have additional layers</span></div><div class=\"line\">        <span class=\"comment\">//Remove the OCG group completely from the document.</span></div><div class=\"line\">        <span class=\"comment\">//reader2.Catalog.Remove(PdfName.OCPROPERTIES);</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//Clean up the reader, optional</span></div><div class=\"line\">        reader2.RemoveUnusedObjects();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//Placeholder variables</span></div><div class=\"line\">        PRStream stream;</div><div class=\"line\">        String content;</div><div class=\"line\">        PdfDictionary page;</div><div class=\"line\">        PdfArray contentarray;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//Get the page count</span></div><div class=\"line\">        <span class=\"keyword\">int</span> pageCount2 = reader2.NumberOfPages;</div><div class=\"line\">        <span class=\"comment\">//Loop through each page</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount2; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//Get the page</span></div><div class=\"line\">            page = reader2.GetPageN(i);</div><div class=\"line\">            <span class=\"comment\">//Get the raw content</span></div><div class=\"line\">            contentarray = page.GetAsArray(PdfName.CONTENTS);</div><div class=\"line\">            <span class=\"keyword\">if</span> (contentarray != null)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//Loop through content</span></div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; contentarray.Size; j++)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"comment\">//Get the raw byte stream</span></div><div class=\"line\">                    stream = (PRStream)contentarray.GetAsStream(j);</div><div class=\"line\">                    <span class=\"comment\">//Convert to a string. NOTE, you might need a different encoding here</span></div><div class=\"line\">                    content = System.Text.Encoding.ASCII.GetString(PdfReader.GetStreamBytes(stream));</div><div class=\"line\">                    <span class=\"comment\">//Look for the OCG token in the stream as well as our watermarked text</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> (content.IndexOf(<span class=\"string\">\"/OC\"</span>) &gt;= <span class=\"number\">0</span> &amp;&amp; content.IndexOf(watermarkText) &gt;= <span class=\"number\">0</span>)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"comment\">//Remove it by giving it zero length and zero data</span></div><div class=\"line\">                        stream.Put(PdfName.LENGTH, <span class=\"keyword\">new</span> PdfNumber(<span class=\"number\">0</span>));</div><div class=\"line\">                        stream.SetData(<span class=\"keyword\">new</span> byte[<span class=\"number\">0</span>]);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//Write the content out</span></div><div class=\"line\">        <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(unwatermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">using</span> (PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader2, fs))</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//this.Close();</span></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>2、由于水印位置固定且位于页脚处无其他内容，因此创建白色图片覆盖水印未知实现去除功能。<br>结合上面的代码和网上找到的相关实现进行修改后如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">temp2</span><span class=\"params\">()</span></span></div><div class=\"line\">       &#123;</div><div class=\"line\">           <span class=\"built_in\">string</span> watermarkedFile = @<span class=\"string\">\"E:\\a\\1out.pdf\"</span>;</div><div class=\"line\">           <span class=\"built_in\">string</span> startFile = @<span class=\"string\">\"E:\\a\\1.pdf\"</span>;</div><div class=\"line\">           File.Delete(watermarkedFile);</div><div class=\"line\">           PdfReader reader1 = <span class=\"keyword\">new</span> PdfReader(startFile);</div><div class=\"line\">           <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(watermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))</div><div class=\"line\">           &#123;</div><div class=\"line\">               <span class=\"keyword\">using</span> (PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader1, fs))</div><div class=\"line\">               &#123;</div><div class=\"line\">                   <span class=\"keyword\">int</span> pageCount1 = reader1.NumberOfPages;</div><div class=\"line\">                   <span class=\"comment\">//Create a new layer</span></div><div class=\"line\">                   PdfLayer layer = <span class=\"keyword\">new</span> PdfLayer(<span class=\"string\">\"WatermarkLayer\"</span>, stamper.Writer);</div><div class=\"line\">                   <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount1; i++)</div><div class=\"line\">                   &#123;</div><div class=\"line\">                       PdfContentByte canvas = stamper.GetOverContent(i);</div><div class=\"line\">                       canvas.SaveState();</div><div class=\"line\">                       canvas.SetColorFill(BaseColor.RED);</div><div class=\"line\">                       <span class=\"comment\">//PdfGState gs = new PdfGState();</span></div><div class=\"line\">                       <span class=\"comment\">//gs.FillOpacity = 0.6f;//设置透明度</span></div><div class=\"line\">                       <span class=\"comment\">//canvas.SetGState(gs);</span></div><div class=\"line\">                       <span class=\"comment\">//PDF的左下角的坐标是（0,0），单位是pt</span></div><div class=\"line\">                       canvas.Rectangle(<span class=\"number\">70</span>, <span class=\"number\">38</span>, <span class=\"number\">400</span>, <span class=\"number\">30</span>);</div><div class=\"line\">                       canvas.Fill();</div><div class=\"line\">                       canvas.RestoreState();</div><div class=\"line\">                   &#125;</div><div class=\"line\"></div><div class=\"line\">                   stamper.Close();</div><div class=\"line\">                   reader1.Close();</div><div class=\"line\">               &#125;</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;</div></pre></td></tr></table></figure></p>\n<p>3、结合到实际的系统中(将有水印和无水印的两个PDF保存到本地，再以流方式传给客户端浏览器)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\"><span class=\"comment\">/// 将报表生成的二进制数据响应给 HTPP 请求客户端</span></div><div class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"context\"&gt; HTPP 请求对象&lt;/param&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"ExportResult\"&gt;报表生成的二进制数据&lt;/param&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"FileName\"&gt;指定下载(或保存)文件时的默认文件名称&lt;/param&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"ContentType\"&gt;响应的ContentType&lt;/param&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"OpenMode\"&gt;指定生成的数据打开模式，可选[inline|attachment]，\"inline\"表示在网页中内联显示，\"attachment\"表示以附件文件形式下载。如果不指定，由浏览器自动确定打开方式。&lt;/param&gt;</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ResponseBinaryPDF</span><span class=\"params\">(HttpContextBase context, IGRBinaryObject ExportResult, <span class=\"built_in\">string</span> FileName, <span class=\"built_in\">string</span> ContentType, <span class=\"built_in\">string</span> OpenMode)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"meta\">#region 保存到本地pdf</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">string</span> newFileName = DirFileHelper.GetRamCode() + <span class=\"string\">\".pdf\"</span>; <span class=\"comment\">//随机生成新的文件名</span></div><div class=\"line\">    <span class=\"built_in\">string</span> upLoadPath = DirFileHelper.GetUpLoadPath(); <span class=\"comment\">//保存目录相对路径</span></div><div class=\"line\">    <span class=\"built_in\">string</span> fullUpLoadPath = DirFileHelper.GetMapPath(upLoadPath); <span class=\"comment\">//保存目录的物理路径</span></div><div class=\"line\">    <span class=\"built_in\">string</span> newFilePath = upLoadPath + newFileName; <span class=\"comment\">//保存后的路径</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//检查保存的物理路径是否存在，不存在则创建</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!Directory.Exists(fullUpLoadPath))</div><div class=\"line\">    &#123;</div><div class=\"line\">        Directory.CreateDirectory(fullUpLoadPath);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//保存文件</span></div><div class=\"line\">    ExportResult.SaveToFile(fullUpLoadPath + newFileName);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#region 读取pdf去除水印</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">string</span> inputFilePath = fullUpLoadPath + newFileName;</div><div class=\"line\">    <span class=\"built_in\">string</span> outputFilePath = fullUpLoadPath + newFileName.Replace(<span class=\"string\">\".pdf\"</span>, <span class=\"string\">\"_removed.pdf\"</span>);<span class=\"comment\">//去除水印后pdf</span></div><div class=\"line\">    <span class=\"keyword\">try</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">using</span> (Stream inputPdfStream = <span class=\"keyword\">new</span> FileStream(inputFilePath, FileMode.Open, FileAccess.Read, FileShare.Read))</div><div class=\"line\">        <span class=\"keyword\">using</span> (Stream outputPdfStream = <span class=\"keyword\">new</span> FileStream(outputFilePath, FileMode.Create, FileAccess.Write, FileShare.ReadWrite))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//Opens the unmodified PDF for reading</span></div><div class=\"line\">            PdfReader reader = <span class=\"keyword\">new</span> PdfReader(inputPdfStream);</div><div class=\"line\">            <span class=\"comment\">//Creates a stamper to put an image on the original pdf</span></div><div class=\"line\">            PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader, outputPdfStream); <span class=\"comment\">//&#123; FormFlattening = true, FreeTextFlattening = true &#125;;</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">int</span> pageCount = reader.NumberOfPages;</div><div class=\"line\">            <span class=\"comment\">////Create a new layer</span></div><div class=\"line\">            <span class=\"comment\">//PdfLayer layer = new PdfLayer(\"WatermarkLayer\", stamper.Writer);</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//PdfContentByte canvas = stamper.GetUnderContent(i);</span></div><div class=\"line\">                <span class=\"comment\">//Creates an image that is the size i need to hide the text i'm interested in removing</span></div><div class=\"line\">                iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(<span class=\"keyword\">new</span> Bitmap(<span class=\"number\">400</span>, <span class=\"number\">30</span>), BaseColor.WHITE);</div><div class=\"line\">                <span class=\"comment\">//Sets the position that the image needs to be placed (ie the location of the text to be removed)</span></div><div class=\"line\">                <span class=\"comment\">//txtX.Text = 33,txtY.Text = 708 70, 38, 400, 30</span></div><div class=\"line\">                image.SetAbsolutePosition(Convert.ToInt16(<span class=\"number\">70</span>), Convert.ToInt16(<span class=\"number\">37</span>));</div><div class=\"line\">                <span class=\"comment\">//Adds the image to the output pdf</span></div><div class=\"line\">                stamper.GetOverContent(i).AddImage(image, <span class=\"literal\">true</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//Creates the first copy of the outputted pdf</span></div><div class=\"line\">            stamper.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">    &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#region 返回客户端浏览器PDF</span></div><div class=\"line\">    <span class=\"comment\">//以字符流的形式下载文件</span></div><div class=\"line\">    <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(outputFilePath, FileMode.Open))</div><div class=\"line\">    &#123;</div><div class=\"line\">        byte[] bytes = <span class=\"keyword\">new</span> byte[(<span class=\"keyword\">int</span>)fs.Length];</div><div class=\"line\">        fs.Read(bytes, <span class=\"number\">0</span>, bytes.Length);</div><div class=\"line\">        fs.Close();</div><div class=\"line\">        <span class=\"built_in\">string</span> Disposition = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (OpenMode != null &amp;&amp; OpenMode.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            Disposition = OpenMode + <span class=\"string\">\"; \"</span>;</div><div class=\"line\"></div><div class=\"line\">        Disposition += ServerUtility.EncodeAttachmentFileName(context.Request.UserAgent, FileName);</div><div class=\"line\"></div><div class=\"line\">        context.Response.ContentType = ContentType;</div><div class=\"line\">        context.Response.AppendHeader(<span class=\"string\">\"Content-Length\"</span>, ExportResult.DataSize.ToString());</div><div class=\"line\">        context.Response.AppendHeader(<span class=\"string\">\"Content-Disposition\"</span>, Disposition);</div><div class=\"line\"></div><div class=\"line\">        context.Response.ClearContent();</div><div class=\"line\">        object Data = ExportResult.SaveToVariant();</div><div class=\"line\">        context.Response.BinaryWrite(bytes);</div><div class=\"line\"></div><div class=\"line\">        context.Response.Flush();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"网上相关资源与信息\"><a href=\"#网上相关资源与信息\" class=\"headerlink\" title=\"网上相关资源与信息\"></a>网上相关资源与信息</h2><p>1、 <a href=\"https://itextpdf.com/\" target=\"_blank\" rel=\"external\">iText官网</a><br>2、 <a href=\"https://www.nuget.org/packages/iTextSharp/\" target=\"_blank\" rel=\"external\">iText的NuGet地址</a><br>3、 <a href=\"http://www.it1352.com/245699.html\" target=\"_blank\" rel=\"external\">How to convert pdfstamper to byte array</a><br>4、 <a href=\"http://stackoverflow.org.cn/front/ask/view?ask_id=236528\" target=\"_blank\" rel=\"external\">PdfStamper获得字节数组</a><br>5、 <a href=\"http://www.runoob.com/w3cnote/px-pt-em-convert-table.html\" target=\"_blank\" rel=\"external\">pt,px,em</a><br>6、 <a href=\"https://blog.csdn.net/sishenkankan/article/details/53107195\" target=\"_blank\" rel=\"external\">使用itext直接替换PDF中的文本</a></p>\n","excerpt":"<p>PDF操作去除页脚部位的水印</p>","more":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><p>使用某报表插件时，由于免费版导出PDF会出现水印字体，因此考虑将该水印去除后，输出到客户端浏览器。<br><img src=\"/2018/06/11/PDF操作/20180611152915.jpg\" alt=\"页脚位置出现水印\" title=\"页脚位置出现水印\"></p>\n<p>考虑的解决方案包括：<br>1、 报表插件导出PDF -&gt;编辑PDF水印-&gt;PDF输出到客户端。<br>2、 报表插件导出图片-&gt;编程处理图片水印-&gt;将多张图片生成PDF-&gt;PDF输出到客户端。<br>3、 寻找破解版的报表插件直接导出PDF。<br>4、 自己通过代码直接生成Word，不使用第三方报表插件。</p>\n<p>OK上面就是能够想到的解决方法。</p>\n<p>第4种方案应该可以实现，但相对来说工作量大一些，放到最后尝试，所以没有使用。<br>第3种方案简单粗暴，但在实现过程中发现第三方报表插件的版本5.6虽然有破解版，但由于版本过低，导致页面只能在<br>低版本的IE中才能查看，明显无法用于实际环境。<br>第2种方案虽然比直接操作PDF复杂一些，但是肯定能实现，在实现的过程中发现，报表插件导出的图片IMG中会存在分页内容，所以暂时放弃。（后期发现可以导出多张图片）<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">String visitGUID=Guid.NewGuid().ToString();</div><div class=\"line\">IGRExportOption ExportOption = Report.PrepareExport(GRExportType.gretIMG);</div><div class=\"line\">IGRE2IMGOption E2IMGOption = ExportOption.AsE2IMGOption;</div><div class=\"line\">E2IMGOption.ImageType = GRExportImageType.greitPNG;</div><div class=\"line\">E2IMGOption.AllInOne = <span class=\"literal\">false</span>; <span class=\"comment\">//所有页产生在一个图像文件中</span></div><div class=\"line\">E2IMGOption.FileName = ReportPath + <span class=\"string\">\"\\\\SuperviseExamine\\\\Result\\\\\"</span> + visitGUID + <span class=\"string\">\"\\\\\"</span> + visitGUID + <span class=\"string\">\".png\"</span>;</div><div class=\"line\">Report.Export();</div></pre></td></tr></table></figure></p>\n<p>最后留下第1种方案并开始进行尝试实现。</p>\n<h2 id=\"收集网上信息\"><a href=\"#收集网上信息\" class=\"headerlink\" title=\"收集网上信息\"></a>收集网上信息</h2><p>对PDF操作肯定找第三方控件了，iText上场。</p>\n<h3 id=\"PDF操作插件-iText\"><a href=\"#PDF操作插件-iText\" class=\"headerlink\" title=\"PDF操作插件 iText\"></a>PDF操作插件 iText</h3><p>iText is a PDF library that allows you to CREATE, ADAPT, INSPECT and MAINTAIN documents in the Portable Document Format (PDF), allowing you to add PDF functionality to your software projects with ease.  We even have documentation to help you get coding.</p>\n<p>We have two currently supported versions: iText 5 and iText 7. Both are available under AGPL and Commercial license.</p>\n<ul>\n<li>iText 5 AGPL</li>\n<li>iText 7 community: <a href=\"https://www.nuget.org/packages/itext7/\">https://www.nuget.org/packages/itext7/</a></li>\n</ul>\n<p>iText 5 is a one solution library that is complex, but well documented to help you create your solutions.</p>\n<p>iText 7 is a complete re-write of iText 5, allowing you to choose your adventure with add-ons, all based on a simple, modular code structure that is easy to use and well documented.</p>\n<p>本次使用iText5插件，版本号5.5.13</p>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><h3 id=\"最终实现代码\"><a href=\"#最终实现代码\" class=\"headerlink\" title=\"最终实现代码\"></a>最终实现代码</h3><p>方便找到这篇文章的朋友，直接将实现的代码放出<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ServerUtility</div><div class=\"line\">   &#123;</div><div class=\"line\">       <span class=\"comment\">//直接使用流对象进行数据处理</span></div><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ResponseBinaryPDF</span><span class=\"params\">(HttpContextBase context, IGRBinaryObject ExportResult, <span class=\"built_in\">string</span> FileName, <span class=\"built_in\">string</span> ContentType, <span class=\"built_in\">string</span> OpenMode)</span></div><div class=\"line\">       </span>&#123;</div><div class=\"line\">           <span class=\"comment\">//通过已有PDF来修改水印</span></div><div class=\"line\">           <span class=\"comment\">//using (FileStream fs = new FileStream(outputFilePath, FileMode.Open))</span></div><div class=\"line\">           <span class=\"comment\">//&#123;</span></div><div class=\"line\">           <span class=\"comment\">//    byte[] bytes = new byte[(int)fs.Length];</span></div><div class=\"line\">           <span class=\"comment\">//    fs.Read(bytes, 0, bytes.Length);</span></div><div class=\"line\">           <span class=\"comment\">//    fs.Close();</span></div><div class=\"line\">           <span class=\"comment\">//&#125;</span></div><div class=\"line\"></div><div class=\"line\">           byte[] inputPdfStreamData = (byte[])(ExportResult.SaveToVariant());<span class=\"comment\">//PDF字节流</span></div><div class=\"line\"></div><div class=\"line\">           <span class=\"keyword\">using</span> (MemoryStream outputPdfStream = <span class=\"keyword\">new</span> MemoryStream())</div><div class=\"line\">           &#123;</div><div class=\"line\">               <span class=\"comment\">//使用PDF字节数组初始化PDFReader</span></div><div class=\"line\">               PdfReader reader = <span class=\"keyword\">new</span> PdfReader(inputPdfStreamData);</div><div class=\"line\">               <span class=\"comment\">//按照原PDF的内容创建PdfStamper对象，准备放一张白色图片去掉水印</span></div><div class=\"line\">               <span class=\"keyword\">using</span> (PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader, outputPdfStream))</div><div class=\"line\">               &#123;</div><div class=\"line\">                   <span class=\"keyword\">int</span> pageCount = reader.NumberOfPages;</div><div class=\"line\">                   <span class=\"comment\">//多页循环</span></div><div class=\"line\">                   <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount; i++)</div><div class=\"line\">                   &#123;</div><div class=\"line\">                       <span class=\"comment\">//创建一个用来覆盖水印的白色背景图片，大小要比水印稍大</span></div><div class=\"line\">                       iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(<span class=\"keyword\">new</span> Bitmap(<span class=\"number\">400</span>, <span class=\"number\">30</span>), BaseColor.WHITE);</div><div class=\"line\">                       <span class=\"comment\">//把图片放到水印的位置（IText使用的单位是pt而不是px，（0,0）坐标是PDF左下角！！）</span></div><div class=\"line\">                       image.SetAbsolutePosition(Convert.ToInt16(<span class=\"number\">70</span>), Convert.ToInt16(<span class=\"number\">37</span>));</div><div class=\"line\">                       <span class=\"comment\">//添加图片到PDF的当前页</span></div><div class=\"line\">                       stamper.GetOverContent(i).AddImage(image, <span class=\"literal\">true</span>);</div><div class=\"line\">                   &#125;</div><div class=\"line\">               &#125;</div><div class=\"line\"></div><div class=\"line\">               <span class=\"comment\">//将MemoryStream输出到客户端浏览器</span></div><div class=\"line\">               <span class=\"built_in\">string</span> Disposition = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\">               <span class=\"keyword\">if</span> (OpenMode != null &amp;&amp; OpenMode.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                   Disposition = OpenMode + <span class=\"string\">\"; \"</span>;</div><div class=\"line\"></div><div class=\"line\">               Disposition += ServerUtility.EncodeAttachmentFileName(context.Request.UserAgent, FileName);</div><div class=\"line\"></div><div class=\"line\">               context.Response.ContentType = ContentType;</div><div class=\"line\">               context.Response.AppendHeader(<span class=\"string\">\"Content-Length\"</span>, ExportResult.DataSize.ToString());</div><div class=\"line\">               context.Response.AppendHeader(<span class=\"string\">\"Content-Disposition\"</span>, Disposition);</div><div class=\"line\">               context.Response.ClearContent();</div><div class=\"line\">               object Data = ExportResult.SaveToVariant();</div><div class=\"line\">               context.Response.BinaryWrite(outputPdfStream.ToArray());</div><div class=\"line\">               context.Response.Flush();</div><div class=\"line\">           &#125;</div><div class=\"line\"></div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"实现代码过程\"><a href=\"#实现代码过程\" class=\"headerlink\" title=\"实现代码过程\"></a>实现代码过程</h3><p>1、 网络上找到了简单实用iText操作PDF的代码，分为三块内容，第一块是创建空白PDF，第二块是创建水印，第三块去除水印。<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">temp1</span><span class=\"params\">()</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"built_in\">string</span> workingFolder = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);</div><div class=\"line\">        <span class=\"built_in\">string</span> startFile = Path.Combine(workingFolder, <span class=\"string\">\"StartFile.pdf\"</span>);</div><div class=\"line\">        <span class=\"built_in\">string</span> watermarkedFile = Path.Combine(workingFolder, <span class=\"string\">\"Watermarked.pdf\"</span>);</div><div class=\"line\">        <span class=\"built_in\">string</span> unwatermarkedFile = Path.Combine(workingFolder, <span class=\"string\">\"Un-watermarked.pdf\"</span>);</div><div class=\"line\">        <span class=\"built_in\">string</span> watermarkText = <span class=\"string\">\"This is a test\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//watermarkedFile= @\"E:\\a\\1.pdf\";</span></div><div class=\"line\">        <span class=\"comment\">//SECTION 1</span></div><div class=\"line\">        <span class=\"comment\">//Create a 5 page PDF, nothing special here</span></div><div class=\"line\">        <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(startFile, FileMode.Create, FileAccess.Write, FileShare.None))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">using</span> (Document doc = <span class=\"keyword\">new</span> Document(PageSize.LETTER))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">using</span> (PdfWriter witier = PdfWriter.GetInstance(doc, fs))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    doc.Open();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= <span class=\"number\">5</span>; i++)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        doc.NewPage();</div><div class=\"line\">                        doc.Add(<span class=\"keyword\">new</span> Paragraph(String.Format(<span class=\"string\">\"This is page &#123;0&#125;\"</span>, i)));</div><div class=\"line\">                    &#125;</div><div class=\"line\"></div><div class=\"line\">                    doc.Close();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//SECTION 2</span></div><div class=\"line\">        <span class=\"comment\">//Create our watermark on a separate layer.The only different here is that we are adding the watermark to a PdfLayer which is an OCG or Optional Content Group</span></div><div class=\"line\">        PdfReader reader1 = <span class=\"keyword\">new</span> PdfReader(startFile);</div><div class=\"line\">        <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(watermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">using</span> (PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader1, fs))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">int</span> pageCount1 = reader1.NumberOfPages;</div><div class=\"line\">                <span class=\"comment\">//Create a new layer</span></div><div class=\"line\">                PdfLayer layer = <span class=\"keyword\">new</span> PdfLayer(<span class=\"string\">\"WatermarkLayer\"</span>, stamper.Writer);</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount1; i++)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    iTextSharp.text.Rectangle rect = reader1.GetPageSize(i);</div><div class=\"line\">                    <span class=\"comment\">//Get the ContentByte object</span></div><div class=\"line\">                    PdfContentByte cb = stamper.GetUnderContent(i);</div><div class=\"line\">                    <span class=\"comment\">//Tell the CB that the next commands should be \"bound\" to this new layer</span></div><div class=\"line\">                    cb.BeginLayer(layer);</div><div class=\"line\">                    cb.SetFontAndSize(BaseFont.CreateFont(BaseFont.HELVETICA, BaseFont.CP1252, BaseFont.NOT_EMBEDDED), <span class=\"number\">50</span>);</div><div class=\"line\">                    PdfGState gState = <span class=\"keyword\">new</span> PdfGState();</div><div class=\"line\">                    gState.FillOpacity = <span class=\"number\">0.25f</span>;</div><div class=\"line\">                    cb.SetGState(gState);</div><div class=\"line\">                    cb.SetColorFill(BaseColor.BLACK);</div><div class=\"line\">                    cb.BeginText();</div><div class=\"line\">                    cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, watermarkText, rect.Width / <span class=\"number\">2</span>, rect.Height / <span class=\"number\">2</span>, <span class=\"number\">45f</span>);</div><div class=\"line\">                    cb.EndText();</div><div class=\"line\">                    <span class=\"comment\">//\"Close\" the layer</span></div><div class=\"line\">                    cb.EndLayer();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//SECTION 3</span></div><div class=\"line\">        <span class=\"comment\">//Remove the layer created above</span></div><div class=\"line\">        <span class=\"comment\">//First we bind a reader to the watermarked file, then strip out a bunch of things, and finally use a simple stamper to write out the edited reader</span></div><div class=\"line\">        PdfReader reader2 = <span class=\"keyword\">new</span> PdfReader(watermarkedFile);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//NOTE, This will destroy all layers in the document, only use if you don't have additional layers</span></div><div class=\"line\">        <span class=\"comment\">//Remove the OCG group completely from the document.</span></div><div class=\"line\">        <span class=\"comment\">//reader2.Catalog.Remove(PdfName.OCPROPERTIES);</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//Clean up the reader, optional</span></div><div class=\"line\">        reader2.RemoveUnusedObjects();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//Placeholder variables</span></div><div class=\"line\">        PRStream stream;</div><div class=\"line\">        String content;</div><div class=\"line\">        PdfDictionary page;</div><div class=\"line\">        PdfArray contentarray;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//Get the page count</span></div><div class=\"line\">        <span class=\"keyword\">int</span> pageCount2 = reader2.NumberOfPages;</div><div class=\"line\">        <span class=\"comment\">//Loop through each page</span></div><div class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount2; i++)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//Get the page</span></div><div class=\"line\">            page = reader2.GetPageN(i);</div><div class=\"line\">            <span class=\"comment\">//Get the raw content</span></div><div class=\"line\">            contentarray = page.GetAsArray(PdfName.CONTENTS);</div><div class=\"line\">            <span class=\"keyword\">if</span> (contentarray != null)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//Loop through content</span></div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>; j &lt; contentarray.Size; j++)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"comment\">//Get the raw byte stream</span></div><div class=\"line\">                    stream = (PRStream)contentarray.GetAsStream(j);</div><div class=\"line\">                    <span class=\"comment\">//Convert to a string. NOTE, you might need a different encoding here</span></div><div class=\"line\">                    content = System.Text.Encoding.ASCII.GetString(PdfReader.GetStreamBytes(stream));</div><div class=\"line\">                    <span class=\"comment\">//Look for the OCG token in the stream as well as our watermarked text</span></div><div class=\"line\">                    <span class=\"keyword\">if</span> (content.IndexOf(<span class=\"string\">\"/OC\"</span>) &gt;= <span class=\"number\">0</span> &amp;&amp; content.IndexOf(watermarkText) &gt;= <span class=\"number\">0</span>)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"comment\">//Remove it by giving it zero length and zero data</span></div><div class=\"line\">                        stream.Put(PdfName.LENGTH, <span class=\"keyword\">new</span> PdfNumber(<span class=\"number\">0</span>));</div><div class=\"line\">                        stream.SetData(<span class=\"keyword\">new</span> byte[<span class=\"number\">0</span>]);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//Write the content out</span></div><div class=\"line\">        <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(unwatermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">using</span> (PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader2, fs))</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//this.Close();</span></div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>2、由于水印位置固定且位于页脚处无其他内容，因此创建白色图片覆盖水印未知实现去除功能。<br>结合上面的代码和网上找到的相关实现进行修改后如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">temp2</span><span class=\"params\">()</span></div><div class=\"line\">       </span>&#123;</div><div class=\"line\">           <span class=\"built_in\">string</span> watermarkedFile = @<span class=\"string\">\"E:\\a\\1out.pdf\"</span>;</div><div class=\"line\">           <span class=\"built_in\">string</span> startFile = @<span class=\"string\">\"E:\\a\\1.pdf\"</span>;</div><div class=\"line\">           File.Delete(watermarkedFile);</div><div class=\"line\">           PdfReader reader1 = <span class=\"keyword\">new</span> PdfReader(startFile);</div><div class=\"line\">           <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(watermarkedFile, FileMode.Create, FileAccess.Write, FileShare.None))</div><div class=\"line\">           &#123;</div><div class=\"line\">               <span class=\"keyword\">using</span> (PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader1, fs))</div><div class=\"line\">               &#123;</div><div class=\"line\">                   <span class=\"keyword\">int</span> pageCount1 = reader1.NumberOfPages;</div><div class=\"line\">                   <span class=\"comment\">//Create a new layer</span></div><div class=\"line\">                   PdfLayer layer = <span class=\"keyword\">new</span> PdfLayer(<span class=\"string\">\"WatermarkLayer\"</span>, stamper.Writer);</div><div class=\"line\">                   <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount1; i++)</div><div class=\"line\">                   &#123;</div><div class=\"line\">                       PdfContentByte canvas = stamper.GetOverContent(i);</div><div class=\"line\">                       canvas.SaveState();</div><div class=\"line\">                       canvas.SetColorFill(BaseColor.RED);</div><div class=\"line\">                       <span class=\"comment\">//PdfGState gs = new PdfGState();</span></div><div class=\"line\">                       <span class=\"comment\">//gs.FillOpacity = 0.6f;//设置透明度</span></div><div class=\"line\">                       <span class=\"comment\">//canvas.SetGState(gs);</span></div><div class=\"line\">                       <span class=\"comment\">//PDF的左下角的坐标是（0,0），单位是pt</span></div><div class=\"line\">                       canvas.Rectangle(<span class=\"number\">70</span>, <span class=\"number\">38</span>, <span class=\"number\">400</span>, <span class=\"number\">30</span>);</div><div class=\"line\">                       canvas.Fill();</div><div class=\"line\">                       canvas.RestoreState();</div><div class=\"line\">                   &#125;</div><div class=\"line\"></div><div class=\"line\">                   stamper.Close();</div><div class=\"line\">                   reader1.Close();</div><div class=\"line\">               &#125;</div><div class=\"line\">           &#125;</div><div class=\"line\">       &#125;</div></pre></td></tr></table></figure></p>\n<p>3、结合到实际的系统中(将有水印和无水印的两个PDF保存到本地，再以流方式传给客户端浏览器)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\"><span class=\"comment\">/// 将报表生成的二进制数据响应给 HTPP 请求客户端</span></div><div class=\"line\"><span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"context\"&gt; HTPP 请求对象&lt;/param&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"ExportResult\"&gt;报表生成的二进制数据&lt;/param&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"FileName\"&gt;指定下载(或保存)文件时的默认文件名称&lt;/param&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"ContentType\"&gt;响应的ContentType&lt;/param&gt;</span></div><div class=\"line\"><span class=\"comment\">/// &lt;param name=\"OpenMode\"&gt;指定生成的数据打开模式，可选[inline|attachment]，\"inline\"表示在网页中内联显示，\"attachment\"表示以附件文件形式下载。如果不指定，由浏览器自动确定打开方式。&lt;/param&gt;</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ResponseBinaryPDF</span><span class=\"params\">(HttpContextBase context, IGRBinaryObject ExportResult, <span class=\"built_in\">string</span> FileName, <span class=\"built_in\">string</span> ContentType, <span class=\"built_in\">string</span> OpenMode)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"meta\">#region 保存到本地pdf</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">string</span> newFileName = DirFileHelper.GetRamCode() + <span class=\"string\">\".pdf\"</span>; <span class=\"comment\">//随机生成新的文件名</span></div><div class=\"line\">    <span class=\"built_in\">string</span> upLoadPath = DirFileHelper.GetUpLoadPath(); <span class=\"comment\">//保存目录相对路径</span></div><div class=\"line\">    <span class=\"built_in\">string</span> fullUpLoadPath = DirFileHelper.GetMapPath(upLoadPath); <span class=\"comment\">//保存目录的物理路径</span></div><div class=\"line\">    <span class=\"built_in\">string</span> newFilePath = upLoadPath + newFileName; <span class=\"comment\">//保存后的路径</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//检查保存的物理路径是否存在，不存在则创建</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (!Directory.Exists(fullUpLoadPath))</div><div class=\"line\">    &#123;</div><div class=\"line\">        Directory.CreateDirectory(fullUpLoadPath);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//保存文件</span></div><div class=\"line\">    ExportResult.SaveToFile(fullUpLoadPath + newFileName);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#region 读取pdf去除水印</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"built_in\">string</span> inputFilePath = fullUpLoadPath + newFileName;</div><div class=\"line\">    <span class=\"built_in\">string</span> outputFilePath = fullUpLoadPath + newFileName.Replace(<span class=\"string\">\".pdf\"</span>, <span class=\"string\">\"_removed.pdf\"</span>);<span class=\"comment\">//去除水印后pdf</span></div><div class=\"line\">    <span class=\"keyword\">try</span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">using</span> (Stream inputPdfStream = <span class=\"keyword\">new</span> FileStream(inputFilePath, FileMode.Open, FileAccess.Read, FileShare.Read))</div><div class=\"line\">        <span class=\"keyword\">using</span> (Stream outputPdfStream = <span class=\"keyword\">new</span> FileStream(outputFilePath, FileMode.Create, FileAccess.Write, FileShare.ReadWrite))</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//Opens the unmodified PDF for reading</span></div><div class=\"line\">            PdfReader reader = <span class=\"keyword\">new</span> PdfReader(inputPdfStream);</div><div class=\"line\">            <span class=\"comment\">//Creates a stamper to put an image on the original pdf</span></div><div class=\"line\">            PdfStamper stamper = <span class=\"keyword\">new</span> PdfStamper(reader, outputPdfStream); <span class=\"comment\">//&#123; FormFlattening = true, FreeTextFlattening = true &#125;;</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">int</span> pageCount = reader.NumberOfPages;</div><div class=\"line\">            <span class=\"comment\">////Create a new layer</span></div><div class=\"line\">            <span class=\"comment\">//PdfLayer layer = new PdfLayer(\"WatermarkLayer\", stamper.Writer);</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= pageCount; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//PdfContentByte canvas = stamper.GetUnderContent(i);</span></div><div class=\"line\">                <span class=\"comment\">//Creates an image that is the size i need to hide the text i'm interested in removing</span></div><div class=\"line\">                iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(<span class=\"keyword\">new</span> Bitmap(<span class=\"number\">400</span>, <span class=\"number\">30</span>), BaseColor.WHITE);</div><div class=\"line\">                <span class=\"comment\">//Sets the position that the image needs to be placed (ie the location of the text to be removed)</span></div><div class=\"line\">                <span class=\"comment\">//txtX.Text = 33,txtY.Text = 708 70, 38, 400, 30</span></div><div class=\"line\">                image.SetAbsolutePosition(Convert.ToInt16(<span class=\"number\">70</span>), Convert.ToInt16(<span class=\"number\">37</span>));</div><div class=\"line\">                <span class=\"comment\">//Adds the image to the output pdf</span></div><div class=\"line\">                stamper.GetOverContent(i).AddImage(image, <span class=\"literal\">true</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//Creates the first copy of the outputted pdf</span></div><div class=\"line\">            stamper.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">    &#123;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#region 返回客户端浏览器PDF</span></div><div class=\"line\">    <span class=\"comment\">//以字符流的形式下载文件</span></div><div class=\"line\">    <span class=\"keyword\">using</span> (FileStream fs = <span class=\"keyword\">new</span> FileStream(outputFilePath, FileMode.Open))</div><div class=\"line\">    &#123;</div><div class=\"line\">        byte[] bytes = <span class=\"keyword\">new</span> byte[(<span class=\"keyword\">int</span>)fs.Length];</div><div class=\"line\">        fs.Read(bytes, <span class=\"number\">0</span>, bytes.Length);</div><div class=\"line\">        fs.Close();</div><div class=\"line\">        <span class=\"built_in\">string</span> Disposition = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (OpenMode != null &amp;&amp; OpenMode.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            Disposition = OpenMode + <span class=\"string\">\"; \"</span>;</div><div class=\"line\"></div><div class=\"line\">        Disposition += ServerUtility.EncodeAttachmentFileName(context.Request.UserAgent, FileName);</div><div class=\"line\"></div><div class=\"line\">        context.Response.ContentType = ContentType;</div><div class=\"line\">        context.Response.AppendHeader(<span class=\"string\">\"Content-Length\"</span>, ExportResult.DataSize.ToString());</div><div class=\"line\">        context.Response.AppendHeader(<span class=\"string\">\"Content-Disposition\"</span>, Disposition);</div><div class=\"line\"></div><div class=\"line\">        context.Response.ClearContent();</div><div class=\"line\">        object Data = ExportResult.SaveToVariant();</div><div class=\"line\">        context.Response.BinaryWrite(bytes);</div><div class=\"line\"></div><div class=\"line\">        context.Response.Flush();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"网上相关资源与信息\"><a href=\"#网上相关资源与信息\" class=\"headerlink\" title=\"网上相关资源与信息\"></a>网上相关资源与信息</h2><p>1、 <a href=\"https://itextpdf.com/\">iText官网</a><br>2、 <a href=\"https://www.nuget.org/packages/iTextSharp/\">iText的NuGet地址</a><br>3、 <a href=\"http://www.it1352.com/245699.html\">How to convert pdfstamper to byte array</a><br>4、 <a href=\"http://stackoverflow.org.cn/front/ask/view?ask_id=236528\">PdfStamper获得字节数组</a><br>5、 <a href=\"http://www.runoob.com/w3cnote/px-pt-em-convert-table.html\">pt,px,em</a><br>6、 <a href=\"https://blog.csdn.net/sishenkankan/article/details/53107195\">使用itext直接替换PDF中的文本</a></p>"},{"title":"设计模式-简单工厂模式","date":"2018-01-10T08:15:16.000Z","_content":"\n {% asset_img 20180116085858.jpg UML%}\n\n<!--more-->\n简单工厂模式一句话：一个产品抽象类，一个工厂类，这个工厂生产多个产品。\n> 设计模式对编写代码的帮助是不言而喻的，有必要在学习的基础上做一些笔记。\n> 工厂类应用场景一般为创建对象。根据场景需求的不同，可以一般分为简单工厂模式（静态工厂）、工厂方法模式、抽象工厂模式。\n> 本篇内容只针对简单工厂模式。\n\n一般情况下，如果需要实例化一个对象，那么就要new一个对象如下：\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            //实例化苹果和香蕉\n            Apple apple = new Apple();\n            apple.PrintName();\n            Banana banana = new Banana();\n            banana.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 苹果类\n    /// </summary>\n    public class Apple\n    {\n        public void PrintName()\n        {\n            Console.WriteLine(\"This is an apple.\");\n        }\n    }\n    /// <summary>\n    /// 香蕉类\n    /// </summary>\n    public class Banana\n    {\n        public void PrintName()\n        {\n            Console.WriteLine(\"This is a banana\");\n        }\n    }\n}\n\n```\n十分简单的代码，顾客想要一个苹果和一个香蕉，那么他就自己初始化一个苹果和一个香蕉就好。\n\n问题提出：顾客不关心水果是怎么创建的，只需要最后把水果给他就好，如何做能将顾客与水果关系解耦？\n\n解决办法：\na.抽象水果类，所有的水果都继承该类;\nb.工厂类，静态方法生成对应的水果对象；\nc.顾客想要什么水果，给工厂类的方法传入水果名称就好；\n\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            //实例化苹果和香蕉\n            Fruit first = FruitFactory.CreateFruit(\"Apple\");\n            first.PrintName();\n            Console.WriteLine(\"-------------\");\n            Fruit second = FruitFactory.CreateFruit(\"Banana\");\n            second.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 水果工厂类\n    /// </summary>\n    public class FruitFactory\n    {\n        /// <summary>\n        /// 静态水果生产方法\n        /// </summary>\n        /// <param name=\"fruitName\"></param>\n        /// <returns></returns>\n        public static Fruit CreateFruit(string fruitName)\n        {\n            Fruit result;\n            switch (fruitName)\n            {\n                case \"Apple\": result = new Apple(); break;\n                case \"Banana\": result = new Banana(); break;\n                default:\n                    result = new Apple();//未找到返回一个苹果\n                    break;\n            }\n            return result;\n        }\n    }\n    /// <summary>\n    /// 水果抽象类\n    /// </summary>\n    public abstract class Fruit\n    {\n        /// <summary>\n        /// 水果抽象方法\n        /// </summary>\n        public abstract void PrintName();\n    }\n    /// <summary>\n    /// 苹果类\n    /// </summary>\n    public class Apple : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is an apple.\");\n        }\n    }\n    /// <summary>\n    /// 香蕉类\n    /// </summary>\n    public class Banana : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a banana\");\n        }\n    }\n}\n\n```\n {% asset_img 20180110165111.jpg 运行结果%}\n\n可以看出，此时顾客并不知道如何去创建具体的水果对象，他只需要调用工厂创建水果方法并传入名称就能够获得对应水果对象。\n\n**总结**\n**使用场景**\na.使用者不关心产品对象是如何创建的，尤其是该对象创建工作十分繁琐;\nb.产品类别比较少的情况下;\n那么可以通过简单工厂模式将创建工作移入到工厂的静态类中\n\n**优点**\n将产品与使用者进行一定程度的解耦。\n**缺点**\n不方便扩展，增加新的产品时，需要修改工厂类增加if-else产品分支，可能导致工厂类逻辑特别复杂。\n\n针对此缺点引入{% post_link FactoryMethodPattern 设计模式-工厂方法模式 %}。\n","source":"_posts/SimpleFactoryPattern.md","raw":"---\ntitle: 设计模式-简单工厂模式\ndate: 2018-01-10 16:15:16\ntags:\ncategories:\n- 设计模式\n---\n\n {% asset_img 20180116085858.jpg UML%}\n\n<!--more-->\n简单工厂模式一句话：一个产品抽象类，一个工厂类，这个工厂生产多个产品。\n> 设计模式对编写代码的帮助是不言而喻的，有必要在学习的基础上做一些笔记。\n> 工厂类应用场景一般为创建对象。根据场景需求的不同，可以一般分为简单工厂模式（静态工厂）、工厂方法模式、抽象工厂模式。\n> 本篇内容只针对简单工厂模式。\n\n一般情况下，如果需要实例化一个对象，那么就要new一个对象如下：\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            //实例化苹果和香蕉\n            Apple apple = new Apple();\n            apple.PrintName();\n            Banana banana = new Banana();\n            banana.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 苹果类\n    /// </summary>\n    public class Apple\n    {\n        public void PrintName()\n        {\n            Console.WriteLine(\"This is an apple.\");\n        }\n    }\n    /// <summary>\n    /// 香蕉类\n    /// </summary>\n    public class Banana\n    {\n        public void PrintName()\n        {\n            Console.WriteLine(\"This is a banana\");\n        }\n    }\n}\n\n```\n十分简单的代码，顾客想要一个苹果和一个香蕉，那么他就自己初始化一个苹果和一个香蕉就好。\n\n问题提出：顾客不关心水果是怎么创建的，只需要最后把水果给他就好，如何做能将顾客与水果关系解耦？\n\n解决办法：\na.抽象水果类，所有的水果都继承该类;\nb.工厂类，静态方法生成对应的水果对象；\nc.顾客想要什么水果，给工厂类的方法传入水果名称就好；\n\n```C\nusing System;\n\nnamespace SettingPattern4\n{\n    class Customer\n    {\n        static void Main(string[] args)\n        {\n            //实例化苹果和香蕉\n            Fruit first = FruitFactory.CreateFruit(\"Apple\");\n            first.PrintName();\n            Console.WriteLine(\"-------------\");\n            Fruit second = FruitFactory.CreateFruit(\"Banana\");\n            second.PrintName();\n            Console.Read();\n\n        }\n    }\n    /// <summary>\n    /// 水果工厂类\n    /// </summary>\n    public class FruitFactory\n    {\n        /// <summary>\n        /// 静态水果生产方法\n        /// </summary>\n        /// <param name=\"fruitName\"></param>\n        /// <returns></returns>\n        public static Fruit CreateFruit(string fruitName)\n        {\n            Fruit result;\n            switch (fruitName)\n            {\n                case \"Apple\": result = new Apple(); break;\n                case \"Banana\": result = new Banana(); break;\n                default:\n                    result = new Apple();//未找到返回一个苹果\n                    break;\n            }\n            return result;\n        }\n    }\n    /// <summary>\n    /// 水果抽象类\n    /// </summary>\n    public abstract class Fruit\n    {\n        /// <summary>\n        /// 水果抽象方法\n        /// </summary>\n        public abstract void PrintName();\n    }\n    /// <summary>\n    /// 苹果类\n    /// </summary>\n    public class Apple : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is an apple.\");\n        }\n    }\n    /// <summary>\n    /// 香蕉类\n    /// </summary>\n    public class Banana : Fruit\n    {\n        public override void PrintName()\n        {\n            Console.WriteLine(\"This is a banana\");\n        }\n    }\n}\n\n```\n {% asset_img 20180110165111.jpg 运行结果%}\n\n可以看出，此时顾客并不知道如何去创建具体的水果对象，他只需要调用工厂创建水果方法并传入名称就能够获得对应水果对象。\n\n**总结**\n**使用场景**\na.使用者不关心产品对象是如何创建的，尤其是该对象创建工作十分繁琐;\nb.产品类别比较少的情况下;\n那么可以通过简单工厂模式将创建工作移入到工厂的静态类中\n\n**优点**\n将产品与使用者进行一定程度的解耦。\n**缺点**\n不方便扩展，增加新的产品时，需要修改工厂类增加if-else产品分支，可能导致工厂类逻辑特别复杂。\n\n针对此缺点引入{% post_link FactoryMethodPattern 设计模式-工厂方法模式 %}。\n","slug":"SimpleFactoryPattern","published":1,"updated":"2018-01-16T00:59:46.405Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayuu000jocm7294b5z7t","content":" <img src=\"/2018/01/10/SimpleFactoryPattern/20180116085858.jpg\" alt=\"UML\" title=\"UML\">\n<a id=\"more\"></a>\n<p>简单工厂模式一句话：一个产品抽象类，一个工厂类，这个工厂生产多个产品。</p>\n<blockquote>\n<p>设计模式对编写代码的帮助是不言而喻的，有必要在学习的基础上做一些笔记。<br>工厂类应用场景一般为创建对象。根据场景需求的不同，可以一般分为简单工厂模式（静态工厂）、工厂方法模式、抽象工厂模式。<br>本篇内容只针对简单工厂模式。</p>\n</blockquote>\n<p>一般情况下，如果需要实例化一个对象，那么就要new一个对象如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">            Apple apple = <span class=\"keyword\">new</span> Apple();</div><div class=\"line\">            apple.PrintName();</div><div class=\"line\">            Banana banana = <span class=\"keyword\">new</span> Banana();</div><div class=\"line\">            banana.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Apple</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an apple.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Banana</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a banana\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>十分简单的代码，顾客想要一个苹果和一个香蕉，那么他就自己初始化一个苹果和一个香蕉就好。</p>\n<p>问题提出：顾客不关心水果是怎么创建的，只需要最后把水果给他就好，如何做能将顾客与水果关系解耦？</p>\n<p>解决办法：<br>a.抽象水果类，所有的水果都继承该类;<br>b.工厂类，静态方法生成对应的水果对象；<br>c.顾客想要什么水果，给工厂类的方法传入水果名称就好；</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">            Fruit first = FruitFactory.CreateFruit(<span class=\"string\">\"Apple\"</span>);</div><div class=\"line\">            first.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Fruit second = FruitFactory.CreateFruit(<span class=\"string\">\"Banana\"</span>);</div><div class=\"line\">            second.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 静态水果生产方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"fruitName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">(<span class=\"built_in\">string</span> fruitName)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Fruit result;</div><div class=\"line\">            <span class=\"keyword\">switch</span> (fruitName)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"Apple\"</span>: result = <span class=\"keyword\">new</span> Apple(); <span class=\"keyword\">break</span>;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"Banana\"</span>: result = <span class=\"keyword\">new</span> Banana(); <span class=\"keyword\">break</span>;</div><div class=\"line\">                <span class=\"keyword\">default</span>:</div><div class=\"line\">                    result = <span class=\"keyword\">new</span> Apple();<span class=\"comment\">//未找到返回一个苹果</span></div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 水果抽象方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Apple : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an apple.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Banana : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a banana\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n <img src=\"/2018/01/10/SimpleFactoryPattern/20180110165111.jpg\" alt=\"运行结果\" title=\"运行结果\">\n<p>可以看出，此时顾客并不知道如何去创建具体的水果对象，他只需要调用工厂创建水果方法并传入名称就能够获得对应水果对象。</p>\n<p><strong>总结</strong><br><strong>使用场景</strong><br>a.使用者不关心产品对象是如何创建的，尤其是该对象创建工作十分繁琐;<br>b.产品类别比较少的情况下;<br>那么可以通过简单工厂模式将创建工作移入到工厂的静态类中</p>\n<p><strong>优点</strong><br>将产品与使用者进行一定程度的解耦。<br><strong>缺点</strong><br>不方便扩展，增加新的产品时，需要修改工厂类增加if-else产品分支，可能导致工厂类逻辑特别复杂。</p>\n<p>针对此缺点引入<a href=\"/2018/01/10/FactoryMethodPattern/\" title=\"设计模式-工厂方法模式\">设计模式-工厂方法模式</a>。</p>\n","excerpt":"<img src=\"/2018/01/10/SimpleFactoryPattern/20180116085858.jpg\" alt=\"UML\" title=\"UML\">","more":"<p>简单工厂模式一句话：一个产品抽象类，一个工厂类，这个工厂生产多个产品。</p>\n<blockquote>\n<p>设计模式对编写代码的帮助是不言而喻的，有必要在学习的基础上做一些笔记。<br>工厂类应用场景一般为创建对象。根据场景需求的不同，可以一般分为简单工厂模式（静态工厂）、工厂方法模式、抽象工厂模式。<br>本篇内容只针对简单工厂模式。</p>\n</blockquote>\n<p>一般情况下，如果需要实例化一个对象，那么就要new一个对象如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">            Apple apple = <span class=\"keyword\">new</span> Apple();</div><div class=\"line\">            apple.PrintName();</div><div class=\"line\">            Banana banana = <span class=\"keyword\">new</span> Banana();</div><div class=\"line\">            banana.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Apple</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an apple.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Banana</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a banana\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>十分简单的代码，顾客想要一个苹果和一个香蕉，那么他就自己初始化一个苹果和一个香蕉就好。</p>\n<p>问题提出：顾客不关心水果是怎么创建的，只需要最后把水果给他就好，如何做能将顾客与水果关系解耦？</p>\n<p>解决办法：<br>a.抽象水果类，所有的水果都继承该类;<br>b.工厂类，静态方法生成对应的水果对象；<br>c.顾客想要什么水果，给工厂类的方法传入水果名称就好；</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> SettingPattern4</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Customer</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//实例化苹果和香蕉</span></div><div class=\"line\">            Fruit first = FruitFactory.CreateFruit(<span class=\"string\">\"Apple\"</span>);</div><div class=\"line\">            first.PrintName();</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"-------------\"</span>);</div><div class=\"line\">            Fruit second = FruitFactory.CreateFruit(<span class=\"string\">\"Banana\"</span>);</div><div class=\"line\">            second.PrintName();</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果工厂类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> FruitFactory</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 静态水果生产方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"fruitName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Fruit <span class=\"title\">CreateFruit</span><span class=\"params\">(<span class=\"built_in\">string</span> fruitName)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Fruit result;</div><div class=\"line\">            <span class=\"keyword\">switch</span> (fruitName)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"Apple\"</span>: result = <span class=\"keyword\">new</span> Apple(); <span class=\"keyword\">break</span>;</div><div class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">\"Banana\"</span>: result = <span class=\"keyword\">new</span> Banana(); <span class=\"keyword\">break</span>;</div><div class=\"line\">                <span class=\"keyword\">default</span>:</div><div class=\"line\">                    result = <span class=\"keyword\">new</span> Apple();<span class=\"comment\">//未找到返回一个苹果</span></div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 水果抽象类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> abstract <span class=\"keyword\">class</span> Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 水果抽象方法</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> abstract <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 苹果类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Apple : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is an apple.\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 香蕉类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Banana : Fruit</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">PrintName</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"This is a banana\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n <img src=\"/2018/01/10/SimpleFactoryPattern/20180110165111.jpg\" alt=\"运行结果\" title=\"运行结果\">\n<p>可以看出，此时顾客并不知道如何去创建具体的水果对象，他只需要调用工厂创建水果方法并传入名称就能够获得对应水果对象。</p>\n<p><strong>总结</strong><br><strong>使用场景</strong><br>a.使用者不关心产品对象是如何创建的，尤其是该对象创建工作十分繁琐;<br>b.产品类别比较少的情况下;<br>那么可以通过简单工厂模式将创建工作移入到工厂的静态类中</p>\n<p><strong>优点</strong><br>将产品与使用者进行一定程度的解耦。<br><strong>缺点</strong><br>不方便扩展，增加新的产品时，需要修改工厂类增加if-else产品分支，可能导致工厂类逻辑特别复杂。</p>\n<p>针对此缺点引入<a href=\"/2018/01/10/FactoryMethodPattern/\" title=\"设计模式-工厂方法模式\">设计模式-工厂方法模式</a>。</p>"},{"title":"RSA加密解密(c#与js版)","date":"2017-11-29T02:41:20.000Z","+description":"为保证网络中数据安全进行RSA加密解密","_content":"\n业务描述：前端js使用私有秘钥将数据进行加密，后端C#在一般处理程序中使用公钥对加密数据进行解密。\n两个版本的实现，版本一可直接使用，版本二可用来参考如何将XML秘钥与PEM秘钥的转换。\n\n版本一描述：\n1、该版本实现用户登录过程中RSA加密验证的过程。\n2、前台JS进行加密，后台从session中获得私钥进行解密。\n3、RSA秘钥保存在session中，刷新登录页面后自动更新。\n\n版本二描述：\n1、C#自有类RSACryptoServiceProvider生成RSA的秘钥与公钥的方法ToXmlString(true)秘钥，ToXmlString(false)公钥，结果是XML形式的，js无法直接使用，js所使用的是PEM形式的秘钥。\n解决方法：使用工具类bouncycastle直接生成PEM版的秘钥和公钥，后台使用时，再将秘钥转换为XML版的。\n引用地址：https://www.bouncycastle.org/\n插件下载地址：https://downloads.bouncycastle.org/csharp/bccrypto-csharp-1.8.1-bin.zip\n\n\n2、js加密数据后base64位的数据在传输中“+”号会变为空格，导致后台C#解密出错。\n解决方法：js先加号转后，然后后台再将加号转回。\n\n3、网页版的加密解密demo以固定的秘钥形式来实现，实际案例中可以考虑更改为使用session保存针对单个\n用户来生成的公钥和秘钥。\n\n参考地址：\nhttp://www.sufeinet.com/forum.php?mod=viewthread&tid=5484&highlight=RSA\nhttps://www.cnblogs.com/Leo_wl/p/5763243.html\n\n\n------\n\n<!--more-->\n\n### 控制台应用程序RSA基础代码演示\n```C \nusing Org.BouncyCastle.Asn1.Pkcs;\nusing Org.BouncyCastle.Asn1.X509;\nusing Org.BouncyCastle.Crypto;\nusing Org.BouncyCastle.Crypto.Generators;\nusing Org.BouncyCastle.Crypto.Parameters;\nusing Org.BouncyCastle.Pkcs;\nusing Org.BouncyCastle.Security;\nusing Org.BouncyCastle.X509;\nusing System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nnamespace RSAGenerateKey\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            RsaKeyPairGenerator g = new RsaKeyPairGenerator();\n            g.Init(new KeyGenerationParameters(new SecureRandom(), 1024));\n            var pair = g.GenerateKeyPair();\n            PrivateKeyInfo privateKeyInfo = PrivateKeyInfoFactory.CreatePrivateKeyInfo(pair.Private);\n            byte[] serializedPrivateBytes = privateKeyInfo.ToAsn1Object().GetDerEncoded();\n            string serializedPrivate = Convert.ToBase64String(serializedPrivateBytes);//PEM秘钥\n\n            SubjectPublicKeyInfo publicKeyInfo = SubjectPublicKeyInfoFactory.CreateSubjectPublicKeyInfo(pair.Public);\n            byte[] serializedPublicBytes = publicKeyInfo.ToAsn1Object().GetDerEncoded();\n            string serializedPublic = Convert.ToBase64String(serializedPublicBytes);//PEM公钥\n\n            RsaPrivateCrtKeyParameters privateKey = (RsaPrivateCrtKeyParameters)PrivateKeyFactory.CreateKey(Convert.FromBase64String(serializedPrivate));\n            RsaKeyParameters publicKey = (RsaKeyParameters)PublicKeyFactory.CreateKey(Convert.FromBase64String(serializedPublic));\n\n\n            RSACryptoServiceProvider rcsp = new RSACryptoServiceProvider();\n            RSAParameters parms = new RSAParameters();\n\n            //So the thing changed is offcourse the ToByteArrayUnsigned() instead of\n            //ToByteArray()\n            parms.Modulus = privateKey.Modulus.ToByteArrayUnsigned();\n            parms.P = privateKey.P.ToByteArrayUnsigned();\n            parms.Q = privateKey.Q.ToByteArrayUnsigned();\n            parms.DP = privateKey.DP.ToByteArrayUnsigned();\n            parms.DQ = privateKey.DQ.ToByteArrayUnsigned();\n            parms.InverseQ = privateKey.QInv.ToByteArrayUnsigned();\n            parms.D = privateKey.Exponent.ToByteArrayUnsigned();\n            parms.Exponent = privateKey.PublicExponent.ToByteArrayUnsigned();\n\n            //So now this now appears to work.\n            rcsp.ImportParameters(parms);\n\n\n            string s = rcsp.ToXmlString(true);\n\n            string privateKeyXmlText = rcsp.ToXmlString(true);//XML秘钥\n            string publicKeyXmlText = rcsp.ToXmlString(false);//XML公钥\n\n            //加密解密\n            string texta1 = \"abc\",texta2=\"\",textb1=\"\";\n            byte[] cipherbytes;\n\n            cipherbytes = rcsp.Encrypt(Encoding.UTF8.GetBytes(texta1), false);\n\n            texta2 = Convert.ToBase64String(cipherbytes);\n\n            cipherbytes = rcsp.Decrypt(Convert.FromBase64String(texta2), false);\n\n            textb1= Encoding.UTF8.GetString(cipherbytes);\n\n            Console.Read();\n\n        }\n    }\n}\n```\n\n\n\n\n### 版本一\n> 版本一： 直接使用RSACryptoServiceProvider类生成xml的公钥和秘钥，放入session中\n该版本用到了四个js。下载地址：https://pan.baidu.com/s/1boQox8V\n```html\n<script src=\"Scripts/jquery-1.4.1.js\"></script>\n<script src=\"Scripts/Barrett.js\"></script>\n<script src=\"Scripts/BigInt.js\"></script>\n<script src=\"Scripts/RSA.js\"></script>\n```\n\n#### 前台代码\n```html\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Login.aspx.cs\" Inherits=\"RSAWeb.Login\" %>\n\n<!DOCTYPE html>\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head runat=\"server\">\n    <title>登录页RSA加密解密demo</title>\n    <script src=\"Scripts/jquery-1.4.1.js\"></script>\n    <script src=\"Scripts/Barrett.js\"></script>\n    <script src=\"Scripts/BigInt.js\"></script>\n    <script src=\"Scripts/RSA.js\"></script>\n     <script type=\"text/javascript\">\n        function cmdEncrypt() {\n            //关键步骤\n            setMaxDigits(129);\n            var key = new RSAKeyPair(\"<%=strPublicKeyExponent%>\", \"\", \"<%=strPublicKeyModulus%>\");\n            var pwdMD5Twice = $(\"#txtPassword\").attr(\"value\");\n            var pwdRtn = encryptedString(key, pwdMD5Twice);\n            //关键步骤\n            $(\"#encrypted_pwd\").attr(\"value\", pwdRtn);\n            $(\"#formLogin\").submit();\n            return;\n        }\n    </script>\n</head>\n<body>\n    <form action=\"Login.aspx\" id=\"formLogin\" method=\"post\">\n    <div>\n        <div>\n            User Name:\n        </div>\n        <div>\n            <input id=\"txtUserName\" name=\"txtUserName\" value=\"<%=postbackUserName%>\" type=\"text\" maxlength=\"16\" />\n        </div>\n        <div>\n            Password:\n        </div>\n        <div>\n            <input id=\"txtPassword\" type=\"password\" maxlength=\"16\" />\n        </div>\n        <div>\n            <input id=\"btnLogin\" type=\"button\" value=\"Login\" onclick=\"return cmdEncrypt()\" />\n        </div>\n    </div>\n    <div>\n        <input type=\"hidden\" name=\"encrypted_pwd\" id=\"encrypted_pwd\" />\n    </div>\n    </form>\n    <div>\n        <%=LoginResult%>\n    </div>\n</body>\n</html>\n\n```\n\n#### 后台代码\n```C\nusing System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nnamespace RSAWeb\n{\n    public partial class Login : System.Web.UI.Page\n    {\n        protected string strPublicKeyExponent = \"\";\n        protected string strPublicKeyModulus = \"\";\n        protected string LoginResult = \"\";\n        protected string postbackUserName = \"\";\n\n\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            LoginResult = \"\";\n            RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();\n            if (string.Compare(Request.RequestType, \"get\", true) == 0)\n            {\n                //将私钥存Session中\n                Session[\"private_key\"] = rsa.ToXmlString(true);\n                CYQ.Data.Log.WriteLogToTxt(Convert.ToString(Session[\"private_key\"]), CYQ.Data.LogType.Debug);\n            }\n            else\n            {\n                bool bLoginSucceed = false;\n                try\n                {\n                    string strUserName = Request.Form[\"txtUserName\"];\n                    postbackUserName = strUserName;\n                    string strPwdToDecrypt = Request.Form[\"encrypted_pwd\"];\n                    rsa.FromXmlString((string)Session[\"private_key\"]);\n\n                    byte[] result = rsa.Decrypt(HexStringToBytes(strPwdToDecrypt), false);\n                    System.Text.ASCIIEncoding enc = new ASCIIEncoding();\n                    string strPwdMD5 = enc.GetString(result);\n                    if (string.Compare(strUserName, \"admin\", true) == 0 && string.Compare(strPwdMD5, \"admin\", true) == 0)//14e1b600b1fd579f47433b88e8d85291\n                        bLoginSucceed = true;\n                }\n                catch (Exception)\n                {\n\n                }\n                if (bLoginSucceed)\n                    LoginResult = \"登录成功\";\n                else\n                    LoginResult = \"登录失败\";\n            }\n\n            //把公钥适当转换，准备发往客户端\n            RSAParameters parameter = rsa.ExportParameters(true);\n            strPublicKeyExponent = BytesToHexString(parameter.Exponent);\n            strPublicKeyModulus = BytesToHexString(parameter.Modulus);\n        }\n        private string BytesToHexString(byte[] input)\n        {\n            StringBuilder hexString = new StringBuilder(64);\n\n            for (int i = 0; i < input.Length; i++)\n            {\n                hexString.Append(String.Format(\"{0:X2}\", input[i]));\n            }\n            return hexString.ToString();\n        }\n\n        public static byte[] HexStringToBytes(string hex)\n        {\n            if (hex.Length == 0)\n            {\n                return new byte[] { 0 };\n            }\n\n            if (hex.Length % 2 == 1)\n            {\n                hex = \"0\" + hex;\n            }\n\n            byte[] result = new byte[hex.Length / 2];\n\n            for (int i = 0; i < hex.Length / 2; i++)\n            {\n                result[i] = byte.Parse(hex.Substring(2 * i, 2), System.Globalization.NumberStyles.AllowHexSpecifier);\n            }\n\n            return result;\n        }\n\n    }\n}\n```\n\n\n\n### 版本二\n> 版本二： 未能解决问题：在使用过程中偶尔会出现无法解密的异常，\n用户\na8176a4c-5b7e-4f1d-94d8-04e744332f76\n进行分数\n/H544nYvvBRPZQAIQfDGHMySy/svCbS8/uUwwv5Fc6hKlTed9XvwuEYeAKv22cdPXDV%2B6/\ntmduEuVJDCP7G8Jb2TxJdN9A%2Bwou%2BGnOTO7%2BTo6yA2KX4Uvriof5yCt1ONmkLbsPRVh0/cnjnogJwLk2U/FVggjIhcOP6Rq%2BzLOw==\n的提交操作,发生异常不正确的数据。\n本地直接使用测试demo可以解密，所以无法找到出问题的原因。！！！！\n\n2、网页版本webform\n\n#### 前台网页\n```html\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"login.aspx.cs\" Inherits=\"RSADemo.login\" %>\n\n<!DOCTYPE html>\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head runat=\"server\">\n    <title></title>\n    <script src=\"js/jquery.js\"></script>\n    <script src=\"http://passport.cnblogs.com/scripts/jsencrypt.min.js\"></script>\n    <script src=\"https://unpkg.com/node-forge@0.7.0/dist/forge.min.js\"></script>\n    <script type=\"text/javascript\">\n        $(function () {\n             //pem公钥\n            var pemPublicKey = \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHCkaSCVy6sHB/5rAKS/1EEtyzWuy30gLyrpNbFI3GtpsdFGdsqQ/uwiscGD+pZ7Mxj1ZumPs4jHvPpcAeCb8gKsqP/f5+pputTMuTkhTQqlDT1plHR7w3REQI8MaJ8KTA/pJiPo6iWToFynQeJNWjicxXxNURSZQ7nmC2rl4uPQIDAQAB\";\n            $(\"#tra\").val(pemPublicKey);\n\n\n            var encrypt = new JSEncrypt();\n            encrypt.setPublicKey($(\"#tra\").val());\n            var data = encrypt.encrypt(\"123456789\");\n            alert(data);\n            $(\"#btn\").click(function () {\n                $.ajax({\n                    url: 'Handler1.ashx',\n                    data: \"pwd=\" +encodeURI(data).replace(/\\+/g, '%2B'),  //+号的处理：因为数据在网络上传输时，非字母数字字符都将被替换成百分号（%）后跟两位十六进制数，而base64编码在传输到后端的时候，+会变成空格，因此先替换掉。后端再替换回来\n                    type: 'post',\n                    success: function (msg) {\n                        alert(msg);\n                    }\n                });\n            });\n\n        });\n\n\n    </script>\n</head>\n<body>\n    <form id=\"form1\" runat=\"server\">\n        <div>\n            <input type=\"button\" id=\"btn\" value=\"点我\" />\n            <textarea id=\"tra\" rows=\"15\" cols=\"65\">\n                \n        </textarea>\n            <hr />\n            注意+好的处理\n        </div>\n    </form>\n</body>\n</html>\n\n```\n\n#### 后台ashx一般处理程序\n\n```C\nusing System;\nusing System.Security.Cryptography;\nusing System.Text;\nusing System.Web;\n\nnamespace RSADemo\n{\n    /// <summary>\n    /// Summary description for Handler1\n    /// </summary>\n    public class Handler1 : IHttpHandler\n    {\n\n        public void ProcessRequest(HttpContext context)\n        {\n            string result = \"\";\n            //XML密钥\n            string privateKey = @\"<RSAKeyValue><Modulus>xwpGkglcurBwf+awCkv9RBLcs1rst9IC8q6TWxSNxrabHRRnbKkP7sIrHBg/qWezMY9Wbpj7OIx7z6XAHgm/ICrKj/3+fqabrUzLk5IU0KpQ09aZR0e8N0RECPDGifCkwP6SYj6Oolk6Bcp0HiTVo4nMV8TVEUmUO55gtq5eLj0=</Modulus><Exponent>AQAB</Exponent><P>/LnrFrusoNklOl6d0zSWZ1aCdQC2l3XXU8SSgYNLuSmgVwl7wQ2w0Jn9SQqyiVRmbcp1SX28/bH6TaA2v9ejHQ==</P><Q>yZ5TTtLOfTqrikYjy/fyktTk977y2GG2R9sgNPHtnH5EIIC9CoJETDwfSu40YUlHeUUXHQ1nG1WmWbEOC76toQ==</Q><DP>5UfC+YfgkLkQJklqxA+EmFIK3x17iiO16+B9zhQQ4fba6bvH05iZHldmTBrxaNfyaY7xI3B4wmzymfRNV3TKHQ==</DP><DQ>k7EvRaaXLJU14+zNfDT9tSHPOMzgCDJL3Qdf6GjwrpqwPT8RPAmBDndcVP95z2pmuScrb1TKGvP7D+jraR8dAQ==</DQ><InverseQ>4gbDpW7ca3dn0XXPkYsVmIl7SBqU8lq9X2xji/Nyg1M0pjDcpdQm0bqOm+/5usQl+kRotpIoK+Yf6J++zbmNjg==</InverseQ><D>Ccxfc356/mTDsQQv+93ISsLb8wdhml4AD6bY8bWmEhd4tNqFieObuW79FM27ypDkkSbDhD/LNDo0OSFpfwEPU8VxnEMzFnVw7MIWGSVKWocZHIhsclkHtHNtHaKS0LNEie2q0PGMiIYty/QG5k3bJeA8R42teXv3nARYEgzuNmE=</D></RSAKeyValue>\";\n\n       \n            try\n            {\n                string pwd = context.Request[\"pwd\"];\n\n                RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();\n                byte[] cipherbytes;\n                rsa.FromXmlString(privateKey);\n                //把+号，再替换回来\n                cipherbytes = rsa.Decrypt(Convert.FromBase64String(pwd.Replace(\"%2B\", \"+\")), false);\n\n                result = Encoding.UTF8.GetString(cipherbytes);\n            }\n            catch (Exception exception)\n            {\n\n\n            }\n\n         \n\n            context.Response.Write(result);\n        }\n     \n        public bool IsReusable\n        {\n            get\n            {\n                return false;\n            }\n        }\n    }\n}\n\n```\n\n","source":"_posts/RSA加密解密-c-与js版.md","raw":"---\ntitle: 'RSA加密解密(c#与js版)'\ndate: 2017-11-29 10:41:20\ntags:\n- 加密解密\ncategories:\n- C#基础\n+description: \"为保证网络中数据安全进行RSA加密解密\"\n---\n\n业务描述：前端js使用私有秘钥将数据进行加密，后端C#在一般处理程序中使用公钥对加密数据进行解密。\n两个版本的实现，版本一可直接使用，版本二可用来参考如何将XML秘钥与PEM秘钥的转换。\n\n版本一描述：\n1、该版本实现用户登录过程中RSA加密验证的过程。\n2、前台JS进行加密，后台从session中获得私钥进行解密。\n3、RSA秘钥保存在session中，刷新登录页面后自动更新。\n\n版本二描述：\n1、C#自有类RSACryptoServiceProvider生成RSA的秘钥与公钥的方法ToXmlString(true)秘钥，ToXmlString(false)公钥，结果是XML形式的，js无法直接使用，js所使用的是PEM形式的秘钥。\n解决方法：使用工具类bouncycastle直接生成PEM版的秘钥和公钥，后台使用时，再将秘钥转换为XML版的。\n引用地址：https://www.bouncycastle.org/\n插件下载地址：https://downloads.bouncycastle.org/csharp/bccrypto-csharp-1.8.1-bin.zip\n\n\n2、js加密数据后base64位的数据在传输中“+”号会变为空格，导致后台C#解密出错。\n解决方法：js先加号转后，然后后台再将加号转回。\n\n3、网页版的加密解密demo以固定的秘钥形式来实现，实际案例中可以考虑更改为使用session保存针对单个\n用户来生成的公钥和秘钥。\n\n参考地址：\nhttp://www.sufeinet.com/forum.php?mod=viewthread&tid=5484&highlight=RSA\nhttps://www.cnblogs.com/Leo_wl/p/5763243.html\n\n\n------\n\n<!--more-->\n\n### 控制台应用程序RSA基础代码演示\n```C \nusing Org.BouncyCastle.Asn1.Pkcs;\nusing Org.BouncyCastle.Asn1.X509;\nusing Org.BouncyCastle.Crypto;\nusing Org.BouncyCastle.Crypto.Generators;\nusing Org.BouncyCastle.Crypto.Parameters;\nusing Org.BouncyCastle.Pkcs;\nusing Org.BouncyCastle.Security;\nusing Org.BouncyCastle.X509;\nusing System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nnamespace RSAGenerateKey\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            RsaKeyPairGenerator g = new RsaKeyPairGenerator();\n            g.Init(new KeyGenerationParameters(new SecureRandom(), 1024));\n            var pair = g.GenerateKeyPair();\n            PrivateKeyInfo privateKeyInfo = PrivateKeyInfoFactory.CreatePrivateKeyInfo(pair.Private);\n            byte[] serializedPrivateBytes = privateKeyInfo.ToAsn1Object().GetDerEncoded();\n            string serializedPrivate = Convert.ToBase64String(serializedPrivateBytes);//PEM秘钥\n\n            SubjectPublicKeyInfo publicKeyInfo = SubjectPublicKeyInfoFactory.CreateSubjectPublicKeyInfo(pair.Public);\n            byte[] serializedPublicBytes = publicKeyInfo.ToAsn1Object().GetDerEncoded();\n            string serializedPublic = Convert.ToBase64String(serializedPublicBytes);//PEM公钥\n\n            RsaPrivateCrtKeyParameters privateKey = (RsaPrivateCrtKeyParameters)PrivateKeyFactory.CreateKey(Convert.FromBase64String(serializedPrivate));\n            RsaKeyParameters publicKey = (RsaKeyParameters)PublicKeyFactory.CreateKey(Convert.FromBase64String(serializedPublic));\n\n\n            RSACryptoServiceProvider rcsp = new RSACryptoServiceProvider();\n            RSAParameters parms = new RSAParameters();\n\n            //So the thing changed is offcourse the ToByteArrayUnsigned() instead of\n            //ToByteArray()\n            parms.Modulus = privateKey.Modulus.ToByteArrayUnsigned();\n            parms.P = privateKey.P.ToByteArrayUnsigned();\n            parms.Q = privateKey.Q.ToByteArrayUnsigned();\n            parms.DP = privateKey.DP.ToByteArrayUnsigned();\n            parms.DQ = privateKey.DQ.ToByteArrayUnsigned();\n            parms.InverseQ = privateKey.QInv.ToByteArrayUnsigned();\n            parms.D = privateKey.Exponent.ToByteArrayUnsigned();\n            parms.Exponent = privateKey.PublicExponent.ToByteArrayUnsigned();\n\n            //So now this now appears to work.\n            rcsp.ImportParameters(parms);\n\n\n            string s = rcsp.ToXmlString(true);\n\n            string privateKeyXmlText = rcsp.ToXmlString(true);//XML秘钥\n            string publicKeyXmlText = rcsp.ToXmlString(false);//XML公钥\n\n            //加密解密\n            string texta1 = \"abc\",texta2=\"\",textb1=\"\";\n            byte[] cipherbytes;\n\n            cipherbytes = rcsp.Encrypt(Encoding.UTF8.GetBytes(texta1), false);\n\n            texta2 = Convert.ToBase64String(cipherbytes);\n\n            cipherbytes = rcsp.Decrypt(Convert.FromBase64String(texta2), false);\n\n            textb1= Encoding.UTF8.GetString(cipherbytes);\n\n            Console.Read();\n\n        }\n    }\n}\n```\n\n\n\n\n### 版本一\n> 版本一： 直接使用RSACryptoServiceProvider类生成xml的公钥和秘钥，放入session中\n该版本用到了四个js。下载地址：https://pan.baidu.com/s/1boQox8V\n```html\n<script src=\"Scripts/jquery-1.4.1.js\"></script>\n<script src=\"Scripts/Barrett.js\"></script>\n<script src=\"Scripts/BigInt.js\"></script>\n<script src=\"Scripts/RSA.js\"></script>\n```\n\n#### 前台代码\n```html\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"Login.aspx.cs\" Inherits=\"RSAWeb.Login\" %>\n\n<!DOCTYPE html>\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head runat=\"server\">\n    <title>登录页RSA加密解密demo</title>\n    <script src=\"Scripts/jquery-1.4.1.js\"></script>\n    <script src=\"Scripts/Barrett.js\"></script>\n    <script src=\"Scripts/BigInt.js\"></script>\n    <script src=\"Scripts/RSA.js\"></script>\n     <script type=\"text/javascript\">\n        function cmdEncrypt() {\n            //关键步骤\n            setMaxDigits(129);\n            var key = new RSAKeyPair(\"<%=strPublicKeyExponent%>\", \"\", \"<%=strPublicKeyModulus%>\");\n            var pwdMD5Twice = $(\"#txtPassword\").attr(\"value\");\n            var pwdRtn = encryptedString(key, pwdMD5Twice);\n            //关键步骤\n            $(\"#encrypted_pwd\").attr(\"value\", pwdRtn);\n            $(\"#formLogin\").submit();\n            return;\n        }\n    </script>\n</head>\n<body>\n    <form action=\"Login.aspx\" id=\"formLogin\" method=\"post\">\n    <div>\n        <div>\n            User Name:\n        </div>\n        <div>\n            <input id=\"txtUserName\" name=\"txtUserName\" value=\"<%=postbackUserName%>\" type=\"text\" maxlength=\"16\" />\n        </div>\n        <div>\n            Password:\n        </div>\n        <div>\n            <input id=\"txtPassword\" type=\"password\" maxlength=\"16\" />\n        </div>\n        <div>\n            <input id=\"btnLogin\" type=\"button\" value=\"Login\" onclick=\"return cmdEncrypt()\" />\n        </div>\n    </div>\n    <div>\n        <input type=\"hidden\" name=\"encrypted_pwd\" id=\"encrypted_pwd\" />\n    </div>\n    </form>\n    <div>\n        <%=LoginResult%>\n    </div>\n</body>\n</html>\n\n```\n\n#### 后台代码\n```C\nusing System;\nusing System.Security.Cryptography;\nusing System.Text;\n\nnamespace RSAWeb\n{\n    public partial class Login : System.Web.UI.Page\n    {\n        protected string strPublicKeyExponent = \"\";\n        protected string strPublicKeyModulus = \"\";\n        protected string LoginResult = \"\";\n        protected string postbackUserName = \"\";\n\n\n        protected void Page_Load(object sender, EventArgs e)\n        {\n            LoginResult = \"\";\n            RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();\n            if (string.Compare(Request.RequestType, \"get\", true) == 0)\n            {\n                //将私钥存Session中\n                Session[\"private_key\"] = rsa.ToXmlString(true);\n                CYQ.Data.Log.WriteLogToTxt(Convert.ToString(Session[\"private_key\"]), CYQ.Data.LogType.Debug);\n            }\n            else\n            {\n                bool bLoginSucceed = false;\n                try\n                {\n                    string strUserName = Request.Form[\"txtUserName\"];\n                    postbackUserName = strUserName;\n                    string strPwdToDecrypt = Request.Form[\"encrypted_pwd\"];\n                    rsa.FromXmlString((string)Session[\"private_key\"]);\n\n                    byte[] result = rsa.Decrypt(HexStringToBytes(strPwdToDecrypt), false);\n                    System.Text.ASCIIEncoding enc = new ASCIIEncoding();\n                    string strPwdMD5 = enc.GetString(result);\n                    if (string.Compare(strUserName, \"admin\", true) == 0 && string.Compare(strPwdMD5, \"admin\", true) == 0)//14e1b600b1fd579f47433b88e8d85291\n                        bLoginSucceed = true;\n                }\n                catch (Exception)\n                {\n\n                }\n                if (bLoginSucceed)\n                    LoginResult = \"登录成功\";\n                else\n                    LoginResult = \"登录失败\";\n            }\n\n            //把公钥适当转换，准备发往客户端\n            RSAParameters parameter = rsa.ExportParameters(true);\n            strPublicKeyExponent = BytesToHexString(parameter.Exponent);\n            strPublicKeyModulus = BytesToHexString(parameter.Modulus);\n        }\n        private string BytesToHexString(byte[] input)\n        {\n            StringBuilder hexString = new StringBuilder(64);\n\n            for (int i = 0; i < input.Length; i++)\n            {\n                hexString.Append(String.Format(\"{0:X2}\", input[i]));\n            }\n            return hexString.ToString();\n        }\n\n        public static byte[] HexStringToBytes(string hex)\n        {\n            if (hex.Length == 0)\n            {\n                return new byte[] { 0 };\n            }\n\n            if (hex.Length % 2 == 1)\n            {\n                hex = \"0\" + hex;\n            }\n\n            byte[] result = new byte[hex.Length / 2];\n\n            for (int i = 0; i < hex.Length / 2; i++)\n            {\n                result[i] = byte.Parse(hex.Substring(2 * i, 2), System.Globalization.NumberStyles.AllowHexSpecifier);\n            }\n\n            return result;\n        }\n\n    }\n}\n```\n\n\n\n### 版本二\n> 版本二： 未能解决问题：在使用过程中偶尔会出现无法解密的异常，\n用户\na8176a4c-5b7e-4f1d-94d8-04e744332f76\n进行分数\n/H544nYvvBRPZQAIQfDGHMySy/svCbS8/uUwwv5Fc6hKlTed9XvwuEYeAKv22cdPXDV%2B6/\ntmduEuVJDCP7G8Jb2TxJdN9A%2Bwou%2BGnOTO7%2BTo6yA2KX4Uvriof5yCt1ONmkLbsPRVh0/cnjnogJwLk2U/FVggjIhcOP6Rq%2BzLOw==\n的提交操作,发生异常不正确的数据。\n本地直接使用测试demo可以解密，所以无法找到出问题的原因。！！！！\n\n2、网页版本webform\n\n#### 前台网页\n```html\n<%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeBehind=\"login.aspx.cs\" Inherits=\"RSADemo.login\" %>\n\n<!DOCTYPE html>\n\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head runat=\"server\">\n    <title></title>\n    <script src=\"js/jquery.js\"></script>\n    <script src=\"http://passport.cnblogs.com/scripts/jsencrypt.min.js\"></script>\n    <script src=\"https://unpkg.com/node-forge@0.7.0/dist/forge.min.js\"></script>\n    <script type=\"text/javascript\">\n        $(function () {\n             //pem公钥\n            var pemPublicKey = \"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHCkaSCVy6sHB/5rAKS/1EEtyzWuy30gLyrpNbFI3GtpsdFGdsqQ/uwiscGD+pZ7Mxj1ZumPs4jHvPpcAeCb8gKsqP/f5+pputTMuTkhTQqlDT1plHR7w3REQI8MaJ8KTA/pJiPo6iWToFynQeJNWjicxXxNURSZQ7nmC2rl4uPQIDAQAB\";\n            $(\"#tra\").val(pemPublicKey);\n\n\n            var encrypt = new JSEncrypt();\n            encrypt.setPublicKey($(\"#tra\").val());\n            var data = encrypt.encrypt(\"123456789\");\n            alert(data);\n            $(\"#btn\").click(function () {\n                $.ajax({\n                    url: 'Handler1.ashx',\n                    data: \"pwd=\" +encodeURI(data).replace(/\\+/g, '%2B'),  //+号的处理：因为数据在网络上传输时，非字母数字字符都将被替换成百分号（%）后跟两位十六进制数，而base64编码在传输到后端的时候，+会变成空格，因此先替换掉。后端再替换回来\n                    type: 'post',\n                    success: function (msg) {\n                        alert(msg);\n                    }\n                });\n            });\n\n        });\n\n\n    </script>\n</head>\n<body>\n    <form id=\"form1\" runat=\"server\">\n        <div>\n            <input type=\"button\" id=\"btn\" value=\"点我\" />\n            <textarea id=\"tra\" rows=\"15\" cols=\"65\">\n                \n        </textarea>\n            <hr />\n            注意+好的处理\n        </div>\n    </form>\n</body>\n</html>\n\n```\n\n#### 后台ashx一般处理程序\n\n```C\nusing System;\nusing System.Security.Cryptography;\nusing System.Text;\nusing System.Web;\n\nnamespace RSADemo\n{\n    /// <summary>\n    /// Summary description for Handler1\n    /// </summary>\n    public class Handler1 : IHttpHandler\n    {\n\n        public void ProcessRequest(HttpContext context)\n        {\n            string result = \"\";\n            //XML密钥\n            string privateKey = @\"<RSAKeyValue><Modulus>xwpGkglcurBwf+awCkv9RBLcs1rst9IC8q6TWxSNxrabHRRnbKkP7sIrHBg/qWezMY9Wbpj7OIx7z6XAHgm/ICrKj/3+fqabrUzLk5IU0KpQ09aZR0e8N0RECPDGifCkwP6SYj6Oolk6Bcp0HiTVo4nMV8TVEUmUO55gtq5eLj0=</Modulus><Exponent>AQAB</Exponent><P>/LnrFrusoNklOl6d0zSWZ1aCdQC2l3XXU8SSgYNLuSmgVwl7wQ2w0Jn9SQqyiVRmbcp1SX28/bH6TaA2v9ejHQ==</P><Q>yZ5TTtLOfTqrikYjy/fyktTk977y2GG2R9sgNPHtnH5EIIC9CoJETDwfSu40YUlHeUUXHQ1nG1WmWbEOC76toQ==</Q><DP>5UfC+YfgkLkQJklqxA+EmFIK3x17iiO16+B9zhQQ4fba6bvH05iZHldmTBrxaNfyaY7xI3B4wmzymfRNV3TKHQ==</DP><DQ>k7EvRaaXLJU14+zNfDT9tSHPOMzgCDJL3Qdf6GjwrpqwPT8RPAmBDndcVP95z2pmuScrb1TKGvP7D+jraR8dAQ==</DQ><InverseQ>4gbDpW7ca3dn0XXPkYsVmIl7SBqU8lq9X2xji/Nyg1M0pjDcpdQm0bqOm+/5usQl+kRotpIoK+Yf6J++zbmNjg==</InverseQ><D>Ccxfc356/mTDsQQv+93ISsLb8wdhml4AD6bY8bWmEhd4tNqFieObuW79FM27ypDkkSbDhD/LNDo0OSFpfwEPU8VxnEMzFnVw7MIWGSVKWocZHIhsclkHtHNtHaKS0LNEie2q0PGMiIYty/QG5k3bJeA8R42teXv3nARYEgzuNmE=</D></RSAKeyValue>\";\n\n       \n            try\n            {\n                string pwd = context.Request[\"pwd\"];\n\n                RSACryptoServiceProvider rsa = new RSACryptoServiceProvider();\n                byte[] cipherbytes;\n                rsa.FromXmlString(privateKey);\n                //把+号，再替换回来\n                cipherbytes = rsa.Decrypt(Convert.FromBase64String(pwd.Replace(\"%2B\", \"+\")), false);\n\n                result = Encoding.UTF8.GetString(cipherbytes);\n            }\n            catch (Exception exception)\n            {\n\n\n            }\n\n         \n\n            context.Response.Write(result);\n        }\n     \n        public bool IsReusable\n        {\n            get\n            {\n                return false;\n            }\n        }\n    }\n}\n\n```\n\n","slug":"RSA加密解密-c-与js版","published":1,"updated":"2018-01-16T09:35:34.154Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaaywf0017ocm7peua3acl","content":"<p>业务描述：前端js使用私有秘钥将数据进行加密，后端C#在一般处理程序中使用公钥对加密数据进行解密。<br>两个版本的实现，版本一可直接使用，版本二可用来参考如何将XML秘钥与PEM秘钥的转换。</p>\n<p>版本一描述：<br>1、该版本实现用户登录过程中RSA加密验证的过程。<br>2、前台JS进行加密，后台从session中获得私钥进行解密。<br>3、RSA秘钥保存在session中，刷新登录页面后自动更新。</p>\n<p>版本二描述：<br>1、C#自有类RSACryptoServiceProvider生成RSA的秘钥与公钥的方法ToXmlString(true)秘钥，ToXmlString(false)公钥，结果是XML形式的，js无法直接使用，js所使用的是PEM形式的秘钥。<br>解决方法：使用工具类bouncycastle直接生成PEM版的秘钥和公钥，后台使用时，再将秘钥转换为XML版的。<br>引用地址：<a href=\"https://www.bouncycastle.org/\" target=\"_blank\" rel=\"external\">https://www.bouncycastle.org/</a><br>插件下载地址：<a href=\"https://downloads.bouncycastle.org/csharp/bccrypto-csharp-1.8.1-bin.zip\" target=\"_blank\" rel=\"external\">https://downloads.bouncycastle.org/csharp/bccrypto-csharp-1.8.1-bin.zip</a></p>\n<p>2、js加密数据后base64位的数据在传输中“+”号会变为空格，导致后台C#解密出错。<br>解决方法：js先加号转后，然后后台再将加号转回。</p>\n<p>3、网页版的加密解密demo以固定的秘钥形式来实现，实际案例中可以考虑更改为使用session保存针对单个<br>用户来生成的公钥和秘钥。</p>\n<p>参考地址：<br><a href=\"http://www.sufeinet.com/forum.php?mod=viewthread&amp;tid=5484&amp;highlight=RSA\" target=\"_blank\" rel=\"external\">http://www.sufeinet.com/forum.php?mod=viewthread&amp;tid=5484&amp;highlight=RSA</a><br><a href=\"https://www.cnblogs.com/Leo_wl/p/5763243.html\" target=\"_blank\" rel=\"external\">https://www.cnblogs.com/Leo_wl/p/5763243.html</a></p>\n<hr>\n<a id=\"more\"></a>\n<h3 id=\"控制台应用程序RSA基础代码演示\"><a href=\"#控制台应用程序RSA基础代码演示\" class=\"headerlink\" title=\"控制台应用程序RSA基础代码演示\"></a>控制台应用程序RSA基础代码演示</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Asn1.Pkcs;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Asn1.X509;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Crypto;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Crypto.Generators;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Crypto.Parameters;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Pkcs;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.X509;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Security.Cryptography;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> RSAGenerateKey</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            RsaKeyPairGenerator g = <span class=\"keyword\">new</span> RsaKeyPairGenerator();</div><div class=\"line\">            g.Init(<span class=\"keyword\">new</span> KeyGenerationParameters(<span class=\"keyword\">new</span> SecureRandom(), <span class=\"number\">1024</span>));</div><div class=\"line\">            var pair = g.GenerateKeyPair();</div><div class=\"line\">            PrivateKeyInfo privateKeyInfo = PrivateKeyInfoFactory.CreatePrivateKeyInfo(pair.Private);</div><div class=\"line\">            byte[] serializedPrivateBytes = privateKeyInfo.ToAsn1Object().GetDerEncoded();</div><div class=\"line\">            <span class=\"built_in\">string</span> serializedPrivate = Convert.ToBase64String(serializedPrivateBytes);<span class=\"comment\">//PEM秘钥</span></div><div class=\"line\"></div><div class=\"line\">            SubjectPublicKeyInfo publicKeyInfo = SubjectPublicKeyInfoFactory.CreateSubjectPublicKeyInfo(pair.Public);</div><div class=\"line\">            byte[] serializedPublicBytes = publicKeyInfo.ToAsn1Object().GetDerEncoded();</div><div class=\"line\">            <span class=\"built_in\">string</span> serializedPublic = Convert.ToBase64String(serializedPublicBytes);<span class=\"comment\">//PEM公钥</span></div><div class=\"line\"></div><div class=\"line\">            RsaPrivateCrtKeyParameters privateKey = (RsaPrivateCrtKeyParameters)PrivateKeyFactory.CreateKey(Convert.FromBase64String(serializedPrivate));</div><div class=\"line\">            RsaKeyParameters publicKey = (RsaKeyParameters)PublicKeyFactory.CreateKey(Convert.FromBase64String(serializedPublic));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            RSACryptoServiceProvider rcsp = <span class=\"keyword\">new</span> RSACryptoServiceProvider();</div><div class=\"line\">            RSAParameters parms = <span class=\"keyword\">new</span> RSAParameters();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//So the thing changed is offcourse the ToByteArrayUnsigned() instead of</span></div><div class=\"line\">            <span class=\"comment\">//ToByteArray()</span></div><div class=\"line\">            parms.Modulus = privateKey.Modulus.ToByteArrayUnsigned();</div><div class=\"line\">            parms.P = privateKey.P.ToByteArrayUnsigned();</div><div class=\"line\">            parms.Q = privateKey.Q.ToByteArrayUnsigned();</div><div class=\"line\">            parms.DP = privateKey.DP.ToByteArrayUnsigned();</div><div class=\"line\">            parms.DQ = privateKey.DQ.ToByteArrayUnsigned();</div><div class=\"line\">            parms.InverseQ = privateKey.QInv.ToByteArrayUnsigned();</div><div class=\"line\">            parms.D = privateKey.Exponent.ToByteArrayUnsigned();</div><div class=\"line\">            parms.Exponent = privateKey.PublicExponent.ToByteArrayUnsigned();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//So now this now appears to work.</span></div><div class=\"line\">            rcsp.ImportParameters(parms);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> s = rcsp.ToXmlString(<span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> privateKeyXmlText = rcsp.ToXmlString(<span class=\"literal\">true</span>);<span class=\"comment\">//XML秘钥</span></div><div class=\"line\">            <span class=\"built_in\">string</span> publicKeyXmlText = rcsp.ToXmlString(<span class=\"literal\">false</span>);<span class=\"comment\">//XML公钥</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//加密解密</span></div><div class=\"line\">            <span class=\"built_in\">string</span> texta1 = <span class=\"string\">\"abc\"</span>,texta2=<span class=\"string\">\"\"</span>,textb1=<span class=\"string\">\"\"</span>;</div><div class=\"line\">            byte[] cipherbytes;</div><div class=\"line\"></div><div class=\"line\">            cipherbytes = rcsp.Encrypt(Encoding.UTF8.GetBytes(texta1), <span class=\"literal\">false</span>);</div><div class=\"line\"></div><div class=\"line\">            texta2 = Convert.ToBase64String(cipherbytes);</div><div class=\"line\"></div><div class=\"line\">            cipherbytes = rcsp.Decrypt(Convert.FromBase64String(texta2), <span class=\"literal\">false</span>);</div><div class=\"line\"></div><div class=\"line\">            textb1= Encoding.UTF8.GetString(cipherbytes);</div><div class=\"line\"></div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"版本一\"><a href=\"#版本一\" class=\"headerlink\" title=\"版本一\"></a>版本一</h3><blockquote>\n<p>版本一： 直接使用RSACryptoServiceProvider类生成xml的公钥和秘钥，放入session中<br>该版本用到了四个js。下载地址：<a href=\"https://pan.baidu.com/s/1boQox8V\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1boQox8V</a><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/jquery-1.4.1.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/Barrett.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/BigInt.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/RSA.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"前台代码\"><a href=\"#前台代码\" class=\"headerlink\" title=\"前台代码\"></a>前台代码</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">Page</span> <span class=\"attr\">Language</span>=<span class=\"string\">\"C#\"</span> <span class=\"attr\">AutoEventWireup</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">CodeBehind</span>=<span class=\"string\">\"Login.aspx.cs\"</span> <span class=\"attr\">Inherits</span>=<span class=\"string\">\"RSAWeb.Login\"</span> %&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>登录页RSA加密解密demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/jquery-1.4.1.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/Barrett.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/BigInt.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/RSA.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cmdEncrypt</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//关键步骤</span></div><div class=\"line\">            setMaxDigits(<span class=\"number\">129</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> key = <span class=\"keyword\">new</span> RSAKeyPair(<span class=\"string\">\"&lt;%=strPublicKeyExponent%&gt;\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"&lt;%=strPublicKeyModulus%&gt;\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> pwdMD5Twice = $(<span class=\"string\">\"#txtPassword\"</span>).attr(<span class=\"string\">\"value\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> pwdRtn = encryptedString(key, pwdMD5Twice);</div><div class=\"line\">            <span class=\"comment\">//关键步骤</span></div><div class=\"line\">            $(<span class=\"string\">\"#encrypted_pwd\"</span>).attr(<span class=\"string\">\"value\"</span>, pwdRtn);</div><div class=\"line\">            $(<span class=\"string\">\"#formLogin\"</span>).submit();</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"Login.aspx\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"formLogin\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            User Name:</div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtUserName\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"txtUserName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"&lt;%=postbackUserName%&gt;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">maxlength</span>=<span class=\"string\">\"16\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            Password:</div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtPassword\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">maxlength</span>=<span class=\"string\">\"16\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnLogin\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Login\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"return cmdEncrypt()\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"encrypted_pwd\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"encrypted_pwd\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%=LoginResult%</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"后台代码\"><a href=\"#后台代码\" class=\"headerlink\" title=\"后台代码\"></a>后台代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Security.Cryptography;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> RSAWeb</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> Login : System.Web.UI.Page</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"built_in\">string</span> strPublicKeyExponent = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"built_in\">string</span> strPublicKeyModulus = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"built_in\">string</span> LoginResult = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"built_in\">string</span> postbackUserName = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            LoginResult = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            RSACryptoServiceProvider rsa = <span class=\"keyword\">new</span> RSACryptoServiceProvider();</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.Compare(Request.RequestType, <span class=\"string\">\"get\"</span>, <span class=\"literal\">true</span>) == <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//将私钥存Session中</span></div><div class=\"line\">                Session[<span class=\"string\">\"private_key\"</span>] = rsa.ToXmlString(<span class=\"literal\">true</span>);</div><div class=\"line\">                CYQ.Data.Log.WriteLogToTxt(Convert.ToString(Session[<span class=\"string\">\"private_key\"</span>]), CYQ.Data.LogType.Debug);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">bool</span> bLoginSucceed = <span class=\"literal\">false</span>;</div><div class=\"line\">                <span class=\"keyword\">try</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> strUserName = Request.Form[<span class=\"string\">\"txtUserName\"</span>];</div><div class=\"line\">                    postbackUserName = strUserName;</div><div class=\"line\">                    <span class=\"built_in\">string</span> strPwdToDecrypt = Request.Form[<span class=\"string\">\"encrypted_pwd\"</span>];</div><div class=\"line\">                    rsa.FromXmlString((<span class=\"built_in\">string</span>)Session[<span class=\"string\">\"private_key\"</span>]);</div><div class=\"line\"></div><div class=\"line\">                    byte[] result = rsa.Decrypt(HexStringToBytes(strPwdToDecrypt), <span class=\"literal\">false</span>);</div><div class=\"line\">                    System.Text.ASCIIEncoding enc = <span class=\"keyword\">new</span> ASCIIEncoding();</div><div class=\"line\">                    <span class=\"built_in\">string</span> strPwdMD5 = enc.GetString(result);</div><div class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.Compare(strUserName, <span class=\"string\">\"admin\"</span>, <span class=\"literal\">true</span>) == <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">string</span>.Compare(strPwdMD5, <span class=\"string\">\"admin\"</span>, <span class=\"literal\">true</span>) == <span class=\"number\">0</span>)<span class=\"comment\">//14e1b600b1fd579f47433b88e8d85291</span></div><div class=\"line\">                        bLoginSucceed = <span class=\"literal\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">catch</span> (Exception)</div><div class=\"line\">                &#123;</div><div class=\"line\"></div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">if</span> (bLoginSucceed)</div><div class=\"line\">                    LoginResult = <span class=\"string\">\"登录成功\"</span>;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                    LoginResult = <span class=\"string\">\"登录失败\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//把公钥适当转换，准备发往客户端</span></div><div class=\"line\">            RSAParameters parameter = rsa.ExportParameters(<span class=\"literal\">true</span>);</div><div class=\"line\">            strPublicKeyExponent = BytesToHexString(parameter.Exponent);</div><div class=\"line\">            strPublicKeyModulus = BytesToHexString(parameter.Modulus);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"built_in\">string</span> <span class=\"title\">BytesToHexString</span><span class=\"params\">(byte[] input)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            StringBuilder hexString = <span class=\"keyword\">new</span> StringBuilder(<span class=\"number\">64</span>);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.Length; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                hexString.Append(String.Format(<span class=\"string\">\"&#123;0:X2&#125;\"</span>, input[i]));</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> hexString.ToString();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> byte[] HexStringToBytes(<span class=\"built_in\">string</span> hex)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (hex.Length == <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> byte[] &#123; <span class=\"number\">0</span> &#125;;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (hex.Length % <span class=\"number\">2</span> == <span class=\"number\">1</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                hex = <span class=\"string\">\"0\"</span> + hex;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            byte[] result = <span class=\"keyword\">new</span> byte[hex.Length / <span class=\"number\">2</span>];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; hex.Length / <span class=\"number\">2</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                result[i] = byte.Parse(hex.Substring(<span class=\"number\">2</span> * i, <span class=\"number\">2</span>), System.Globalization.NumberStyles.AllowHexSpecifier);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"版本二\"><a href=\"#版本二\" class=\"headerlink\" title=\"版本二\"></a>版本二</h3><blockquote>\n<p>版本二： 未能解决问题：在使用过程中偶尔会出现无法解密的异常，<br>用户<br>a8176a4c-5b7e-4f1d-94d8-04e744332f76<br>进行分数<br>/H544nYvvBRPZQAIQfDGHMySy/svCbS8/uUwwv5Fc6hKlTed9XvwuEYeAKv22cdPXDV%2B6/<br>tmduEuVJDCP7G8Jb2TxJdN9A%2Bwou%2BGnOTO7%2BTo6yA2KX4Uvriof5yCt1ONmkLbsPRVh0/cnjnogJwLk2U/FVggjIhcOP6Rq%2BzLOw==<br>的提交操作,发生异常不正确的数据。<br>本地直接使用测试demo可以解密，所以无法找到出问题的原因。！！！！</p>\n</blockquote>\n<p>2、网页版本webform</p>\n<h4 id=\"前台网页\"><a href=\"#前台网页\" class=\"headerlink\" title=\"前台网页\"></a>前台网页</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">Page</span> <span class=\"attr\">Language</span>=<span class=\"string\">\"C#\"</span> <span class=\"attr\">AutoEventWireup</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">CodeBehind</span>=<span class=\"string\">\"login.aspx.cs\"</span> <span class=\"attr\">Inherits</span>=<span class=\"string\">\"RSADemo.login\"</span> %&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://passport.cnblogs.com/scripts/jsencrypt.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://unpkg.com/node-forge@0.7.0/dist/forge.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">        $(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">             <span class=\"comment\">//pem公钥</span></div><div class=\"line\">            <span class=\"keyword\">var</span> pemPublicKey = <span class=\"string\">\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHCkaSCVy6sHB/5rAKS/1EEtyzWuy30gLyrpNbFI3GtpsdFGdsqQ/uwiscGD+pZ7Mxj1ZumPs4jHvPpcAeCb8gKsqP/f5+pputTMuTkhTQqlDT1plHR7w3REQI8MaJ8KTA/pJiPo6iWToFynQeJNWjicxXxNURSZQ7nmC2rl4uPQIDAQAB\"</span>;</div><div class=\"line\">            $(<span class=\"string\">\"#tra\"</span>).val(pemPublicKey);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">var</span> encrypt = <span class=\"keyword\">new</span> JSEncrypt();</div><div class=\"line\">            encrypt.setPublicKey($(<span class=\"string\">\"#tra\"</span>).val());</div><div class=\"line\">            <span class=\"keyword\">var</span> data = encrypt.encrypt(<span class=\"string\">\"123456789\"</span>);</div><div class=\"line\">            alert(data);</div><div class=\"line\">            $(<span class=\"string\">\"#btn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                $.ajax(&#123;</div><div class=\"line\">                    <span class=\"attr\">url</span>: <span class=\"string\">'Handler1.ashx'</span>,</div><div class=\"line\">                    <span class=\"attr\">data</span>: <span class=\"string\">\"pwd=\"</span> +<span class=\"built_in\">encodeURI</span>(data).replace(<span class=\"regexp\">/\\+/g</span>, <span class=\"string\">'%2B'</span>),  <span class=\"comment\">//+号的处理：因为数据在网络上传输时，非字母数字字符都将被替换成百分号（%）后跟两位十六进制数，而base64编码在传输到后端的时候，+会变成空格，因此先替换掉。后端再替换回来</span></div><div class=\"line\">                    type: <span class=\"string\">'post'</span>,</div><div class=\"line\">                    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123;</div><div class=\"line\">                        alert(msg);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"点我\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">id</span>=<span class=\"string\">\"tra\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"15\"</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"65\"</span>&gt;</span></div><div class=\"line\">                </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></div><div class=\"line\">            注意+好的处理</div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"后台ashx一般处理程序\"><a href=\"#后台ashx一般处理程序\" class=\"headerlink\" title=\"后台ashx一般处理程序\"></a>后台ashx一般处理程序</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Security.Cryptography;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> RSADemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Summary description for Handler1</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Handler1 : IHttpHandler</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ProcessRequest</span><span class=\"params\">(HttpContext context)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"comment\">//XML密钥</span></div><div class=\"line\">            <span class=\"built_in\">string</span> privateKey = @<span class=\"string\">\"&lt;RSAKeyValue&gt;&lt;Modulus&gt;xwpGkglcurBwf+awCkv9RBLcs1rst9IC8q6TWxSNxrabHRRnbKkP7sIrHBg/qWezMY9Wbpj7OIx7z6XAHgm/ICrKj/3+fqabrUzLk5IU0KpQ09aZR0e8N0RECPDGifCkwP6SYj6Oolk6Bcp0HiTVo4nMV8TVEUmUO55gtq5eLj0=&lt;/Modulus&gt;&lt;Exponent&gt;AQAB&lt;/Exponent&gt;&lt;P&gt;/LnrFrusoNklOl6d0zSWZ1aCdQC2l3XXU8SSgYNLuSmgVwl7wQ2w0Jn9SQqyiVRmbcp1SX28/bH6TaA2v9ejHQ==&lt;/P&gt;&lt;Q&gt;yZ5TTtLOfTqrikYjy/fyktTk977y2GG2R9sgNPHtnH5EIIC9CoJETDwfSu40YUlHeUUXHQ1nG1WmWbEOC76toQ==&lt;/Q&gt;&lt;DP&gt;5UfC+YfgkLkQJklqxA+EmFIK3x17iiO16+B9zhQQ4fba6bvH05iZHldmTBrxaNfyaY7xI3B4wmzymfRNV3TKHQ==&lt;/DP&gt;&lt;DQ&gt;k7EvRaaXLJU14+zNfDT9tSHPOMzgCDJL3Qdf6GjwrpqwPT8RPAmBDndcVP95z2pmuScrb1TKGvP7D+jraR8dAQ==&lt;/DQ&gt;&lt;InverseQ&gt;4gbDpW7ca3dn0XXPkYsVmIl7SBqU8lq9X2xji/Nyg1M0pjDcpdQm0bqOm+/5usQl+kRotpIoK+Yf6J++zbmNjg==&lt;/InverseQ&gt;&lt;D&gt;Ccxfc356/mTDsQQv+93ISsLb8wdhml4AD6bY8bWmEhd4tNqFieObuW79FM27ypDkkSbDhD/LNDo0OSFpfwEPU8VxnEMzFnVw7MIWGSVKWocZHIhsclkHtHNtHaKS0LNEie2q0PGMiIYty/QG5k3bJeA8R42teXv3nARYEgzuNmE=&lt;/D&gt;&lt;/RSAKeyValue&gt;\"</span>;</div><div class=\"line\"></div><div class=\"line\">       </div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> pwd = context.Request[<span class=\"string\">\"pwd\"</span>];</div><div class=\"line\"></div><div class=\"line\">                RSACryptoServiceProvider rsa = <span class=\"keyword\">new</span> RSACryptoServiceProvider();</div><div class=\"line\">                byte[] cipherbytes;</div><div class=\"line\">                rsa.FromXmlString(privateKey);</div><div class=\"line\">                <span class=\"comment\">//把+号，再替换回来</span></div><div class=\"line\">                cipherbytes = rsa.Decrypt(Convert.FromBase64String(pwd.Replace(<span class=\"string\">\"%2B\"</span>, <span class=\"string\">\"+\"</span>)), <span class=\"literal\">false</span>);</div><div class=\"line\"></div><div class=\"line\">                result = Encoding.UTF8.GetString(cipherbytes);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception exception)</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">         </div><div class=\"line\"></div><div class=\"line\">            context.Response.Write(result);</div><div class=\"line\">        &#125;</div><div class=\"line\">     </div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> IsReusable</div><div class=\"line\">        &#123;</div><div class=\"line\">            get</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<p>业务描述：前端js使用私有秘钥将数据进行加密，后端C#在一般处理程序中使用公钥对加密数据进行解密。<br>两个版本的实现，版本一可直接使用，版本二可用来参考如何将XML秘钥与PEM秘钥的转换。</p>\n<p>版本一描述：<br>1、该版本实现用户登录过程中RSA加密验证的过程。<br>2、前台JS进行加密，后台从session中获得私钥进行解密。<br>3、RSA秘钥保存在session中，刷新登录页面后自动更新。</p>\n<p>版本二描述：<br>1、C#自有类RSACryptoServiceProvider生成RSA的秘钥与公钥的方法ToXmlString(true)秘钥，ToXmlString(false)公钥，结果是XML形式的，js无法直接使用，js所使用的是PEM形式的秘钥。<br>解决方法：使用工具类bouncycastle直接生成PEM版的秘钥和公钥，后台使用时，再将秘钥转换为XML版的。<br>引用地址：<a href=\"https://www.bouncycastle.org/\">https://www.bouncycastle.org/</a><br>插件下载地址：<a href=\"https://downloads.bouncycastle.org/csharp/bccrypto-csharp-1.8.1-bin.zip\">https://downloads.bouncycastle.org/csharp/bccrypto-csharp-1.8.1-bin.zip</a></p>\n<p>2、js加密数据后base64位的数据在传输中“+”号会变为空格，导致后台C#解密出错。<br>解决方法：js先加号转后，然后后台再将加号转回。</p>\n<p>3、网页版的加密解密demo以固定的秘钥形式来实现，实际案例中可以考虑更改为使用session保存针对单个<br>用户来生成的公钥和秘钥。</p>\n<p>参考地址：<br><a href=\"http://www.sufeinet.com/forum.php?mod=viewthread&amp;tid=5484&amp;highlight=RSA\">http://www.sufeinet.com/forum.php?mod=viewthread&amp;tid=5484&amp;highlight=RSA</a><br><a href=\"https://www.cnblogs.com/Leo_wl/p/5763243.html\">https://www.cnblogs.com/Leo_wl/p/5763243.html</a></p>\n<hr>","more":"<h3 id=\"控制台应用程序RSA基础代码演示\"><a href=\"#控制台应用程序RSA基础代码演示\" class=\"headerlink\" title=\"控制台应用程序RSA基础代码演示\"></a>控制台应用程序RSA基础代码演示</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Asn1.Pkcs;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Asn1.X509;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Crypto;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Crypto.Generators;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Crypto.Parameters;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Pkcs;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.Security;</div><div class=\"line\"><span class=\"keyword\">using</span> Org.BouncyCastle.X509;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Security.Cryptography;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> RSAGenerateKey</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            RsaKeyPairGenerator g = <span class=\"keyword\">new</span> RsaKeyPairGenerator();</div><div class=\"line\">            g.Init(<span class=\"keyword\">new</span> KeyGenerationParameters(<span class=\"keyword\">new</span> SecureRandom(), <span class=\"number\">1024</span>));</div><div class=\"line\">            var pair = g.GenerateKeyPair();</div><div class=\"line\">            PrivateKeyInfo privateKeyInfo = PrivateKeyInfoFactory.CreatePrivateKeyInfo(pair.Private);</div><div class=\"line\">            byte[] serializedPrivateBytes = privateKeyInfo.ToAsn1Object().GetDerEncoded();</div><div class=\"line\">            <span class=\"built_in\">string</span> serializedPrivate = Convert.ToBase64String(serializedPrivateBytes);<span class=\"comment\">//PEM秘钥</span></div><div class=\"line\"></div><div class=\"line\">            SubjectPublicKeyInfo publicKeyInfo = SubjectPublicKeyInfoFactory.CreateSubjectPublicKeyInfo(pair.Public);</div><div class=\"line\">            byte[] serializedPublicBytes = publicKeyInfo.ToAsn1Object().GetDerEncoded();</div><div class=\"line\">            <span class=\"built_in\">string</span> serializedPublic = Convert.ToBase64String(serializedPublicBytes);<span class=\"comment\">//PEM公钥</span></div><div class=\"line\"></div><div class=\"line\">            RsaPrivateCrtKeyParameters privateKey = (RsaPrivateCrtKeyParameters)PrivateKeyFactory.CreateKey(Convert.FromBase64String(serializedPrivate));</div><div class=\"line\">            RsaKeyParameters publicKey = (RsaKeyParameters)PublicKeyFactory.CreateKey(Convert.FromBase64String(serializedPublic));</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            RSACryptoServiceProvider rcsp = <span class=\"keyword\">new</span> RSACryptoServiceProvider();</div><div class=\"line\">            RSAParameters parms = <span class=\"keyword\">new</span> RSAParameters();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//So the thing changed is offcourse the ToByteArrayUnsigned() instead of</span></div><div class=\"line\">            <span class=\"comment\">//ToByteArray()</span></div><div class=\"line\">            parms.Modulus = privateKey.Modulus.ToByteArrayUnsigned();</div><div class=\"line\">            parms.P = privateKey.P.ToByteArrayUnsigned();</div><div class=\"line\">            parms.Q = privateKey.Q.ToByteArrayUnsigned();</div><div class=\"line\">            parms.DP = privateKey.DP.ToByteArrayUnsigned();</div><div class=\"line\">            parms.DQ = privateKey.DQ.ToByteArrayUnsigned();</div><div class=\"line\">            parms.InverseQ = privateKey.QInv.ToByteArrayUnsigned();</div><div class=\"line\">            parms.D = privateKey.Exponent.ToByteArrayUnsigned();</div><div class=\"line\">            parms.Exponent = privateKey.PublicExponent.ToByteArrayUnsigned();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//So now this now appears to work.</span></div><div class=\"line\">            rcsp.ImportParameters(parms);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> s = rcsp.ToXmlString(<span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> privateKeyXmlText = rcsp.ToXmlString(<span class=\"literal\">true</span>);<span class=\"comment\">//XML秘钥</span></div><div class=\"line\">            <span class=\"built_in\">string</span> publicKeyXmlText = rcsp.ToXmlString(<span class=\"literal\">false</span>);<span class=\"comment\">//XML公钥</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//加密解密</span></div><div class=\"line\">            <span class=\"built_in\">string</span> texta1 = <span class=\"string\">\"abc\"</span>,texta2=<span class=\"string\">\"\"</span>,textb1=<span class=\"string\">\"\"</span>;</div><div class=\"line\">            byte[] cipherbytes;</div><div class=\"line\"></div><div class=\"line\">            cipherbytes = rcsp.Encrypt(Encoding.UTF8.GetBytes(texta1), <span class=\"literal\">false</span>);</div><div class=\"line\"></div><div class=\"line\">            texta2 = Convert.ToBase64String(cipherbytes);</div><div class=\"line\"></div><div class=\"line\">            cipherbytes = rcsp.Decrypt(Convert.FromBase64String(texta2), <span class=\"literal\">false</span>);</div><div class=\"line\"></div><div class=\"line\">            textb1= Encoding.UTF8.GetString(cipherbytes);</div><div class=\"line\"></div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"版本一\"><a href=\"#版本一\" class=\"headerlink\" title=\"版本一\"></a>版本一</h3><blockquote>\n<p>版本一： 直接使用RSACryptoServiceProvider类生成xml的公钥和秘钥，放入session中<br>该版本用到了四个js。下载地址：<a href=\"https://pan.baidu.com/s/1boQox8V\">https://pan.baidu.com/s/1boQox8V</a><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/jquery-1.4.1.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/Barrett.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/BigInt.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/RSA.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n</blockquote>\n<h4 id=\"前台代码\"><a href=\"#前台代码\" class=\"headerlink\" title=\"前台代码\"></a>前台代码</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">Page</span> <span class=\"attr\">Language</span>=<span class=\"string\">\"C#\"</span> <span class=\"attr\">AutoEventWireup</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">CodeBehind</span>=<span class=\"string\">\"Login.aspx.cs\"</span> <span class=\"attr\">Inherits</span>=<span class=\"string\">\"RSAWeb.Login\"</span> %&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>登录页RSA加密解密demo<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/jquery-1.4.1.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/Barrett.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/BigInt.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"Scripts/RSA.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">cmdEncrypt</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//关键步骤</span></div><div class=\"line\">            setMaxDigits(<span class=\"number\">129</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> key = <span class=\"keyword\">new</span> RSAKeyPair(<span class=\"string\">\"&lt;%=strPublicKeyExponent%&gt;\"</span>, <span class=\"string\">\"\"</span>, <span class=\"string\">\"&lt;%=strPublicKeyModulus%&gt;\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> pwdMD5Twice = $(<span class=\"string\">\"#txtPassword\"</span>).attr(<span class=\"string\">\"value\"</span>);</div><div class=\"line\">            <span class=\"keyword\">var</span> pwdRtn = encryptedString(key, pwdMD5Twice);</div><div class=\"line\">            <span class=\"comment\">//关键步骤</span></div><div class=\"line\">            $(<span class=\"string\">\"#encrypted_pwd\"</span>).attr(<span class=\"string\">\"value\"</span>, pwdRtn);</div><div class=\"line\">            $(<span class=\"string\">\"#formLogin\"</span>).submit();</div><div class=\"line\">            <span class=\"keyword\">return</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"Login.aspx\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"formLogin\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            User Name:</div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtUserName\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"txtUserName\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"&lt;%=postbackUserName%&gt;\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">maxlength</span>=<span class=\"string\">\"16\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            Password:</div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"txtPassword\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"password\"</span> <span class=\"attr\">maxlength</span>=<span class=\"string\">\"16\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btnLogin\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"Login\"</span> <span class=\"attr\">onclick</span>=<span class=\"string\">\"return cmdEncrypt()\"</span> /&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"encrypted_pwd\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"encrypted_pwd\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">%=LoginResult%</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"后台代码\"><a href=\"#后台代码\" class=\"headerlink\" title=\"后台代码\"></a>后台代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Security.Cryptography;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> RSAWeb</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> Login : System.Web.UI.Page</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"built_in\">string</span> strPublicKeyExponent = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"built_in\">string</span> strPublicKeyModulus = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"built_in\">string</span> LoginResult = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"built_in\">string</span> postbackUserName = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            LoginResult = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            RSACryptoServiceProvider rsa = <span class=\"keyword\">new</span> RSACryptoServiceProvider();</div><div class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.Compare(Request.RequestType, <span class=\"string\">\"get\"</span>, <span class=\"literal\">true</span>) == <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//将私钥存Session中</span></div><div class=\"line\">                Session[<span class=\"string\">\"private_key\"</span>] = rsa.ToXmlString(<span class=\"literal\">true</span>);</div><div class=\"line\">                CYQ.Data.Log.WriteLogToTxt(Convert.ToString(Session[<span class=\"string\">\"private_key\"</span>]), CYQ.Data.LogType.Debug);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">bool</span> bLoginSucceed = <span class=\"literal\">false</span>;</div><div class=\"line\">                <span class=\"keyword\">try</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> strUserName = Request.Form[<span class=\"string\">\"txtUserName\"</span>];</div><div class=\"line\">                    postbackUserName = strUserName;</div><div class=\"line\">                    <span class=\"built_in\">string</span> strPwdToDecrypt = Request.Form[<span class=\"string\">\"encrypted_pwd\"</span>];</div><div class=\"line\">                    rsa.FromXmlString((<span class=\"built_in\">string</span>)Session[<span class=\"string\">\"private_key\"</span>]);</div><div class=\"line\"></div><div class=\"line\">                    byte[] result = rsa.Decrypt(HexStringToBytes(strPwdToDecrypt), <span class=\"literal\">false</span>);</div><div class=\"line\">                    System.Text.ASCIIEncoding enc = <span class=\"keyword\">new</span> ASCIIEncoding();</div><div class=\"line\">                    <span class=\"built_in\">string</span> strPwdMD5 = enc.GetString(result);</div><div class=\"line\">                    <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.Compare(strUserName, <span class=\"string\">\"admin\"</span>, <span class=\"literal\">true</span>) == <span class=\"number\">0</span> &amp;&amp; <span class=\"built_in\">string</span>.Compare(strPwdMD5, <span class=\"string\">\"admin\"</span>, <span class=\"literal\">true</span>) == <span class=\"number\">0</span>)<span class=\"comment\">//14e1b600b1fd579f47433b88e8d85291</span></div><div class=\"line\">                        bLoginSucceed = <span class=\"literal\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">catch</span> (Exception)</div><div class=\"line\">                &#123;</div><div class=\"line\"></div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">if</span> (bLoginSucceed)</div><div class=\"line\">                    LoginResult = <span class=\"string\">\"登录成功\"</span>;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                    LoginResult = <span class=\"string\">\"登录失败\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//把公钥适当转换，准备发往客户端</span></div><div class=\"line\">            RSAParameters parameter = rsa.ExportParameters(<span class=\"literal\">true</span>);</div><div class=\"line\">            strPublicKeyExponent = BytesToHexString(parameter.Exponent);</div><div class=\"line\">            strPublicKeyModulus = BytesToHexString(parameter.Modulus);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"built_in\">string</span> <span class=\"title\">BytesToHexString</span><span class=\"params\">(byte[] input)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            StringBuilder hexString = <span class=\"keyword\">new</span> StringBuilder(<span class=\"number\">64</span>);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; input.Length; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                hexString.Append(String.Format(<span class=\"string\">\"&#123;0:X2&#125;\"</span>, input[i]));</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> hexString.ToString();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> byte[] HexStringToBytes(<span class=\"built_in\">string</span> hex)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (hex.Length == <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> byte[] &#123; <span class=\"number\">0</span> &#125;;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (hex.Length % <span class=\"number\">2</span> == <span class=\"number\">1</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                hex = <span class=\"string\">\"0\"</span> + hex;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            byte[] result = <span class=\"keyword\">new</span> byte[hex.Length / <span class=\"number\">2</span>];</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; hex.Length / <span class=\"number\">2</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                result[i] = byte.Parse(hex.Substring(<span class=\"number\">2</span> * i, <span class=\"number\">2</span>), System.Globalization.NumberStyles.AllowHexSpecifier);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"版本二\"><a href=\"#版本二\" class=\"headerlink\" title=\"版本二\"></a>版本二</h3><blockquote>\n<p>版本二： 未能解决问题：在使用过程中偶尔会出现无法解密的异常，<br>用户<br>a8176a4c-5b7e-4f1d-94d8-04e744332f76<br>进行分数<br>/H544nYvvBRPZQAIQfDGHMySy/svCbS8/uUwwv5Fc6hKlTed9XvwuEYeAKv22cdPXDV%2B6/<br>tmduEuVJDCP7G8Jb2TxJdN9A%2Bwou%2BGnOTO7%2BTo6yA2KX4Uvriof5yCt1ONmkLbsPRVh0/cnjnogJwLk2U/FVggjIhcOP6Rq%2BzLOw==<br>的提交操作,发生异常不正确的数据。<br>本地直接使用测试demo可以解密，所以无法找到出问题的原因。！！！！</p>\n</blockquote>\n<p>2、网页版本webform</p>\n<h4 id=\"前台网页\"><a href=\"#前台网页\" class=\"headerlink\" title=\"前台网页\"></a>前台网页</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">Page</span> <span class=\"attr\">Language</span>=<span class=\"string\">\"C#\"</span> <span class=\"attr\">AutoEventWireup</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">CodeBehind</span>=<span class=\"string\">\"login.aspx.cs\"</span> <span class=\"attr\">Inherits</span>=<span class=\"string\">\"RSADemo.login\"</span> %&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">xmlns</span>=<span class=\"string\">\"http://www.w3.org/1999/xhtml\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/jquery.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://passport.cnblogs.com/scripts/jsencrypt.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"https://unpkg.com/node-forge@0.7.0/dist/forge.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">        $(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">             <span class=\"comment\">//pem公钥</span></div><div class=\"line\">            <span class=\"keyword\">var</span> pemPublicKey = <span class=\"string\">\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHCkaSCVy6sHB/5rAKS/1EEtyzWuy30gLyrpNbFI3GtpsdFGdsqQ/uwiscGD+pZ7Mxj1ZumPs4jHvPpcAeCb8gKsqP/f5+pputTMuTkhTQqlDT1plHR7w3REQI8MaJ8KTA/pJiPo6iWToFynQeJNWjicxXxNURSZQ7nmC2rl4uPQIDAQAB\"</span>;</div><div class=\"line\">            $(<span class=\"string\">\"#tra\"</span>).val(pemPublicKey);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">var</span> encrypt = <span class=\"keyword\">new</span> JSEncrypt();</div><div class=\"line\">            encrypt.setPublicKey($(<span class=\"string\">\"#tra\"</span>).val());</div><div class=\"line\">            <span class=\"keyword\">var</span> data = encrypt.encrypt(<span class=\"string\">\"123456789\"</span>);</div><div class=\"line\">            alert(data);</div><div class=\"line\">            $(<span class=\"string\">\"#btn\"</span>).click(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">                $.ajax(&#123;</div><div class=\"line\">                    <span class=\"attr\">url</span>: <span class=\"string\">'Handler1.ashx'</span>,</div><div class=\"line\">                    <span class=\"attr\">data</span>: <span class=\"string\">\"pwd=\"</span> +<span class=\"built_in\">encodeURI</span>(data).replace(<span class=\"regexp\">/\\+/g</span>, <span class=\"string\">'%2B'</span>),  <span class=\"comment\">//+号的处理：因为数据在网络上传输时，非字母数字字符都将被替换成百分号（%）后跟两位十六进制数，而base64编码在传输到后端的时候，+会变成空格，因此先替换掉。后端再替换回来</span></div><div class=\"line\">                    type: <span class=\"string\">'post'</span>,</div><div class=\"line\">                    <span class=\"attr\">success</span>: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">msg</span>) </span>&#123;</div><div class=\"line\">                        alert(msg);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;);</div><div class=\"line\"></div><div class=\"line\">        &#125;);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">id</span>=<span class=\"string\">\"form1\"</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"button\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"btn\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"点我\"</span> /&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">id</span>=<span class=\"string\">\"tra\"</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"15\"</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"65\"</span>&gt;</span></div><div class=\"line\">                </div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">hr</span> /&gt;</span></div><div class=\"line\">            注意+好的处理</div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h4 id=\"后台ashx一般处理程序\"><a href=\"#后台ashx一般处理程序\" class=\"headerlink\" title=\"后台ashx一般处理程序\"></a>后台ashx一般处理程序</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Security.Cryptography;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> RSADemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// Summary description for Handler1</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Handler1 : IHttpHandler</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">ProcessRequest</span><span class=\"params\">(HttpContext context)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"comment\">//XML密钥</span></div><div class=\"line\">            <span class=\"built_in\">string</span> privateKey = @<span class=\"string\">\"&lt;RSAKeyValue&gt;&lt;Modulus&gt;xwpGkglcurBwf+awCkv9RBLcs1rst9IC8q6TWxSNxrabHRRnbKkP7sIrHBg/qWezMY9Wbpj7OIx7z6XAHgm/ICrKj/3+fqabrUzLk5IU0KpQ09aZR0e8N0RECPDGifCkwP6SYj6Oolk6Bcp0HiTVo4nMV8TVEUmUO55gtq5eLj0=&lt;/Modulus&gt;&lt;Exponent&gt;AQAB&lt;/Exponent&gt;&lt;P&gt;/LnrFrusoNklOl6d0zSWZ1aCdQC2l3XXU8SSgYNLuSmgVwl7wQ2w0Jn9SQqyiVRmbcp1SX28/bH6TaA2v9ejHQ==&lt;/P&gt;&lt;Q&gt;yZ5TTtLOfTqrikYjy/fyktTk977y2GG2R9sgNPHtnH5EIIC9CoJETDwfSu40YUlHeUUXHQ1nG1WmWbEOC76toQ==&lt;/Q&gt;&lt;DP&gt;5UfC+YfgkLkQJklqxA+EmFIK3x17iiO16+B9zhQQ4fba6bvH05iZHldmTBrxaNfyaY7xI3B4wmzymfRNV3TKHQ==&lt;/DP&gt;&lt;DQ&gt;k7EvRaaXLJU14+zNfDT9tSHPOMzgCDJL3Qdf6GjwrpqwPT8RPAmBDndcVP95z2pmuScrb1TKGvP7D+jraR8dAQ==&lt;/DQ&gt;&lt;InverseQ&gt;4gbDpW7ca3dn0XXPkYsVmIl7SBqU8lq9X2xji/Nyg1M0pjDcpdQm0bqOm+/5usQl+kRotpIoK+Yf6J++zbmNjg==&lt;/InverseQ&gt;&lt;D&gt;Ccxfc356/mTDsQQv+93ISsLb8wdhml4AD6bY8bWmEhd4tNqFieObuW79FM27ypDkkSbDhD/LNDo0OSFpfwEPU8VxnEMzFnVw7MIWGSVKWocZHIhsclkHtHNtHaKS0LNEie2q0PGMiIYty/QG5k3bJeA8R42teXv3nARYEgzuNmE=&lt;/D&gt;&lt;/RSAKeyValue&gt;\"</span>;</div><div class=\"line\"></div><div class=\"line\">       </div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> pwd = context.Request[<span class=\"string\">\"pwd\"</span>];</div><div class=\"line\"></div><div class=\"line\">                RSACryptoServiceProvider rsa = <span class=\"keyword\">new</span> RSACryptoServiceProvider();</div><div class=\"line\">                byte[] cipherbytes;</div><div class=\"line\">                rsa.FromXmlString(privateKey);</div><div class=\"line\">                <span class=\"comment\">//把+号，再替换回来</span></div><div class=\"line\">                cipherbytes = rsa.Decrypt(Convert.FromBase64String(pwd.Replace(<span class=\"string\">\"%2B\"</span>, <span class=\"string\">\"+\"</span>)), <span class=\"literal\">false</span>);</div><div class=\"line\"></div><div class=\"line\">                result = Encoding.UTF8.GetString(cipherbytes);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception exception)</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">         </div><div class=\"line\"></div><div class=\"line\">            context.Response.Write(result);</div><div class=\"line\">        &#125;</div><div class=\"line\">     </div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">bool</span> IsReusable</div><div class=\"line\">        &#123;</div><div class=\"line\">            get</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"ZIP压缩.Net与Android相互解压","date":"2016-09-28T13:13:14.000Z","_content":"\n使用.NET搭建webservice，使用JAVA在Android端接受\n\n.Net与JAVA互相通过ZIP压缩协议进行压缩和解压字符串，减少传输字节量，加快传输速度\n增加用户友好。\n<!--more-->\nAndroid\n```JAVA\npackage com.example.administrator.myapplication;\n\nimport android.util.Base64;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.nio.ByteBuffer;\nimport java.util.zip.GZIPInputStream;\nimport java.util.zip.GZIPOutputStream;\n\n/**\n * Created by Administrator on 2016/9/15.\n */\npublic class GZIP {\n    public static byte[] compress(String string) throws IOException {\n        ByteArrayOutputStream os = new ByteArrayOutputStream(string.length());\n        GZIPOutputStream gos = new GZIPOutputStream(os);\n        gos.write(string.getBytes());\n        gos.close();\n        byte[] compressed = os.toByteArray();\n        os.close();\n        return compressed;\n    }\n\n    public static String decompress(byte[] compressed) throws IOException {\n        final int BUFFER_SIZE = 32;\n        ByteArrayInputStream is = new ByteArrayInputStream(compressed);\n        GZIPInputStream gis = new GZIPInputStream(is, BUFFER_SIZE);\n        StringBuilder string = new StringBuilder();\n        byte[] data = new byte[BUFFER_SIZE];\n        int bytesRead;\n        while ((bytesRead = gis.read(data)) != -1) {\n            string.append(new String(data, 0, bytesRead));\n        }\n        gis.close();\n        is.close();\n        return string.toString();\n    }\n\n    public static String compress1(String str) throws IOException {\n        byte[] data=str.getBytes(\"UTF-8\");\n        byte[] blockcopy = ByteBuffer\n                .allocate(4)\n                .order(java.nio.ByteOrder.LITTLE_ENDIAN)\n                .putInt(data.length)\n                .array();\n        ByteArrayOutputStream os = new ByteArrayOutputStream(data.length);\n//        os.write(new byte[]{0x05, 0, 0, 0},0,4);\n        GZIPOutputStream gos = new GZIPOutputStream(os);\n        gos.write(data);\n        gos.close();\n        os.close();\n        byte[] compressed = new byte[4 + os.toByteArray().length];\n        System.arraycopy(blockcopy, 0, compressed, 0, 4);\n        System.arraycopy(os.toByteArray(), 0, compressed, 4,\n                os.toByteArray().length);\n        byte[] result1= Base64.encode(compressed,Base64.DEFAULT);\n        return new String (result1);\n    }\n\n    public static String decompress1(String zipText) throws IOException {\n        byte[] compressed = Base64.decode(zipText,Base64.DEFAULT);\n        if (compressed.length > 4)\n        {\n            GZIPInputStream gzipInputStream = new GZIPInputStream(\n                    new ByteArrayInputStream(compressed, 4,\n                            compressed.length - 4));\n\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n            for (int value = 0; value != -1;) {\n                value = gzipInputStream.read();\n                if (value != -1) {\n                    baos.write(value);\n                }\n            }\n            gzipInputStream.close();\n            baos.close();\n            String sReturn = new String(baos.toByteArray(), \"UTF-8\");\n            return sReturn;\n        }\n        else\n        {\n            return \"\";\n        }\n    }\n}\n\n```\n\n.Net \n```C\nusing System;\nusing System.IO;\nusing System.IO.Compression;\nusing System.Text;\n\n\nnamespace GZIPService\n{\n    public class ZipHelper\n    {\n        public static string compress(string text)\n        {\n            byte[] buffer = Encoding.UTF8.GetBytes(text);\n            MemoryStream ms = new MemoryStream();\n            using (GZipStream zip = new GZipStream(ms, CompressionMode.Compress, true))\n            {\n                zip.Write(buffer, 0, buffer.Length);\n            }\n\n            ms.Position = 0;\n            MemoryStream outStream = new MemoryStream();\n\n            byte[] compressed = new byte[ms.Length];\n            ms.Read(compressed, 0, compressed.Length);\n\n            byte[] gzBuffer = new byte[compressed.Length + 4];\n            System.Buffer.BlockCopy(compressed, 0, gzBuffer, 4, compressed.Length);\n            System.Buffer.BlockCopy(BitConverter.GetBytes(buffer.Length), 0, gzBuffer, 0, 4);\n            return Convert.ToBase64String(gzBuffer);\n        }\n\n        public static string decompress(string compressedText)\n        {\n            byte[] gzBuffer = Convert.FromBase64String(compressedText);\n            using (MemoryStream ms = new MemoryStream())\n            {\n                int msgLength = BitConverter.ToInt32(gzBuffer, 0);\n                ms.Write(gzBuffer, 4, gzBuffer.Length - 4);\n\n                byte[] buffer = new byte[msgLength];\n\n                ms.Position = 0;\n                using (GZipStream zip = new GZipStream(ms, CompressionMode.Decompress))\n                {\n                    zip.Read(buffer, 0, buffer.Length);\n                }\n\n                return Encoding.UTF8.GetString(buffer);\n            }\n        }\n    }\n}\n\n```","source":"_posts/ZIP压缩-Net与Android相互解压.md","raw":"---\ntitle: ZIP压缩.Net与Android相互解压\ndate: 2016-09-28 21:13:14\ncategories:\n- C#基础\ntags:\n---\n\n使用.NET搭建webservice，使用JAVA在Android端接受\n\n.Net与JAVA互相通过ZIP压缩协议进行压缩和解压字符串，减少传输字节量，加快传输速度\n增加用户友好。\n<!--more-->\nAndroid\n```JAVA\npackage com.example.administrator.myapplication;\n\nimport android.util.Base64;\n\nimport java.io.ByteArrayInputStream;\nimport java.io.ByteArrayOutputStream;\nimport java.io.IOException;\nimport java.nio.ByteBuffer;\nimport java.util.zip.GZIPInputStream;\nimport java.util.zip.GZIPOutputStream;\n\n/**\n * Created by Administrator on 2016/9/15.\n */\npublic class GZIP {\n    public static byte[] compress(String string) throws IOException {\n        ByteArrayOutputStream os = new ByteArrayOutputStream(string.length());\n        GZIPOutputStream gos = new GZIPOutputStream(os);\n        gos.write(string.getBytes());\n        gos.close();\n        byte[] compressed = os.toByteArray();\n        os.close();\n        return compressed;\n    }\n\n    public static String decompress(byte[] compressed) throws IOException {\n        final int BUFFER_SIZE = 32;\n        ByteArrayInputStream is = new ByteArrayInputStream(compressed);\n        GZIPInputStream gis = new GZIPInputStream(is, BUFFER_SIZE);\n        StringBuilder string = new StringBuilder();\n        byte[] data = new byte[BUFFER_SIZE];\n        int bytesRead;\n        while ((bytesRead = gis.read(data)) != -1) {\n            string.append(new String(data, 0, bytesRead));\n        }\n        gis.close();\n        is.close();\n        return string.toString();\n    }\n\n    public static String compress1(String str) throws IOException {\n        byte[] data=str.getBytes(\"UTF-8\");\n        byte[] blockcopy = ByteBuffer\n                .allocate(4)\n                .order(java.nio.ByteOrder.LITTLE_ENDIAN)\n                .putInt(data.length)\n                .array();\n        ByteArrayOutputStream os = new ByteArrayOutputStream(data.length);\n//        os.write(new byte[]{0x05, 0, 0, 0},0,4);\n        GZIPOutputStream gos = new GZIPOutputStream(os);\n        gos.write(data);\n        gos.close();\n        os.close();\n        byte[] compressed = new byte[4 + os.toByteArray().length];\n        System.arraycopy(blockcopy, 0, compressed, 0, 4);\n        System.arraycopy(os.toByteArray(), 0, compressed, 4,\n                os.toByteArray().length);\n        byte[] result1= Base64.encode(compressed,Base64.DEFAULT);\n        return new String (result1);\n    }\n\n    public static String decompress1(String zipText) throws IOException {\n        byte[] compressed = Base64.decode(zipText,Base64.DEFAULT);\n        if (compressed.length > 4)\n        {\n            GZIPInputStream gzipInputStream = new GZIPInputStream(\n                    new ByteArrayInputStream(compressed, 4,\n                            compressed.length - 4));\n\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\n            for (int value = 0; value != -1;) {\n                value = gzipInputStream.read();\n                if (value != -1) {\n                    baos.write(value);\n                }\n            }\n            gzipInputStream.close();\n            baos.close();\n            String sReturn = new String(baos.toByteArray(), \"UTF-8\");\n            return sReturn;\n        }\n        else\n        {\n            return \"\";\n        }\n    }\n}\n\n```\n\n.Net \n```C\nusing System;\nusing System.IO;\nusing System.IO.Compression;\nusing System.Text;\n\n\nnamespace GZIPService\n{\n    public class ZipHelper\n    {\n        public static string compress(string text)\n        {\n            byte[] buffer = Encoding.UTF8.GetBytes(text);\n            MemoryStream ms = new MemoryStream();\n            using (GZipStream zip = new GZipStream(ms, CompressionMode.Compress, true))\n            {\n                zip.Write(buffer, 0, buffer.Length);\n            }\n\n            ms.Position = 0;\n            MemoryStream outStream = new MemoryStream();\n\n            byte[] compressed = new byte[ms.Length];\n            ms.Read(compressed, 0, compressed.Length);\n\n            byte[] gzBuffer = new byte[compressed.Length + 4];\n            System.Buffer.BlockCopy(compressed, 0, gzBuffer, 4, compressed.Length);\n            System.Buffer.BlockCopy(BitConverter.GetBytes(buffer.Length), 0, gzBuffer, 0, 4);\n            return Convert.ToBase64String(gzBuffer);\n        }\n\n        public static string decompress(string compressedText)\n        {\n            byte[] gzBuffer = Convert.FromBase64String(compressedText);\n            using (MemoryStream ms = new MemoryStream())\n            {\n                int msgLength = BitConverter.ToInt32(gzBuffer, 0);\n                ms.Write(gzBuffer, 4, gzBuffer.Length - 4);\n\n                byte[] buffer = new byte[msgLength];\n\n                ms.Position = 0;\n                using (GZipStream zip = new GZipStream(ms, CompressionMode.Decompress))\n                {\n                    zip.Read(buffer, 0, buffer.Length);\n                }\n\n                return Encoding.UTF8.GetString(buffer);\n            }\n        }\n    }\n}\n\n```","slug":"ZIP压缩-Net与Android相互解压","published":1,"updated":"2018-01-11T01:52:41.529Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaaywo0019ocm7l2k8sr90","content":"<p>使用.NET搭建webservice，使用JAVA在Android端接受</p>\n<p>.Net与JAVA互相通过ZIP压缩协议进行压缩和解压字符串，减少传输字节量，加快传输速度<br>增加用户友好。<br><a id=\"more\"></a><br>Android<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.example.administrator.myapplication;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> android.util.Base64;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.nio.ByteBuffer;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.zip.GZIPInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.zip.GZIPOutputStream;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"> * Created by Administrator on 2016/9/15.</div><div class=\"line\"> */</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GZIP</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] compress(String string) <span class=\"keyword\">throws</span> IOException &#123;</div><div class=\"line\">        ByteArrayOutputStream os = <span class=\"keyword\">new</span> ByteArrayOutputStream(string.length());</div><div class=\"line\">        GZIPOutputStream gos = <span class=\"keyword\">new</span> GZIPOutputStream(os);</div><div class=\"line\">        gos.write(string.getBytes());</div><div class=\"line\">        gos.close();</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] compressed = os.toByteArray();</div><div class=\"line\">        os.close();</div><div class=\"line\">        <span class=\"keyword\">return</span> compressed;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decompress</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] compressed)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> BUFFER_SIZE = <span class=\"number\">32</span>;</div><div class=\"line\">        ByteArrayInputStream is = <span class=\"keyword\">new</span> ByteArrayInputStream(compressed);</div><div class=\"line\">        GZIPInputStream gis = <span class=\"keyword\">new</span> GZIPInputStream(is, BUFFER_SIZE);</div><div class=\"line\">        StringBuilder string = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] data = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[BUFFER_SIZE];</div><div class=\"line\">        <span class=\"keyword\">int</span> bytesRead;</div><div class=\"line\">        <span class=\"keyword\">while</span> ((bytesRead = gis.read(data)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">            string.append(<span class=\"keyword\">new</span> String(data, <span class=\"number\">0</span>, bytesRead));</div><div class=\"line\">        &#125;</div><div class=\"line\">        gis.close();</div><div class=\"line\">        is.close();</div><div class=\"line\">        <span class=\"keyword\">return</span> string.toString();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">compress1</span><span class=\"params\">(String str)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] data=str.getBytes(<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] blockcopy = ByteBuffer</div><div class=\"line\">                .allocate(<span class=\"number\">4</span>)</div><div class=\"line\">                .order(java.nio.ByteOrder.LITTLE_ENDIAN)</div><div class=\"line\">                .putInt(data.length)</div><div class=\"line\">                .array();</div><div class=\"line\">        ByteArrayOutputStream os = <span class=\"keyword\">new</span> ByteArrayOutputStream(data.length);</div><div class=\"line\"><span class=\"comment\">//        os.write(new byte[]&#123;0x05, 0, 0, 0&#125;,0,4);</span></div><div class=\"line\">        GZIPOutputStream gos = <span class=\"keyword\">new</span> GZIPOutputStream(os);</div><div class=\"line\">        gos.write(data);</div><div class=\"line\">        gos.close();</div><div class=\"line\">        os.close();</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] compressed = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">4</span> + os.toByteArray().length];</div><div class=\"line\">        System.arraycopy(blockcopy, <span class=\"number\">0</span>, compressed, <span class=\"number\">0</span>, <span class=\"number\">4</span>);</div><div class=\"line\">        System.arraycopy(os.toByteArray(), <span class=\"number\">0</span>, compressed, <span class=\"number\">4</span>,</div><div class=\"line\">                os.toByteArray().length);</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] result1= Base64.encode(compressed,Base64.DEFAULT);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String (result1);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decompress1</span><span class=\"params\">(String zipText)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] compressed = Base64.decode(zipText,Base64.DEFAULT);</div><div class=\"line\">        <span class=\"keyword\">if</span> (compressed.length &gt; <span class=\"number\">4</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            GZIPInputStream gzipInputStream = <span class=\"keyword\">new</span> GZIPInputStream(</div><div class=\"line\">                    <span class=\"keyword\">new</span> ByteArrayInputStream(compressed, <span class=\"number\">4</span>,</div><div class=\"line\">                            compressed.length - <span class=\"number\">4</span>));</div><div class=\"line\"></div><div class=\"line\">            ByteArrayOutputStream baos = <span class=\"keyword\">new</span> ByteArrayOutputStream();</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> value = <span class=\"number\">0</span>; value != -<span class=\"number\">1</span>;) &#123;</div><div class=\"line\">                value = gzipInputStream.read();</div><div class=\"line\">                <span class=\"keyword\">if</span> (value != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                    baos.write(value);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            gzipInputStream.close();</div><div class=\"line\">            baos.close();</div><div class=\"line\">            String sReturn = <span class=\"keyword\">new</span> String(baos.toByteArray(), <span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> sReturn;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>.Net<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO.Compression;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> GZIPService</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ZipHelper</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">compress</span><span class=\"params\">(<span class=\"built_in\">string</span> text)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            byte[] buffer = Encoding.UTF8.GetBytes(text);</div><div class=\"line\">            MemoryStream ms = <span class=\"keyword\">new</span> MemoryStream();</div><div class=\"line\">            <span class=\"keyword\">using</span> (GZipStream zip = <span class=\"keyword\">new</span> GZipStream(ms, CompressionMode.Compress, <span class=\"literal\">true</span>))</div><div class=\"line\">            &#123;</div><div class=\"line\">                zip.Write(buffer, <span class=\"number\">0</span>, buffer.Length);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            ms.Position = <span class=\"number\">0</span>;</div><div class=\"line\">            MemoryStream outStream = <span class=\"keyword\">new</span> MemoryStream();</div><div class=\"line\"></div><div class=\"line\">            byte[] compressed = <span class=\"keyword\">new</span> byte[ms.Length];</div><div class=\"line\">            ms.Read(compressed, <span class=\"number\">0</span>, compressed.Length);</div><div class=\"line\"></div><div class=\"line\">            byte[] gzBuffer = <span class=\"keyword\">new</span> byte[compressed.Length + <span class=\"number\">4</span>];</div><div class=\"line\">            System.Buffer.BlockCopy(compressed, <span class=\"number\">0</span>, gzBuffer, <span class=\"number\">4</span>, compressed.Length);</div><div class=\"line\">            System.Buffer.BlockCopy(BitConverter.GetBytes(buffer.Length), <span class=\"number\">0</span>, gzBuffer, <span class=\"number\">0</span>, <span class=\"number\">4</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> Convert.ToBase64String(gzBuffer);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">decompress</span><span class=\"params\">(<span class=\"built_in\">string</span> compressedText)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            byte[] gzBuffer = Convert.FromBase64String(compressedText);</div><div class=\"line\">            <span class=\"keyword\">using</span> (MemoryStream ms = <span class=\"keyword\">new</span> MemoryStream())</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">int</span> msgLength = BitConverter.ToInt32(gzBuffer, <span class=\"number\">0</span>);</div><div class=\"line\">                ms.Write(gzBuffer, <span class=\"number\">4</span>, gzBuffer.Length - <span class=\"number\">4</span>);</div><div class=\"line\"></div><div class=\"line\">                byte[] buffer = <span class=\"keyword\">new</span> byte[msgLength];</div><div class=\"line\"></div><div class=\"line\">                ms.Position = <span class=\"number\">0</span>;</div><div class=\"line\">                <span class=\"keyword\">using</span> (GZipStream zip = <span class=\"keyword\">new</span> GZipStream(ms, CompressionMode.Decompress))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    zip.Read(buffer, <span class=\"number\">0</span>, buffer.Length);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">return</span> Encoding.UTF8.GetString(buffer);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>使用.NET搭建webservice，使用JAVA在Android端接受</p>\n<p>.Net与JAVA互相通过ZIP压缩协议进行压缩和解压字符串，减少传输字节量，加快传输速度<br>增加用户友好。<br>","more":"<br>Android<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.example.administrator.myapplication;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> android.util.Base64;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayOutputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</div><div class=\"line\"><span class=\"keyword\">import</span> java.nio.ByteBuffer;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.zip.GZIPInputStream;</div><div class=\"line\"><span class=\"keyword\">import</span> java.util.zip.GZIPOutputStream;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</div><div class=\"line\"> * Created by Administrator on 2016/9/15.</div><div class=\"line\"> */</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">GZIP</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] compress(String string) <span class=\"keyword\">throws</span> IOException &#123;</div><div class=\"line\">        ByteArrayOutputStream os = <span class=\"keyword\">new</span> ByteArrayOutputStream(string.length());</div><div class=\"line\">        GZIPOutputStream gos = <span class=\"keyword\">new</span> GZIPOutputStream(os);</div><div class=\"line\">        gos.write(string.getBytes());</div><div class=\"line\">        gos.close();</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] compressed = os.toByteArray();</div><div class=\"line\">        os.close();</div><div class=\"line\">        <span class=\"keyword\">return</span> compressed;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decompress</span><span class=\"params\">(<span class=\"keyword\">byte</span>[] compressed)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> BUFFER_SIZE = <span class=\"number\">32</span>;</div><div class=\"line\">        ByteArrayInputStream is = <span class=\"keyword\">new</span> ByteArrayInputStream(compressed);</div><div class=\"line\">        GZIPInputStream gis = <span class=\"keyword\">new</span> GZIPInputStream(is, BUFFER_SIZE);</div><div class=\"line\">        StringBuilder string = <span class=\"keyword\">new</span> StringBuilder();</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] data = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[BUFFER_SIZE];</div><div class=\"line\">        <span class=\"keyword\">int</span> bytesRead;</div><div class=\"line\">        <span class=\"keyword\">while</span> ((bytesRead = gis.read(data)) != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">            string.append(<span class=\"keyword\">new</span> String(data, <span class=\"number\">0</span>, bytesRead));</div><div class=\"line\">        &#125;</div><div class=\"line\">        gis.close();</div><div class=\"line\">        is.close();</div><div class=\"line\">        <span class=\"keyword\">return</span> string.toString();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">compress1</span><span class=\"params\">(String str)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] data=str.getBytes(<span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] blockcopy = ByteBuffer</div><div class=\"line\">                .allocate(<span class=\"number\">4</span>)</div><div class=\"line\">                .order(java.nio.ByteOrder.LITTLE_ENDIAN)</div><div class=\"line\">                .putInt(data.length)</div><div class=\"line\">                .array();</div><div class=\"line\">        ByteArrayOutputStream os = <span class=\"keyword\">new</span> ByteArrayOutputStream(data.length);</div><div class=\"line\"><span class=\"comment\">//        os.write(new byte[]&#123;0x05, 0, 0, 0&#125;,0,4);</span></div><div class=\"line\">        GZIPOutputStream gos = <span class=\"keyword\">new</span> GZIPOutputStream(os);</div><div class=\"line\">        gos.write(data);</div><div class=\"line\">        gos.close();</div><div class=\"line\">        os.close();</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] compressed = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">4</span> + os.toByteArray().length];</div><div class=\"line\">        System.arraycopy(blockcopy, <span class=\"number\">0</span>, compressed, <span class=\"number\">0</span>, <span class=\"number\">4</span>);</div><div class=\"line\">        System.arraycopy(os.toByteArray(), <span class=\"number\">0</span>, compressed, <span class=\"number\">4</span>,</div><div class=\"line\">                os.toByteArray().length);</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] result1= Base64.encode(compressed,Base64.DEFAULT);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String (result1);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decompress1</span><span class=\"params\">(String zipText)</span> <span class=\"keyword\">throws</span> IOException </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">byte</span>[] compressed = Base64.decode(zipText,Base64.DEFAULT);</div><div class=\"line\">        <span class=\"keyword\">if</span> (compressed.length &gt; <span class=\"number\">4</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            GZIPInputStream gzipInputStream = <span class=\"keyword\">new</span> GZIPInputStream(</div><div class=\"line\">                    <span class=\"keyword\">new</span> ByteArrayInputStream(compressed, <span class=\"number\">4</span>,</div><div class=\"line\">                            compressed.length - <span class=\"number\">4</span>));</div><div class=\"line\"></div><div class=\"line\">            ByteArrayOutputStream baos = <span class=\"keyword\">new</span> ByteArrayOutputStream();</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> value = <span class=\"number\">0</span>; value != -<span class=\"number\">1</span>;) &#123;</div><div class=\"line\">                value = gzipInputStream.read();</div><div class=\"line\">                <span class=\"keyword\">if</span> (value != -<span class=\"number\">1</span>) &#123;</div><div class=\"line\">                    baos.write(value);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            gzipInputStream.close();</div><div class=\"line\">            baos.close();</div><div class=\"line\">            String sReturn = <span class=\"keyword\">new</span> String(baos.toByteArray(), <span class=\"string\">\"UTF-8\"</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> sReturn;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>.Net<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO.Compression;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> GZIPService</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> ZipHelper</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">compress</span><span class=\"params\">(<span class=\"built_in\">string</span> text)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            byte[] buffer = Encoding.UTF8.GetBytes(text);</div><div class=\"line\">            MemoryStream ms = <span class=\"keyword\">new</span> MemoryStream();</div><div class=\"line\">            <span class=\"keyword\">using</span> (GZipStream zip = <span class=\"keyword\">new</span> GZipStream(ms, CompressionMode.Compress, <span class=\"literal\">true</span>))</div><div class=\"line\">            &#123;</div><div class=\"line\">                zip.Write(buffer, <span class=\"number\">0</span>, buffer.Length);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            ms.Position = <span class=\"number\">0</span>;</div><div class=\"line\">            MemoryStream outStream = <span class=\"keyword\">new</span> MemoryStream();</div><div class=\"line\"></div><div class=\"line\">            byte[] compressed = <span class=\"keyword\">new</span> byte[ms.Length];</div><div class=\"line\">            ms.Read(compressed, <span class=\"number\">0</span>, compressed.Length);</div><div class=\"line\"></div><div class=\"line\">            byte[] gzBuffer = <span class=\"keyword\">new</span> byte[compressed.Length + <span class=\"number\">4</span>];</div><div class=\"line\">            System.Buffer.BlockCopy(compressed, <span class=\"number\">0</span>, gzBuffer, <span class=\"number\">4</span>, compressed.Length);</div><div class=\"line\">            System.Buffer.BlockCopy(BitConverter.GetBytes(buffer.Length), <span class=\"number\">0</span>, gzBuffer, <span class=\"number\">0</span>, <span class=\"number\">4</span>);</div><div class=\"line\">            <span class=\"keyword\">return</span> Convert.ToBase64String(gzBuffer);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">decompress</span><span class=\"params\">(<span class=\"built_in\">string</span> compressedText)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            byte[] gzBuffer = Convert.FromBase64String(compressedText);</div><div class=\"line\">            <span class=\"keyword\">using</span> (MemoryStream ms = <span class=\"keyword\">new</span> MemoryStream())</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">int</span> msgLength = BitConverter.ToInt32(gzBuffer, <span class=\"number\">0</span>);</div><div class=\"line\">                ms.Write(gzBuffer, <span class=\"number\">4</span>, gzBuffer.Length - <span class=\"number\">4</span>);</div><div class=\"line\"></div><div class=\"line\">                byte[] buffer = <span class=\"keyword\">new</span> byte[msgLength];</div><div class=\"line\"></div><div class=\"line\">                ms.Position = <span class=\"number\">0</span>;</div><div class=\"line\">                <span class=\"keyword\">using</span> (GZipStream zip = <span class=\"keyword\">new</span> GZipStream(ms, CompressionMode.Decompress))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    zip.Read(buffer, <span class=\"number\">0</span>, buffer.Length);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">return</span> Encoding.UTF8.GetString(buffer);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"ASP MVC 微信公众号通用授权","date":"2018-05-30T06:37:13.000Z","_content":"\n使用ASP MVC的注解方式，简易的将微信公众号内的实现网页自动登录。\n\n<!--more-->\n\n\n问题描述：在微信公众号增加网页菜单，实现用户微信号与系统自动绑定并登录的功能。\n## 实现原理\n\n所谓网站的自动登录，其实就是将用户微信的openid与系统的账号进行绑定，然后进行登录的过程。\n\n### 微信接口介绍\n在公众号下每一个用户都有独一无二的openid，因此可以使用这个唯一标识来进行登录权限的认证。\n要获得用户的openid，需要使用微信提供的接口，即官网名称：[微信网页授权](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140842)\n\n该授权的类型有两种：\n第一种：静默跳转模式（scope的值是snsapi_base）\n优点：可以在用户没有感觉的情况下获得openid\n缺点：用户需要***关注微信公众号***且后续如果需要获得用户的信息需要调用[获取用户基本信息接口](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140839)\n\n第二种：非静默的跳转模式（scope的值是snsapi_userinfo）\n优点：两步合为一步，直接获得用户的信息，***用户可以不关注公众号***\n缺点：用户会弹出页面提示是否需要授权（已关注用户从公众号的会话或者自定义菜单进入本公众号的网页授权页，则是静默授权）\n{% asset_img 20180530161151.jpg 非静默授权 %}\n\n### 实现代码原理\n使用ASP MVC 中的注解模式，将需要授权的登录页Action增加注解实现自动登录。\n\n1.创建授权注解类：将注解类新见到文件夹App_Start下并继承自父类AuthorizeAttribute；\n2.登录Action上增加注解并在内部判断session中的openid是否存在来自动跳转登录页；\n{% asset_img 20180530161842.jpg Action增加注解 %}\n\n## 实现过程 \n### 微信公众号后台需要设置 \n{% asset_img 20180530162310.jpg 1 %}\n{% asset_img 20180530162445.jpg 2 %}\n{% asset_img sethost.png 3 %}\n{% asset_img 20180530162838.jpg 4 %}\n{% asset_img 20180530162916.jpg 5 %}\n{% asset_img 20180530163018.jpg 6 %}\n{% asset_img 20180530163137.jpg 7 %}\n\n完成上面的步骤后，准备工作做完，开始进行编码。\n### 代码实现 \n\n#### 静默方式授权 \n\n注解类\n[代码参考地址](https://www.cnblogs.com/yangkangIT/p/5913524.html)\n```C\nusing Newtonsoft.Json;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\nnamespace Learun.Application.Web\n{\n    /// <summary>\n    /// 微信授权\n    /// </summary>\n    public class WXFilterAttribute : AuthorizeAttribute\n    {\n        protected override bool AuthorizeCore(HttpContextBase httpContext)\n        {\n            httpContext.Session.Remove(\"weixinInfo\");\n\n            string userAgent = httpContext.Request.UserAgent;\n            if (userAgent.IndexOf(\"MicroMessenger\") <= -1)//不是微信浏览器\n            {\n                httpContext.Response.StatusCode = 400001;\n                return false;\n            }\n\n            if (!httpContext.User.Identity.IsAuthenticated)\n            {\n                //ApplicationSignInManager SignInManager = httpContext.GetOwinContext().Get<ApplicationSignInManager>();\n                //ApplicationUserManager UserManager = httpContext.GetOwinContext().GetUserManager<ApplicationUserManager>();\n                string appid = string.Empty;\n                string secret = string.Empty;\n\n                appid =\"**********\";\n                secret = \"##################\";\n\n\n                var code = httpContext.Request[\"Code\"];\n                string returnUrl = HttpUtility.UrlDecode(httpContext.Request[\"ReturnUrl\"] ?? \"/\");\n\n\n                if (string.IsNullOrEmpty(code))\n                {\n                    string host = httpContext.Request.Url.Host;\n                    string path = httpContext.Request.Path;\n                    string redirectUrl = \"http://\" + host + path + \"?ReturnUrl=\" + HttpUtility.UrlEncode(returnUrl);//重定向的url，这里不需要进行编码，在后面会自己编码\n                    try\n                    {\n                        //todo:通过微信获取2.0授权的url\n                        string url = GetAuthorizeUrl(appid, redirectUrl, \"state\", \"snsapi_base\");\n\n                        httpContext.Response.Redirect(url);\n                    }\n                    catch (System.Exception ex)\n                    {\n#if DEBUG\n                        httpContext.Response.Write(\"构造网页授权获取code的URL时出错，错误是：\" + ex.Message);\n                        httpContext.Response.End();\n#endif\n                    }\n                }\n                else\n                {\n                    var client = new System.Net.WebClient();\n                    client.Encoding = System.Text.Encoding.UTF8;\n                    string url = GetAccessTokenUrl(appid, secret, code);\n                    var data = client.DownloadString(url);\n                    var obj = JsonConvert.DeserializeObject<Dictionary<string, string>>(data);\n                    if (obj.ContainsKey(\"errcode\") && obj[\"errcode\"] == \"40163\")\n                    {\n                        //刷新页面,重新进入\n                        httpContext.Response.Redirect(\"/SFJD_WeixinModule/WeiXinLogin/Login\");\n                        return true;\n                    }\n                    string accessToken;\n                    if (!obj.TryGetValue(\"access_token\", out accessToken))\n                    {\n#if DEBUG\n                        httpContext.Response.Write(\"构造网页授权获取access_token的URL时出错\");\n                        httpContext.Response.End();\n#endif\n                    }\n                    var openid = obj[\"openid\"];\n                    httpContext.Session[\"weixinInfo\"] = openid;\n                    //Utils.WidgetCode.ServerInfo.SetCookies(\"WXopenid\", openid, DateTime.MinValue);\n\n                    //var existUser = UserManager.Users.FirstOrDefault(p => p.OpenId == openid);\n                    //if (existUser != null)\n                    //{\n                    //    SignInManager.SignInAsync(existUser, false, false);\n                    //    httpContext.Response.Redirect(returnUrl);\n                    //}\n                }\n            }\n            return true;\n        }\n        public override void OnAuthorization(AuthorizationContext filterContext)\n        {\n\n            base.OnAuthorization(filterContext);\n            if (filterContext.HttpContext.Response.StatusCode == 401)\n            {\n                filterContext.Result = new RedirectResult(\"/SFJD_WeixinModule/WeiXinLogin/Error?errorMsg=微信授权登录异常\");\n\n            }\n            else if (filterContext.HttpContext.Response.StatusCode == 400001)\n            {\n                filterContext.Result = new RedirectResult(\"/SFJD_WeixinModule/WeiXinLogin/Error?errorMsg=请在微信中打开该页面\");\n            }\n\n        }\n\n        //扩展\n        public string GetAuthorizeUrl(string appId, string redirectUrl, string state, string scope, string responseType = \"code\")\n        {\n            if (!string.IsNullOrEmpty(redirectUrl))\n            {\n                redirectUrl = HttpUtility.UrlEncode(redirectUrl, System.Text.Encoding.UTF8);\n            }\n            else\n            {\n                redirectUrl = null;\n            }\n            object[] args = new object[] { appId, redirectUrl, responseType, scope, state };\n            return string.Format(\"https://open.weixin.qq.com/connect/oauth2/authorize?appid={0}&redirect_uri={1}&response_type={2}&scope={3}&state={4}#wechat_redirect\", args);\n        }\n        public string GetAccessTokenUrl(string appId, string secret, string code, string grantType = \"authorization_code\")\n        {\n            object[] args = new object[] { appId, secret, code, grantType };\n            string requestUri = string.Format(\"https://api.weixin.qq.com/sns/oauth2/access_token?appid={0}&secret={1}&code={2}&grant_type={3}\", args);\n            //return GetAccessTokenInfo(_httpClient.GetAsync(requestUri).Result.Content.ReadAsStringAsync().Result);\n            return requestUri;\n        }\n    }\n}\n\n```\n登录控制器\n\n```C\n   public class WeiXinLoginController : MvcWXControllerBase\n    {\n        // GET: SFJD_WeixinModule/WeiXinLogin\n\n        #region 视图\n\n        /// <summary>\n        /// 登录\n        /// </summary>\n        /// <returns></returns>\n        [WXFilter]\n        public ActionResult Index()\n        {\n            string openID = GetOpenID();\n\n            if (!string.IsNullOrEmpty(openID))\n            {\n                using (MAction action = new MAction(TableNames.SFJD_Client))\n                {\n                    if (action.Fill(string.Format(\"OpenID='{0}'\", openID)))\n                    {\n                        //TODO:设置用户信息\n                        //跳转首页\n                        return RedirectToAction(\"Index\", \"WeiXinMain\");\n                    }\n                }\n            }\n            //第一次登录去注册界面\n            return View();\n        }\n\n        /// <summary>\n        /// 获得当前OpenID\n        /// </summary>\n        /// <returns></returns>\n        public string GetOpenID()\n        {\n            if (Session[\"weixinInfo\"] == null)\n            {\n                return \"\";\n            }\n            else\n            {\n                return Convert.ToString(Session[\"weixinInfo\"]);\n            }\n        }\n    }\n```\n\n## 后续 ##\n\n之前遇到了一个问题，在本地测试公众号下没有发现系统有什么异常，\n发布到远程服务器及正式公众号下时，跳出异常信息“输入字符串的格式不正确。”，\n找了半天认为应该是哪里转字符串的地方出问题了，可是一开始没找到。\n最后使用日志输出的方式将问题定位到了获得用户基本信息后，放置token过期时间上。\n```\n异常信息{\"errcode\":40164,\"errmsg\":\"invalid ip 111.111.112.117, not in whitelist hint: [yYexhA05332994]\"}\n```\n发现公众号未设置白名单导致。\n\n在IP白名单内的IP来源，获取access_token接口才可调用成功。\n\n设置完成后，问题解决。\n\n获得微信用户信息的工具类\n```c\nusing CYQ.Data.Cache;\nusing CYQ.Data.Tool;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Util.WeiXin\n{\n    /// <summary>\n    /// 微信公众号工具类\n    /// </summary>\n    public class WeiXinTool\n    {\n        /// <summary>\n        /// 获得已关注公众号用户信息\n        /// </summary>\n        /// <param name=\"openid\"></param>\n        /// <param name=\"appID\"></param>\n        /// <param name=\"appSecret\"></param>\n        /// <returns></returns>\n        public static string GetVisiterInfo(string openid)\n        {\n            string appID = \"#########\";\n            string appSecret = \"******************\";\n\n            string access_token = GetAccess_token(appID, appSecret);\n            string requestURL = \"https://api.weixin.qq.com/cgi-bin/user/info?access_token={0}&openid={1}&lang=zh_CN \";\n            string strJson = HttpRequestUtil.RequestUrl(string.Format(requestURL,\n                 access_token, openid));\n            return strJson;\n        }\n        /// <summary>\n        /// 获得基础接口的access_token\n        /// </summary>\n        /// <param name=\"appID\"></param>\n        /// <param name=\"appSecret\"></param>\n        /// <returns></returns>\n        public static string GetAccess_token(string appID, string appSecret)\n        {\n            string access_token = \"\";\n            CacheManage cache = CacheManage.Instance;\n            if (cache.Contains(\"access_token\" + appID))\n            {\n                access_token = cache.Get(\"access_token\" + appID) as string;\n            }\n            else\n            {\n                string strJson = \"\";\n                string requestURL = \"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={0}&secret={1}\";\n                strJson = HttpRequestUtil.RequestUrl(string.Format(requestURL,\n                  appID, appSecret));\n              \n                access_token = JsonHelper.GetValue(strJson, \"access_token\");\n                double cacheMinutes = (double)(Convert.ToInt32(JsonHelper.GetValue(strJson, \"expires_in\")) / 60);//将秒转换为分钟\n                cache.Set(\"access_token\" + appID, access_token, cacheMinutes);\n            }\n            return access_token;\n        }\n    }\n\n\n}\n\n\n```\n\n","source":"_posts/aspmvc通用授权.md","raw":"---\ntitle: ASP MVC 微信公众号通用授权\ndate: 2018-05-30 14:37:13\ntags:\n- ASP.MVC\ncategories:\n- 微信公众号\n---\n\n使用ASP MVC的注解方式，简易的将微信公众号内的实现网页自动登录。\n\n<!--more-->\n\n\n问题描述：在微信公众号增加网页菜单，实现用户微信号与系统自动绑定并登录的功能。\n## 实现原理\n\n所谓网站的自动登录，其实就是将用户微信的openid与系统的账号进行绑定，然后进行登录的过程。\n\n### 微信接口介绍\n在公众号下每一个用户都有独一无二的openid，因此可以使用这个唯一标识来进行登录权限的认证。\n要获得用户的openid，需要使用微信提供的接口，即官网名称：[微信网页授权](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140842)\n\n该授权的类型有两种：\n第一种：静默跳转模式（scope的值是snsapi_base）\n优点：可以在用户没有感觉的情况下获得openid\n缺点：用户需要***关注微信公众号***且后续如果需要获得用户的信息需要调用[获取用户基本信息接口](https://mp.weixin.qq.com/wiki?t=resource/res_main&id=mp1421140839)\n\n第二种：非静默的跳转模式（scope的值是snsapi_userinfo）\n优点：两步合为一步，直接获得用户的信息，***用户可以不关注公众号***\n缺点：用户会弹出页面提示是否需要授权（已关注用户从公众号的会话或者自定义菜单进入本公众号的网页授权页，则是静默授权）\n{% asset_img 20180530161151.jpg 非静默授权 %}\n\n### 实现代码原理\n使用ASP MVC 中的注解模式，将需要授权的登录页Action增加注解实现自动登录。\n\n1.创建授权注解类：将注解类新见到文件夹App_Start下并继承自父类AuthorizeAttribute；\n2.登录Action上增加注解并在内部判断session中的openid是否存在来自动跳转登录页；\n{% asset_img 20180530161842.jpg Action增加注解 %}\n\n## 实现过程 \n### 微信公众号后台需要设置 \n{% asset_img 20180530162310.jpg 1 %}\n{% asset_img 20180530162445.jpg 2 %}\n{% asset_img sethost.png 3 %}\n{% asset_img 20180530162838.jpg 4 %}\n{% asset_img 20180530162916.jpg 5 %}\n{% asset_img 20180530163018.jpg 6 %}\n{% asset_img 20180530163137.jpg 7 %}\n\n完成上面的步骤后，准备工作做完，开始进行编码。\n### 代码实现 \n\n#### 静默方式授权 \n\n注解类\n[代码参考地址](https://www.cnblogs.com/yangkangIT/p/5913524.html)\n```C\nusing Newtonsoft.Json;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\nusing System.Web.Mvc;\nnamespace Learun.Application.Web\n{\n    /// <summary>\n    /// 微信授权\n    /// </summary>\n    public class WXFilterAttribute : AuthorizeAttribute\n    {\n        protected override bool AuthorizeCore(HttpContextBase httpContext)\n        {\n            httpContext.Session.Remove(\"weixinInfo\");\n\n            string userAgent = httpContext.Request.UserAgent;\n            if (userAgent.IndexOf(\"MicroMessenger\") <= -1)//不是微信浏览器\n            {\n                httpContext.Response.StatusCode = 400001;\n                return false;\n            }\n\n            if (!httpContext.User.Identity.IsAuthenticated)\n            {\n                //ApplicationSignInManager SignInManager = httpContext.GetOwinContext().Get<ApplicationSignInManager>();\n                //ApplicationUserManager UserManager = httpContext.GetOwinContext().GetUserManager<ApplicationUserManager>();\n                string appid = string.Empty;\n                string secret = string.Empty;\n\n                appid =\"**********\";\n                secret = \"##################\";\n\n\n                var code = httpContext.Request[\"Code\"];\n                string returnUrl = HttpUtility.UrlDecode(httpContext.Request[\"ReturnUrl\"] ?? \"/\");\n\n\n                if (string.IsNullOrEmpty(code))\n                {\n                    string host = httpContext.Request.Url.Host;\n                    string path = httpContext.Request.Path;\n                    string redirectUrl = \"http://\" + host + path + \"?ReturnUrl=\" + HttpUtility.UrlEncode(returnUrl);//重定向的url，这里不需要进行编码，在后面会自己编码\n                    try\n                    {\n                        //todo:通过微信获取2.0授权的url\n                        string url = GetAuthorizeUrl(appid, redirectUrl, \"state\", \"snsapi_base\");\n\n                        httpContext.Response.Redirect(url);\n                    }\n                    catch (System.Exception ex)\n                    {\n#if DEBUG\n                        httpContext.Response.Write(\"构造网页授权获取code的URL时出错，错误是：\" + ex.Message);\n                        httpContext.Response.End();\n#endif\n                    }\n                }\n                else\n                {\n                    var client = new System.Net.WebClient();\n                    client.Encoding = System.Text.Encoding.UTF8;\n                    string url = GetAccessTokenUrl(appid, secret, code);\n                    var data = client.DownloadString(url);\n                    var obj = JsonConvert.DeserializeObject<Dictionary<string, string>>(data);\n                    if (obj.ContainsKey(\"errcode\") && obj[\"errcode\"] == \"40163\")\n                    {\n                        //刷新页面,重新进入\n                        httpContext.Response.Redirect(\"/SFJD_WeixinModule/WeiXinLogin/Login\");\n                        return true;\n                    }\n                    string accessToken;\n                    if (!obj.TryGetValue(\"access_token\", out accessToken))\n                    {\n#if DEBUG\n                        httpContext.Response.Write(\"构造网页授权获取access_token的URL时出错\");\n                        httpContext.Response.End();\n#endif\n                    }\n                    var openid = obj[\"openid\"];\n                    httpContext.Session[\"weixinInfo\"] = openid;\n                    //Utils.WidgetCode.ServerInfo.SetCookies(\"WXopenid\", openid, DateTime.MinValue);\n\n                    //var existUser = UserManager.Users.FirstOrDefault(p => p.OpenId == openid);\n                    //if (existUser != null)\n                    //{\n                    //    SignInManager.SignInAsync(existUser, false, false);\n                    //    httpContext.Response.Redirect(returnUrl);\n                    //}\n                }\n            }\n            return true;\n        }\n        public override void OnAuthorization(AuthorizationContext filterContext)\n        {\n\n            base.OnAuthorization(filterContext);\n            if (filterContext.HttpContext.Response.StatusCode == 401)\n            {\n                filterContext.Result = new RedirectResult(\"/SFJD_WeixinModule/WeiXinLogin/Error?errorMsg=微信授权登录异常\");\n\n            }\n            else if (filterContext.HttpContext.Response.StatusCode == 400001)\n            {\n                filterContext.Result = new RedirectResult(\"/SFJD_WeixinModule/WeiXinLogin/Error?errorMsg=请在微信中打开该页面\");\n            }\n\n        }\n\n        //扩展\n        public string GetAuthorizeUrl(string appId, string redirectUrl, string state, string scope, string responseType = \"code\")\n        {\n            if (!string.IsNullOrEmpty(redirectUrl))\n            {\n                redirectUrl = HttpUtility.UrlEncode(redirectUrl, System.Text.Encoding.UTF8);\n            }\n            else\n            {\n                redirectUrl = null;\n            }\n            object[] args = new object[] { appId, redirectUrl, responseType, scope, state };\n            return string.Format(\"https://open.weixin.qq.com/connect/oauth2/authorize?appid={0}&redirect_uri={1}&response_type={2}&scope={3}&state={4}#wechat_redirect\", args);\n        }\n        public string GetAccessTokenUrl(string appId, string secret, string code, string grantType = \"authorization_code\")\n        {\n            object[] args = new object[] { appId, secret, code, grantType };\n            string requestUri = string.Format(\"https://api.weixin.qq.com/sns/oauth2/access_token?appid={0}&secret={1}&code={2}&grant_type={3}\", args);\n            //return GetAccessTokenInfo(_httpClient.GetAsync(requestUri).Result.Content.ReadAsStringAsync().Result);\n            return requestUri;\n        }\n    }\n}\n\n```\n登录控制器\n\n```C\n   public class WeiXinLoginController : MvcWXControllerBase\n    {\n        // GET: SFJD_WeixinModule/WeiXinLogin\n\n        #region 视图\n\n        /// <summary>\n        /// 登录\n        /// </summary>\n        /// <returns></returns>\n        [WXFilter]\n        public ActionResult Index()\n        {\n            string openID = GetOpenID();\n\n            if (!string.IsNullOrEmpty(openID))\n            {\n                using (MAction action = new MAction(TableNames.SFJD_Client))\n                {\n                    if (action.Fill(string.Format(\"OpenID='{0}'\", openID)))\n                    {\n                        //TODO:设置用户信息\n                        //跳转首页\n                        return RedirectToAction(\"Index\", \"WeiXinMain\");\n                    }\n                }\n            }\n            //第一次登录去注册界面\n            return View();\n        }\n\n        /// <summary>\n        /// 获得当前OpenID\n        /// </summary>\n        /// <returns></returns>\n        public string GetOpenID()\n        {\n            if (Session[\"weixinInfo\"] == null)\n            {\n                return \"\";\n            }\n            else\n            {\n                return Convert.ToString(Session[\"weixinInfo\"]);\n            }\n        }\n    }\n```\n\n## 后续 ##\n\n之前遇到了一个问题，在本地测试公众号下没有发现系统有什么异常，\n发布到远程服务器及正式公众号下时，跳出异常信息“输入字符串的格式不正确。”，\n找了半天认为应该是哪里转字符串的地方出问题了，可是一开始没找到。\n最后使用日志输出的方式将问题定位到了获得用户基本信息后，放置token过期时间上。\n```\n异常信息{\"errcode\":40164,\"errmsg\":\"invalid ip 111.111.112.117, not in whitelist hint: [yYexhA05332994]\"}\n```\n发现公众号未设置白名单导致。\n\n在IP白名单内的IP来源，获取access_token接口才可调用成功。\n\n设置完成后，问题解决。\n\n获得微信用户信息的工具类\n```c\nusing CYQ.Data.Cache;\nusing CYQ.Data.Tool;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Util.WeiXin\n{\n    /// <summary>\n    /// 微信公众号工具类\n    /// </summary>\n    public class WeiXinTool\n    {\n        /// <summary>\n        /// 获得已关注公众号用户信息\n        /// </summary>\n        /// <param name=\"openid\"></param>\n        /// <param name=\"appID\"></param>\n        /// <param name=\"appSecret\"></param>\n        /// <returns></returns>\n        public static string GetVisiterInfo(string openid)\n        {\n            string appID = \"#########\";\n            string appSecret = \"******************\";\n\n            string access_token = GetAccess_token(appID, appSecret);\n            string requestURL = \"https://api.weixin.qq.com/cgi-bin/user/info?access_token={0}&openid={1}&lang=zh_CN \";\n            string strJson = HttpRequestUtil.RequestUrl(string.Format(requestURL,\n                 access_token, openid));\n            return strJson;\n        }\n        /// <summary>\n        /// 获得基础接口的access_token\n        /// </summary>\n        /// <param name=\"appID\"></param>\n        /// <param name=\"appSecret\"></param>\n        /// <returns></returns>\n        public static string GetAccess_token(string appID, string appSecret)\n        {\n            string access_token = \"\";\n            CacheManage cache = CacheManage.Instance;\n            if (cache.Contains(\"access_token\" + appID))\n            {\n                access_token = cache.Get(\"access_token\" + appID) as string;\n            }\n            else\n            {\n                string strJson = \"\";\n                string requestURL = \"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={0}&secret={1}\";\n                strJson = HttpRequestUtil.RequestUrl(string.Format(requestURL,\n                  appID, appSecret));\n              \n                access_token = JsonHelper.GetValue(strJson, \"access_token\");\n                double cacheMinutes = (double)(Convert.ToInt32(JsonHelper.GetValue(strJson, \"expires_in\")) / 60);//将秒转换为分钟\n                cache.Set(\"access_token\" + appID, access_token, cacheMinutes);\n            }\n            return access_token;\n        }\n    }\n\n\n}\n\n\n```\n\n","slug":"aspmvc通用授权","published":1,"updated":"2018-06-11T06:59:15.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaaywt001cocm79xzdn8kc","content":"<p>使用ASP MVC的注解方式，简易的将微信公众号内的实现网页自动登录。</p>\n<a id=\"more\"></a>\n<p>问题描述：在微信公众号增加网页菜单，实现用户微信号与系统自动绑定并登录的功能。</p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><p>所谓网站的自动登录，其实就是将用户微信的openid与系统的账号进行绑定，然后进行登录的过程。</p>\n<h3 id=\"微信接口介绍\"><a href=\"#微信接口介绍\" class=\"headerlink\" title=\"微信接口介绍\"></a>微信接口介绍</h3><p>在公众号下每一个用户都有独一无二的openid，因此可以使用这个唯一标识来进行登录权限的认证。<br>要获得用户的openid，需要使用微信提供的接口，即官网名称：<a href=\"https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842\" target=\"_blank\" rel=\"external\">微信网页授权</a></p>\n<p>该授权的类型有两种：<br>第一种：静默跳转模式（scope的值是snsapi_base）<br>优点：可以在用户没有感觉的情况下获得openid<br>缺点：用户需要<strong><em>关注微信公众号</em></strong>且后续如果需要获得用户的信息需要调用<a href=\"https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140839\" target=\"_blank\" rel=\"external\">获取用户基本信息接口</a></p>\n<p>第二种：非静默的跳转模式（scope的值是snsapi_userinfo）<br>优点：两步合为一步，直接获得用户的信息，<strong><em>用户可以不关注公众号</em></strong><br>缺点：用户会弹出页面提示是否需要授权（已关注用户从公众号的会话或者自定义菜单进入本公众号的网页授权页，则是静默授权）<br><img src=\"/2018/05/30/aspmvc通用授权/20180530161151.jpg\" alt=\"非静默授权\" title=\"非静默授权\"></p>\n<h3 id=\"实现代码原理\"><a href=\"#实现代码原理\" class=\"headerlink\" title=\"实现代码原理\"></a>实现代码原理</h3><p>使用ASP MVC 中的注解模式，将需要授权的登录页Action增加注解实现自动登录。</p>\n<p>1.创建授权注解类：将注解类新见到文件夹App_Start下并继承自父类AuthorizeAttribute；<br>2.登录Action上增加注解并在内部判断session中的openid是否存在来自动跳转登录页；<br><img src=\"/2018/05/30/aspmvc通用授权/20180530161842.jpg\" alt=\"Action增加注解\" title=\"Action增加注解\"></p>\n<h2 id=\"实现过程\"><a href=\"#实现过程\" class=\"headerlink\" title=\"实现过程\"></a>实现过程</h2><h3 id=\"微信公众号后台需要设置\"><a href=\"#微信公众号后台需要设置\" class=\"headerlink\" title=\"微信公众号后台需要设置\"></a>微信公众号后台需要设置</h3><img src=\"/2018/05/30/aspmvc通用授权/20180530162310.jpg\" alt=\"1\" title=\"1\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530162445.jpg\" alt=\"2\" title=\"2\">\n<img src=\"/2018/05/30/aspmvc通用授权/sethost.png\" alt=\"3\" title=\"3\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530162838.jpg\" alt=\"4\" title=\"4\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530162916.jpg\" alt=\"5\" title=\"5\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530163018.jpg\" alt=\"6\" title=\"6\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530163137.jpg\" alt=\"7\" title=\"7\">\n<p>完成上面的步骤后，准备工作做完，开始进行编码。</p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><h4 id=\"静默方式授权\"><a href=\"#静默方式授权\" class=\"headerlink\" title=\"静默方式授权\"></a>静默方式授权</h4><p>注解类<br><a href=\"https://www.cnblogs.com/yangkangIT/p/5913524.html\" target=\"_blank\" rel=\"external\">代码参考地址</a><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Mvc;</div><div class=\"line\"><span class=\"keyword\">namespace</span> Learun.Application.Web</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 微信授权</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> WXFilterAttribute : AuthorizeAttribute</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> override <span class=\"keyword\">bool</span> <span class=\"title\">AuthorizeCore</span><span class=\"params\">(HttpContextBase httpContext)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            httpContext.Session.Remove(<span class=\"string\">\"weixinInfo\"</span>);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> userAgent = httpContext.Request.UserAgent;</div><div class=\"line\">            <span class=\"keyword\">if</span> (userAgent.IndexOf(<span class=\"string\">\"MicroMessenger\"</span>) &lt;= <span class=\"number\">-1</span>)<span class=\"comment\">//不是微信浏览器</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                httpContext.Response.StatusCode = <span class=\"number\">400001</span>;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (!httpContext.User.Identity.IsAuthenticated)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//ApplicationSignInManager SignInManager = httpContext.GetOwinContext().Get&lt;ApplicationSignInManager&gt;();</span></div><div class=\"line\">                <span class=\"comment\">//ApplicationUserManager UserManager = httpContext.GetOwinContext().GetUserManager&lt;ApplicationUserManager&gt;();</span></div><div class=\"line\">                <span class=\"built_in\">string</span> appid = <span class=\"built_in\">string</span>.Empty;</div><div class=\"line\">                <span class=\"built_in\">string</span> secret = <span class=\"built_in\">string</span>.Empty;</div><div class=\"line\"></div><div class=\"line\">                appid =<span class=\"string\">\"**********\"</span>;</div><div class=\"line\">                secret = <span class=\"string\">\"##################\"</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">                var code = httpContext.Request[<span class=\"string\">\"Code\"</span>];</div><div class=\"line\">                <span class=\"built_in\">string</span> returnUrl = HttpUtility.UrlDecode(httpContext.Request[<span class=\"string\">\"ReturnUrl\"</span>] ?? <span class=\"string\">\"/\"</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(code))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> host = httpContext.Request.Url.Host;</div><div class=\"line\">                    <span class=\"built_in\">string</span> path = httpContext.Request.Path;</div><div class=\"line\">                    <span class=\"built_in\">string</span> redirectUrl = <span class=\"string\">\"http://\"</span> + host + path + <span class=\"string\">\"?ReturnUrl=\"</span> + HttpUtility.UrlEncode(returnUrl);<span class=\"comment\">//重定向的url，这里不需要进行编码，在后面会自己编码</span></div><div class=\"line\">                    <span class=\"keyword\">try</span></div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"comment\">//todo:通过微信获取2.0授权的url</span></div><div class=\"line\">                        <span class=\"built_in\">string</span> url = GetAuthorizeUrl(appid, redirectUrl, <span class=\"string\">\"state\"</span>, <span class=\"string\">\"snsapi_base\"</span>);</div><div class=\"line\"></div><div class=\"line\">                        httpContext.Response.Redirect(url);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">catch</span> (System.Exception ex)</div><div class=\"line\">                    &#123;</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></div><div class=\"line\">                        httpContext.Response.Write(<span class=\"string\">\"构造网页授权获取code的URL时出错，错误是：\"</span> + ex.Message);</div><div class=\"line\">                        httpContext.Response.End();</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    var client = <span class=\"keyword\">new</span> System.Net.WebClient();</div><div class=\"line\">                    client.Encoding = System.Text.Encoding.UTF8;</div><div class=\"line\">                    <span class=\"built_in\">string</span> url = GetAccessTokenUrl(appid, secret, code);</div><div class=\"line\">                    var data = client.DownloadString(url);</div><div class=\"line\">                    var obj = JsonConvert.DeserializeObject&lt;Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt;&gt;(data);</div><div class=\"line\">                    <span class=\"keyword\">if</span> (obj.ContainsKey(<span class=\"string\">\"errcode\"</span>) &amp;&amp; obj[<span class=\"string\">\"errcode\"</span>] == <span class=\"string\">\"40163\"</span>)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"comment\">//刷新页面,重新进入</span></div><div class=\"line\">                        httpContext.Response.Redirect(<span class=\"string\">\"/SFJD_WeixinModule/WeiXinLogin/Login\"</span>);</div><div class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"built_in\">string</span> accessToken;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (!obj.TryGetValue(<span class=\"string\">\"access_token\"</span>, out accessToken))</div><div class=\"line\">                    &#123;</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></div><div class=\"line\">                        httpContext.Response.Write(<span class=\"string\">\"构造网页授权获取access_token的URL时出错\"</span>);</div><div class=\"line\">                        httpContext.Response.End();</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></div><div class=\"line\">                    &#125;</div><div class=\"line\">                    var openid = obj[<span class=\"string\">\"openid\"</span>];</div><div class=\"line\">                    httpContext.Session[<span class=\"string\">\"weixinInfo\"</span>] = openid;</div><div class=\"line\">                    <span class=\"comment\">//Utils.WidgetCode.ServerInfo.SetCookies(\"WXopenid\", openid, DateTime.MinValue);</span></div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//var existUser = UserManager.Users.FirstOrDefault(p =&gt; p.OpenId == openid);</span></div><div class=\"line\">                    <span class=\"comment\">//if (existUser != null)</span></div><div class=\"line\">                    <span class=\"comment\">//&#123;</span></div><div class=\"line\">                    <span class=\"comment\">//    SignInManager.SignInAsync(existUser, false, false);</span></div><div class=\"line\">                    <span class=\"comment\">//    httpContext.Response.Redirect(returnUrl);</span></div><div class=\"line\">                    <span class=\"comment\">//&#125;</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">OnAuthorization</span><span class=\"params\">(AuthorizationContext filterContext)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">            base.OnAuthorization(filterContext);</div><div class=\"line\">            <span class=\"keyword\">if</span> (filterContext.HttpContext.Response.StatusCode == <span class=\"number\">401</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                filterContext.Result = <span class=\"keyword\">new</span> RedirectResult(<span class=\"string\">\"/SFJD_WeixinModule/WeiXinLogin/Error?errorMsg=微信授权登录异常\"</span>);</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (filterContext.HttpContext.Response.StatusCode == <span class=\"number\">400001</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                filterContext.Result = <span class=\"keyword\">new</span> RedirectResult(<span class=\"string\">\"/SFJD_WeixinModule/WeiXinLogin/Error?errorMsg=请在微信中打开该页面\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//扩展</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAuthorizeUrl</span><span class=\"params\">(<span class=\"built_in\">string</span> appId, <span class=\"built_in\">string</span> redirectUrl, <span class=\"built_in\">string</span> state, <span class=\"built_in\">string</span> scope, <span class=\"built_in\">string</span> responseType = <span class=\"string\">\"code\"</span>)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(redirectUrl))</div><div class=\"line\">            &#123;</div><div class=\"line\">                redirectUrl = HttpUtility.UrlEncode(redirectUrl, System.Text.Encoding.UTF8);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                redirectUrl = null;</div><div class=\"line\">            &#125;</div><div class=\"line\">            object[] args = <span class=\"keyword\">new</span> object[] &#123; appId, redirectUrl, responseType, scope, state &#125;;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"https://open.weixin.qq.com/connect/oauth2/authorize?appid=&#123;0&#125;&amp;redirect_uri=&#123;1&#125;&amp;response_type=&#123;2&#125;&amp;scope=&#123;3&#125;&amp;state=&#123;4&#125;#wechat_redirect\"</span>, args);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAccessTokenUrl</span><span class=\"params\">(<span class=\"built_in\">string</span> appId, <span class=\"built_in\">string</span> secret, <span class=\"built_in\">string</span> code, <span class=\"built_in\">string</span> grantType = <span class=\"string\">\"authorization_code\"</span>)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            object[] args = <span class=\"keyword\">new</span> object[] &#123; appId, secret, code, grantType &#125;;</div><div class=\"line\">            <span class=\"built_in\">string</span> requestUri = <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"https://api.weixin.qq.com/sns/oauth2/access_token?appid=&#123;0&#125;&amp;secret=&#123;1&#125;&amp;code=&#123;2&#125;&amp;grant_type=&#123;3&#125;\"</span>, args);</div><div class=\"line\">            <span class=\"comment\">//return GetAccessTokenInfo(_httpClient.GetAsync(requestUri).Result.Content.ReadAsStringAsync().Result);</span></div><div class=\"line\">            <span class=\"keyword\">return</span> requestUri;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>登录控制器</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> WeiXinLoginController : MvcWXControllerBase</div><div class=\"line\"> &#123;</div><div class=\"line\">     <span class=\"comment\">// GET: SFJD_WeixinModule/WeiXinLogin</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"meta\">#region 视图</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// 登录</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">     [WXFilter]</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Index</span><span class=\"params\">()</span></span></div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"built_in\">string</span> openID = GetOpenID();</div><div class=\"line\"></div><div class=\"line\">         <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(openID))</div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"keyword\">using</span> (MAction action = <span class=\"keyword\">new</span> MAction(TableNames.SFJD_Client))</div><div class=\"line\">             &#123;</div><div class=\"line\">                 <span class=\"keyword\">if</span> (action.Fill(<span class=\"built_in\">string</span>.Format(<span class=\"string\">\"OpenID='&#123;0&#125;'\"</span>, openID)))</div><div class=\"line\">                 &#123;</div><div class=\"line\">                     <span class=\"comment\">//<span class=\"doctag\">TODO:</span>设置用户信息</span></div><div class=\"line\">                     <span class=\"comment\">//跳转首页</span></div><div class=\"line\">                     <span class=\"keyword\">return</span> RedirectToAction(<span class=\"string\">\"Index\"</span>, <span class=\"string\">\"WeiXinMain\"</span>);</div><div class=\"line\">                 &#125;</div><div class=\"line\">             &#125;</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"comment\">//第一次登录去注册界面</span></div><div class=\"line\">         <span class=\"keyword\">return</span> View();</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// 获得当前OpenID</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetOpenID</span><span class=\"params\">()</span></span></div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"keyword\">if</span> (Session[<span class=\"string\">\"weixinInfo\"</span>] == null)</div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"keyword\">else</span></div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"keyword\">return</span> Convert.ToString(Session[<span class=\"string\">\"weixinInfo\"</span>]);</div><div class=\"line\">         &#125;</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h2><p>之前遇到了一个问题，在本地测试公众号下没有发现系统有什么异常，<br>发布到远程服务器及正式公众号下时，跳出异常信息“输入字符串的格式不正确。”，<br>找了半天认为应该是哪里转字符串的地方出问题了，可是一开始没找到。<br>最后使用日志输出的方式将问题定位到了获得用户基本信息后，放置token过期时间上。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">异常信息&#123;&quot;errcode&quot;:40164,&quot;errmsg&quot;:&quot;invalid ip 111.111.112.117, not in whitelist hint: [yYexhA05332994]&quot;&#125;</div></pre></td></tr></table></figure></p>\n<p>发现公众号未设置白名单导致。</p>\n<p>在IP白名单内的IP来源，获取access_token接口才可调用成功。</p>\n<p>设置完成后，问题解决。</p>\n<p>获得微信用户信息的工具类<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> CYQ.Data.Cache;</div><div class=\"line\"><span class=\"keyword\">using</span> CYQ.Data.Tool;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> Util.WeiXin</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 微信公众号工具类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> WeiXinTool</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得已关注公众号用户信息</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"openid\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"appID\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"appSecret\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetVisiterInfo</span><span class=\"params\">(<span class=\"built_in\">string</span> openid)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> appID = <span class=\"string\">\"#########\"</span>;</div><div class=\"line\">            <span class=\"built_in\">string</span> appSecret = <span class=\"string\">\"******************\"</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> access_token = GetAccess_token(appID, appSecret);</div><div class=\"line\">            <span class=\"built_in\">string</span> requestURL = <span class=\"string\">\"https://api.weixin.qq.com/cgi-bin/user/info?access_token=&#123;0&#125;&amp;openid=&#123;1&#125;&amp;lang=zh_CN \"</span>;</div><div class=\"line\">            <span class=\"built_in\">string</span> strJson = HttpRequestUtil.RequestUrl(<span class=\"built_in\">string</span>.Format(requestURL,</div><div class=\"line\">                 access_token, openid));</div><div class=\"line\">            <span class=\"keyword\">return</span> strJson;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得基础接口的access_token</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"appID\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"appSecret\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAccess_token</span><span class=\"params\">(<span class=\"built_in\">string</span> appID, <span class=\"built_in\">string</span> appSecret)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> access_token = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            CacheManage cache = CacheManage.Instance;</div><div class=\"line\">            <span class=\"keyword\">if</span> (cache.Contains(<span class=\"string\">\"access_token\"</span> + appID))</div><div class=\"line\">            &#123;</div><div class=\"line\">                access_token = cache.Get(<span class=\"string\">\"access_token\"</span> + appID) as <span class=\"built_in\">string</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> strJson = <span class=\"string\">\"\"</span>;</div><div class=\"line\">                <span class=\"built_in\">string</span> requestURL = <span class=\"string\">\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&#123;0&#125;&amp;secret=&#123;1&#125;\"</span>;</div><div class=\"line\">                strJson = HttpRequestUtil.RequestUrl(<span class=\"built_in\">string</span>.Format(requestURL,</div><div class=\"line\">                  appID, appSecret));</div><div class=\"line\">              </div><div class=\"line\">                access_token = JsonHelper.GetValue(strJson, <span class=\"string\">\"access_token\"</span>);</div><div class=\"line\">                <span class=\"keyword\">double</span> cacheMinutes = (<span class=\"keyword\">double</span>)(Convert.ToInt32(JsonHelper.GetValue(strJson, <span class=\"string\">\"expires_in\"</span>)) / <span class=\"number\">60</span>);<span class=\"comment\">//将秒转换为分钟</span></div><div class=\"line\">                cache.Set(<span class=\"string\">\"access_token\"</span> + appID, access_token, cacheMinutes);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> access_token;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"<p>使用ASP MVC的注解方式，简易的将微信公众号内的实现网页自动登录。</p>","more":"<p>问题描述：在微信公众号增加网页菜单，实现用户微信号与系统自动绑定并登录的功能。</p>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><p>所谓网站的自动登录，其实就是将用户微信的openid与系统的账号进行绑定，然后进行登录的过程。</p>\n<h3 id=\"微信接口介绍\"><a href=\"#微信接口介绍\" class=\"headerlink\" title=\"微信接口介绍\"></a>微信接口介绍</h3><p>在公众号下每一个用户都有独一无二的openid，因此可以使用这个唯一标识来进行登录权限的认证。<br>要获得用户的openid，需要使用微信提供的接口，即官网名称：<a href=\"https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140842\">微信网页授权</a></p>\n<p>该授权的类型有两种：<br>第一种：静默跳转模式（scope的值是snsapi_base）<br>优点：可以在用户没有感觉的情况下获得openid<br>缺点：用户需要<strong><em>关注微信公众号</em></strong>且后续如果需要获得用户的信息需要调用<a href=\"https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421140839\">获取用户基本信息接口</a></p>\n<p>第二种：非静默的跳转模式（scope的值是snsapi_userinfo）<br>优点：两步合为一步，直接获得用户的信息，<strong><em>用户可以不关注公众号</em></strong><br>缺点：用户会弹出页面提示是否需要授权（已关注用户从公众号的会话或者自定义菜单进入本公众号的网页授权页，则是静默授权）<br><img src=\"/2018/05/30/aspmvc通用授权/20180530161151.jpg\" alt=\"非静默授权\" title=\"非静默授权\"></p>\n<h3 id=\"实现代码原理\"><a href=\"#实现代码原理\" class=\"headerlink\" title=\"实现代码原理\"></a>实现代码原理</h3><p>使用ASP MVC 中的注解模式，将需要授权的登录页Action增加注解实现自动登录。</p>\n<p>1.创建授权注解类：将注解类新见到文件夹App_Start下并继承自父类AuthorizeAttribute；<br>2.登录Action上增加注解并在内部判断session中的openid是否存在来自动跳转登录页；<br><img src=\"/2018/05/30/aspmvc通用授权/20180530161842.jpg\" alt=\"Action增加注解\" title=\"Action增加注解\"></p>\n<h2 id=\"实现过程\"><a href=\"#实现过程\" class=\"headerlink\" title=\"实现过程\"></a>实现过程</h2><h3 id=\"微信公众号后台需要设置\"><a href=\"#微信公众号后台需要设置\" class=\"headerlink\" title=\"微信公众号后台需要设置\"></a>微信公众号后台需要设置</h3><img src=\"/2018/05/30/aspmvc通用授权/20180530162310.jpg\" alt=\"1\" title=\"1\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530162445.jpg\" alt=\"2\" title=\"2\">\n<img src=\"/2018/05/30/aspmvc通用授权/sethost.png\" alt=\"3\" title=\"3\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530162838.jpg\" alt=\"4\" title=\"4\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530162916.jpg\" alt=\"5\" title=\"5\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530163018.jpg\" alt=\"6\" title=\"6\">\n<img src=\"/2018/05/30/aspmvc通用授权/20180530163137.jpg\" alt=\"7\" title=\"7\">\n<p>完成上面的步骤后，准备工作做完，开始进行编码。</p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><h4 id=\"静默方式授权\"><a href=\"#静默方式授权\" class=\"headerlink\" title=\"静默方式授权\"></a>静默方式授权</h4><p>注解类<br><a href=\"https://www.cnblogs.com/yangkangIT/p/5913524.html\">代码参考地址</a><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Newtonsoft.Json;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Mvc;</div><div class=\"line\"><span class=\"keyword\">namespace</span> Learun.Application.Web</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 微信授权</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> WXFilterAttribute : AuthorizeAttribute</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> override <span class=\"keyword\">bool</span> <span class=\"title\">AuthorizeCore</span><span class=\"params\">(HttpContextBase httpContext)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            httpContext.Session.Remove(<span class=\"string\">\"weixinInfo\"</span>);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> userAgent = httpContext.Request.UserAgent;</div><div class=\"line\">            <span class=\"keyword\">if</span> (userAgent.IndexOf(<span class=\"string\">\"MicroMessenger\"</span>) &lt;= <span class=\"number\">-1</span>)<span class=\"comment\">//不是微信浏览器</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                httpContext.Response.StatusCode = <span class=\"number\">400001</span>;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (!httpContext.User.Identity.IsAuthenticated)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//ApplicationSignInManager SignInManager = httpContext.GetOwinContext().Get&lt;ApplicationSignInManager&gt;();</span></div><div class=\"line\">                <span class=\"comment\">//ApplicationUserManager UserManager = httpContext.GetOwinContext().GetUserManager&lt;ApplicationUserManager&gt;();</span></div><div class=\"line\">                <span class=\"built_in\">string</span> appid = <span class=\"built_in\">string</span>.Empty;</div><div class=\"line\">                <span class=\"built_in\">string</span> secret = <span class=\"built_in\">string</span>.Empty;</div><div class=\"line\"></div><div class=\"line\">                appid =<span class=\"string\">\"**********\"</span>;</div><div class=\"line\">                secret = <span class=\"string\">\"##################\"</span>;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">                var code = httpContext.Request[<span class=\"string\">\"Code\"</span>];</div><div class=\"line\">                <span class=\"built_in\">string</span> returnUrl = HttpUtility.UrlDecode(httpContext.Request[<span class=\"string\">\"ReturnUrl\"</span>] ?? <span class=\"string\">\"/\"</span>);</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(code))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> host = httpContext.Request.Url.Host;</div><div class=\"line\">                    <span class=\"built_in\">string</span> path = httpContext.Request.Path;</div><div class=\"line\">                    <span class=\"built_in\">string</span> redirectUrl = <span class=\"string\">\"http://\"</span> + host + path + <span class=\"string\">\"?ReturnUrl=\"</span> + HttpUtility.UrlEncode(returnUrl);<span class=\"comment\">//重定向的url，这里不需要进行编码，在后面会自己编码</span></div><div class=\"line\">                    <span class=\"keyword\">try</span></div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"comment\">//todo:通过微信获取2.0授权的url</span></div><div class=\"line\">                        <span class=\"built_in\">string</span> url = GetAuthorizeUrl(appid, redirectUrl, <span class=\"string\">\"state\"</span>, <span class=\"string\">\"snsapi_base\"</span>);</div><div class=\"line\"></div><div class=\"line\">                        httpContext.Response.Redirect(url);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">catch</span> (System.Exception ex)</div><div class=\"line\">                    &#123;</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></div><div class=\"line\">                        httpContext.Response.Write(<span class=\"string\">\"构造网页授权获取code的URL时出错，错误是：\"</span> + ex.Message);</div><div class=\"line\">                        httpContext.Response.End();</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    var client = <span class=\"keyword\">new</span> System.Net.WebClient();</div><div class=\"line\">                    client.Encoding = System.Text.Encoding.UTF8;</div><div class=\"line\">                    <span class=\"built_in\">string</span> url = GetAccessTokenUrl(appid, secret, code);</div><div class=\"line\">                    var data = client.DownloadString(url);</div><div class=\"line\">                    var obj = JsonConvert.DeserializeObject&lt;Dictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt;&gt;(data);</div><div class=\"line\">                    <span class=\"keyword\">if</span> (obj.ContainsKey(<span class=\"string\">\"errcode\"</span>) &amp;&amp; obj[<span class=\"string\">\"errcode\"</span>] == <span class=\"string\">\"40163\"</span>)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"comment\">//刷新页面,重新进入</span></div><div class=\"line\">                        httpContext.Response.Redirect(<span class=\"string\">\"/SFJD_WeixinModule/WeiXinLogin/Login\"</span>);</div><div class=\"line\">                        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"built_in\">string</span> accessToken;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (!obj.TryGetValue(<span class=\"string\">\"access_token\"</span>, out accessToken))</div><div class=\"line\">                    &#123;</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">if</span> DEBUG</span></div><div class=\"line\">                        httpContext.Response.Write(<span class=\"string\">\"构造网页授权获取access_token的URL时出错\"</span>);</div><div class=\"line\">                        httpContext.Response.End();</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></div><div class=\"line\">                    &#125;</div><div class=\"line\">                    var openid = obj[<span class=\"string\">\"openid\"</span>];</div><div class=\"line\">                    httpContext.Session[<span class=\"string\">\"weixinInfo\"</span>] = openid;</div><div class=\"line\">                    <span class=\"comment\">//Utils.WidgetCode.ServerInfo.SetCookies(\"WXopenid\", openid, DateTime.MinValue);</span></div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//var existUser = UserManager.Users.FirstOrDefault(p =&gt; p.OpenId == openid);</span></div><div class=\"line\">                    <span class=\"comment\">//if (existUser != null)</span></div><div class=\"line\">                    <span class=\"comment\">//&#123;</span></div><div class=\"line\">                    <span class=\"comment\">//    SignInManager.SignInAsync(existUser, false, false);</span></div><div class=\"line\">                    <span class=\"comment\">//    httpContext.Response.Redirect(returnUrl);</span></div><div class=\"line\">                    <span class=\"comment\">//&#125;</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"keyword\">void</span> <span class=\"title\">OnAuthorization</span><span class=\"params\">(AuthorizationContext filterContext)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            base.OnAuthorization(filterContext);</div><div class=\"line\">            <span class=\"keyword\">if</span> (filterContext.HttpContext.Response.StatusCode == <span class=\"number\">401</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                filterContext.Result = <span class=\"keyword\">new</span> RedirectResult(<span class=\"string\">\"/SFJD_WeixinModule/WeiXinLogin/Error?errorMsg=微信授权登录异常\"</span>);</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (filterContext.HttpContext.Response.StatusCode == <span class=\"number\">400001</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                filterContext.Result = <span class=\"keyword\">new</span> RedirectResult(<span class=\"string\">\"/SFJD_WeixinModule/WeiXinLogin/Error?errorMsg=请在微信中打开该页面\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//扩展</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAuthorizeUrl</span><span class=\"params\">(<span class=\"built_in\">string</span> appId, <span class=\"built_in\">string</span> redirectUrl, <span class=\"built_in\">string</span> state, <span class=\"built_in\">string</span> scope, <span class=\"built_in\">string</span> responseType = <span class=\"string\">\"code\"</span>)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(redirectUrl))</div><div class=\"line\">            &#123;</div><div class=\"line\">                redirectUrl = HttpUtility.UrlEncode(redirectUrl, System.Text.Encoding.UTF8);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                redirectUrl = null;</div><div class=\"line\">            &#125;</div><div class=\"line\">            object[] args = <span class=\"keyword\">new</span> object[] &#123; appId, redirectUrl, responseType, scope, state &#125;;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"https://open.weixin.qq.com/connect/oauth2/authorize?appid=&#123;0&#125;&amp;redirect_uri=&#123;1&#125;&amp;response_type=&#123;2&#125;&amp;scope=&#123;3&#125;&amp;state=&#123;4&#125;#wechat_redirect\"</span>, args);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAccessTokenUrl</span><span class=\"params\">(<span class=\"built_in\">string</span> appId, <span class=\"built_in\">string</span> secret, <span class=\"built_in\">string</span> code, <span class=\"built_in\">string</span> grantType = <span class=\"string\">\"authorization_code\"</span>)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            object[] args = <span class=\"keyword\">new</span> object[] &#123; appId, secret, code, grantType &#125;;</div><div class=\"line\">            <span class=\"built_in\">string</span> requestUri = <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"https://api.weixin.qq.com/sns/oauth2/access_token?appid=&#123;0&#125;&amp;secret=&#123;1&#125;&amp;code=&#123;2&#125;&amp;grant_type=&#123;3&#125;\"</span>, args);</div><div class=\"line\">            <span class=\"comment\">//return GetAccessTokenInfo(_httpClient.GetAsync(requestUri).Result.Content.ReadAsStringAsync().Result);</span></div><div class=\"line\">            <span class=\"keyword\">return</span> requestUri;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>登录控制器</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> WeiXinLoginController : MvcWXControllerBase</div><div class=\"line\"> &#123;</div><div class=\"line\">     <span class=\"comment\">// GET: SFJD_WeixinModule/WeiXinLogin</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"meta\">#region 视图</span></div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// 登录</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">     [WXFilter]</div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> ActionResult <span class=\"title\">Index</span><span class=\"params\">()</span></div><div class=\"line\">     </span>&#123;</div><div class=\"line\">         <span class=\"built_in\">string</span> openID = GetOpenID();</div><div class=\"line\"></div><div class=\"line\">         <span class=\"keyword\">if</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(openID))</div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"keyword\">using</span> (MAction action = <span class=\"keyword\">new</span> MAction(TableNames.SFJD_Client))</div><div class=\"line\">             &#123;</div><div class=\"line\">                 <span class=\"keyword\">if</span> (action.Fill(<span class=\"built_in\">string</span>.Format(<span class=\"string\">\"OpenID='&#123;0&#125;'\"</span>, openID)))</div><div class=\"line\">                 &#123;</div><div class=\"line\">                     <span class=\"comment\">//<span class=\"doctag\">TODO:</span>设置用户信息</span></div><div class=\"line\">                     <span class=\"comment\">//跳转首页</span></div><div class=\"line\">                     <span class=\"keyword\">return</span> RedirectToAction(<span class=\"string\">\"Index\"</span>, <span class=\"string\">\"WeiXinMain\"</span>);</div><div class=\"line\">                 &#125;</div><div class=\"line\">             &#125;</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"comment\">//第一次登录去注册界面</span></div><div class=\"line\">         <span class=\"keyword\">return</span> View();</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// 获得当前OpenID</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetOpenID</span><span class=\"params\">()</span></div><div class=\"line\">     </span>&#123;</div><div class=\"line\">         <span class=\"keyword\">if</span> (Session[<span class=\"string\">\"weixinInfo\"</span>] == null)</div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"keyword\">else</span></div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"keyword\">return</span> Convert.ToString(Session[<span class=\"string\">\"weixinInfo\"</span>]);</div><div class=\"line\">         &#125;</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"后续\"><a href=\"#后续\" class=\"headerlink\" title=\"后续\"></a>后续</h2><p>之前遇到了一个问题，在本地测试公众号下没有发现系统有什么异常，<br>发布到远程服务器及正式公众号下时，跳出异常信息“输入字符串的格式不正确。”，<br>找了半天认为应该是哪里转字符串的地方出问题了，可是一开始没找到。<br>最后使用日志输出的方式将问题定位到了获得用户基本信息后，放置token过期时间上。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">异常信息&#123;&quot;errcode&quot;:40164,&quot;errmsg&quot;:&quot;invalid ip 111.111.112.117, not in whitelist hint: [yYexhA05332994]&quot;&#125;</div></pre></td></tr></table></figure></p>\n<p>发现公众号未设置白名单导致。</p>\n<p>在IP白名单内的IP来源，获取access_token接口才可调用成功。</p>\n<p>设置完成后，问题解决。</p>\n<p>获得微信用户信息的工具类<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> CYQ.Data.Cache;</div><div class=\"line\"><span class=\"keyword\">using</span> CYQ.Data.Tool;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> Util.WeiXin</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 微信公众号工具类</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> WeiXinTool</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得已关注公众号用户信息</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"openid\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"appID\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"appSecret\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetVisiterInfo</span><span class=\"params\">(<span class=\"built_in\">string</span> openid)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> appID = <span class=\"string\">\"#########\"</span>;</div><div class=\"line\">            <span class=\"built_in\">string</span> appSecret = <span class=\"string\">\"******************\"</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> access_token = GetAccess_token(appID, appSecret);</div><div class=\"line\">            <span class=\"built_in\">string</span> requestURL = <span class=\"string\">\"https://api.weixin.qq.com/cgi-bin/user/info?access_token=&#123;0&#125;&amp;openid=&#123;1&#125;&amp;lang=zh_CN \"</span>;</div><div class=\"line\">            <span class=\"built_in\">string</span> strJson = HttpRequestUtil.RequestUrl(<span class=\"built_in\">string</span>.Format(requestURL,</div><div class=\"line\">                 access_token, openid));</div><div class=\"line\">            <span class=\"keyword\">return</span> strJson;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得基础接口的access_token</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"appID\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"appSecret\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAccess_token</span><span class=\"params\">(<span class=\"built_in\">string</span> appID, <span class=\"built_in\">string</span> appSecret)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> access_token = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            CacheManage cache = CacheManage.Instance;</div><div class=\"line\">            <span class=\"keyword\">if</span> (cache.Contains(<span class=\"string\">\"access_token\"</span> + appID))</div><div class=\"line\">            &#123;</div><div class=\"line\">                access_token = cache.Get(<span class=\"string\">\"access_token\"</span> + appID) as <span class=\"built_in\">string</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> strJson = <span class=\"string\">\"\"</span>;</div><div class=\"line\">                <span class=\"built_in\">string</span> requestURL = <span class=\"string\">\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&#123;0&#125;&amp;secret=&#123;1&#125;\"</span>;</div><div class=\"line\">                strJson = HttpRequestUtil.RequestUrl(<span class=\"built_in\">string</span>.Format(requestURL,</div><div class=\"line\">                  appID, appSecret));</div><div class=\"line\">              </div><div class=\"line\">                access_token = JsonHelper.GetValue(strJson, <span class=\"string\">\"access_token\"</span>);</div><div class=\"line\">                <span class=\"keyword\">double</span> cacheMinutes = (<span class=\"keyword\">double</span>)(Convert.ToInt32(JsonHelper.GetValue(strJson, <span class=\"string\">\"expires_in\"</span>)) / <span class=\"number\">60</span>);<span class=\"comment\">//将秒转换为分钟</span></div><div class=\"line\">                cache.Set(<span class=\"string\">\"access_token\"</span> + appID, access_token, cacheMinutes);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> access_token;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"c#基础-扩展方法","date":"2016-09-12T14:58:48.000Z","_content":"## 扩展方法的讲解\nC#扩展方法，爱你在心口难开\n转自[无风听海](http://www.cnblogs.com/wufengtinghai/archive/2011/08/05/2128110.html) \n\n<!--more-->\n什么是扩展方法?好几天了打算记录一下，今天我们来深入研究一下，探究一下扩展方法的实现机制；那么到底什么是扩展方法呢？\n扩展方法使您能够向现有类型“添加”方法，而无需创建新的派生类型、重新编译或以其他方式修改原始类型。扩展方法是一种特殊的静态方法，但可以像扩展类型上的实例方法一样进行调用。对于用 C# 和 Visual Basic 编写的客户端代码，调用扩展方法与调用在类型中实际定义的方法之间没有明显的差异。\n也许你并不明白以上的意思，那一点都没有关系，如果我们平时一定经常使用linq标准查询，那么我们就一直在使用扩展方法啦！\n微软为枚举的集合扩展了很多的标准查询方法，极大的方便了我们的使用！请看下面的例子没有使用扩展方法\n\n   \n\t\n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Text;\nusing wuFengTingHai.Person;\n\nnamespace ExtendMethod\n{\n    public class LinqExtend\n    {\n        private IList<Person> persons = new List<Person>();\n        public IList<Person> Persons\n        {\n            get {\n                //删除集合中名称为无风听海的记录，没有引入system.linq,所以不能使用扩展方法\n                foreach(Person person in this.persons)\n                {\n                    if (person.Name.Equals(\"无风听海\"))\n                    {\n                        this.persons.Remove(person);\n                    }\n                }                \n                return this.persons;\n            }\n            set { this.persons = value; }\n        }        \n    }   \n}\n\t```\n\t\n使用扩展方法\n\t\n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace wuFengTingHai.Person.Extend\n{\n    public class LinqExtend\n    {\n        private IList<Person> persons = new List<Person>();\n        public IList<Person> Persons\n        {\n            get\n            {\n                //删除集合中名称为无风听海的记录，引入system.linq的扩展方法\n                this.persons = this.persons.Where(m => !m.Name.Equals(\"无风听海\")).ToList<Person>();\n                return this.persons;\n            }\n            set { this.persons = value; }\n        }\n    }\n}\n\t```\n引入system.linq后,扩展方法的智能提示\n 从上面的例子中我们可以学到扩展方法的使用方法。那么扩展方法是怎么定义的呢？查看一下Where扩展方法的定义  \n\n```C\n #region Assembly System.Core.dll, v2.0.50727\n// C:\\Program Files\\Reference Assemblies\\Microsoft\\Framework\\v3.5\\System.Core.dll\n#endregion\n\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Runtime.CompilerServices;\n\nnamespace System.Linq\n{    \n    //为了方便展示，将其他的扩展方法进行了删除精简\n    public static class Enumerable\n    {\n        public static IEnumerable<TSource> Where<TSource>(this IEnumerable<TSource> source, Func<TSource, bool> predicate);\n\n        public static IEnumerable<TSource> Where<TSource>(this IEnumerable<TSource> source, Func<TSource, int, bool> predicate);\n    }\n}\n``` \n  虽然扩展方法通过实例方法语法进行调用的，但是他们却被定义为静态方法。从定义中我们可以看到，它们的第一个参数指定该方法作用于哪个类型，并且该参数以 this 修饰符为前缀。\n\n    下面我们自己定义一个Person类和PersonExtend类来扩展方法，来看看编译器究竟做了什么！\n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace wuFengTingHai.Person\n{\n    public class Person\n    {\n        public Person(string name,string sex,string age)\n        {\n            this.name = name;\n            this.sex = sex;\n            this.age = age;\n        }\n\n        private string name;\n        public string Name\n        {\n            set { this.name = value; }\n            get { return this.name; }\n        }\n\n        private string sex;\n        public string Sex\n        {\n            set { this.sex = value; }\n            get { return this.sex; }\n        }\n\n        private string age;\n        public string Age\n        {\n            set { this.age = value; }\n            get { return this.age; }\n        }\n\n         public override string  ToString()\n        {\n            return string.Format(\"{0}\",\"类本身的方法覆盖了同名扩展方法\");\n        }            \n\n    }\n}\n\t\n\t```\n\t PersonExtend，对Person类进行方法扩展\n\t \n\t \n\t \n\t \n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace wuFengTingHai.Person.Extend\n{\n     public static  class PersonExtend\n    {\n         public static string  GetDescription(this Person person,string msg)\n         {             \n             return string.Format(\"{0}      我是{1},性别{2},今年{3}岁\",msg,person.Name,person.Sex,person.Age);\n         }\n        \n    }\n}\n\t ```\n\t 客户端调用结果\n\t \n\t 让我们看一下客户端main方法的IL代码，我们就知道编译器到底干什么了！\n```C\n\t .method private hidebysig static void  Main(string[] args) cil managed\n{\n  .entrypoint\n  // Code size       63 (0x3f)\n  .maxstack  4\n  .locals init ([0] class [wuFengTingHai.Person]wuFengTingHai.Person.Person person)\n  IL_0000:  nop\n  IL_0001:  ldstr      bytearray (E0 65 CE 98 2C 54 77 6D )                         // .e..,Twm\n  IL_0006:  ldstr      bytearray (37 75 )                                           // 7u\n  IL_000b:  ldstr      \"20\"\n  IL_0010:  newobj     instance void [wuFengTingHai.Person]wuFengTingHai.Person.Person::.ctor(string,\n                                                                                              string,\n                                                                                              string)\n  IL_0015:  stloc.0\n  IL_0016:  ldloc.0\n  IL_0017:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 59 97 01 60 7B 7C 50 00   // .v.c....Y..`{|P.\n                                  65 00 72 00 73 00 6F 00 6E 00 45 00 78 00 74 00   // e.r.s.o.n.E.x.t.\n                                  65 00 6E 00 64 00 03 8C 28 75 2C 00 )             // e.n.d...(u,.\n                       //直接使用静态类PersonExtend调用\n  IL_001c:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,\n                                                                                                                    string)\n  IL_0021:  call       void [mscorlib]System.Console::WriteLine(string)\n  IL_0026:  nop\n  IL_0027:  ldloc.0\n  IL_0028:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 50 00 65 00 72 00 73 00   // .v.c....P.e.r.s.\n                                  6F 00 6E 00 84 76 9E 5B 8B 4F 03 8C 28 75 2C 00 ) // o.n..v.[.O..(u,.\n                       //直接使用Person的扩展方法调用\n  IL_002d:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,\n                                                                                                                    string)\n  IL_0032:  call       void [mscorlib]System.Console::WriteLine(string)\n  IL_0037:  nop\n  IL_0038:  call       string [mscorlib]System.Console::ReadLine()\n  IL_003d:  pop\n  IL_003e:  ret\n} // end of method Program::Main\n\t \n\t ```\n\t \n\t 从IL中我们可以看到扩展方法与其扩展的类之间并没有什么本质的联系，只是编译器跟我们玩的把戏罢了，最终编译器还是将扩展方法转化成静态类的静态方法调用，所以扩展方法不能访问相应类的私有字段和私有方法；至于为什么使用静态类的静态方法，我考虑可能是这样效率相对较高，同时扩展方法作为其他类的扩展，本身类的实例化没有什么意义；     \n\n      如果扩展方法和被扩展类中的方法相同，会怎么样？\n\t  \n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace wuFengTingHai.Person.Extend\n{\n     public static  class PersonExtend\n    {\n         public static string  GetDescription(this Person person,string msg)\n         {             \n             return string.Format(\"{0}      我是{1},性别{2},今年{3}岁\",msg,person.Name,person.Sex,person.Age);\n         }\n\n       \n         public static string ToString(this Person person)\n         {\n             return \"扩展方法能够覆盖原始类的同名方法\";\n         }\n    }\n}\n\t  \n\t  ```\n\t  客户端调用代码\n\t  \n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing wuFengTingHai.Person.Extend;\nnamespace ExtendMethod\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {            \n            wuFengTingHai.Person.Person person = new wuFengTingHai.Person.Person(\"无风听海\", \"男\", \"20\");\n            //Console.WriteLine(wuFengTingHai.Person.Extend.PersonExtend.GetDescription(person, \"直接通过静态类PersonExtend调用,\"));\n            //Console.WriteLine(person.GetDescription(\"直接通过Person的实例调用,\"));\n            Console.WriteLine(person.ToString());\n           \n\n            Console.ReadLine();\n        }\n    }\n}\n\t  ```\n\t  \n调用结果\n\n   \n\n以上我们可以看到编译时，扩展方法的优先级总是比类型本身中定义的实例方法低，所以与接口或类方法具有相同名称和签名的扩展方法永远不会被调用。\n\n综上进行总结\n  扩展方法不改变被扩展类的代码，不用重新编译、修改、派生被扩展类\n  扩展方法不能访问被扩展类的私有成员\n  扩展方法会被被扩展类的同名方法覆盖，所以实现扩展方法我们需要承担随时被覆盖的风险\n  扩展方法看似实现了面向对象中扩展对修改说不的特性，但是也违背了面向对象的继承原则，被扩展类的派生类是不能继承扩展扩展方法的，从而又违背了面向对象的多态性。\n  在我们稳定的引用同一个版本的类库，但是我们没有该类库的源代码，那么我们可以使用扩展方法；但是从项目的可扩展、可维护和版本控制方面来说，都不建议\n\n  使用扩展方法进行类的扩展。","source":"_posts/c-基础-扩展方法.md","raw":"---\ntitle: 'c#基础-扩展方法'\ndate: 2016-09-12 22:58:48\ncategories: \n- C#基础\ntags:\n- 扩展方法\n\n---\n## 扩展方法的讲解\nC#扩展方法，爱你在心口难开\n转自[无风听海](http://www.cnblogs.com/wufengtinghai/archive/2011/08/05/2128110.html) \n\n<!--more-->\n什么是扩展方法?好几天了打算记录一下，今天我们来深入研究一下，探究一下扩展方法的实现机制；那么到底什么是扩展方法呢？\n扩展方法使您能够向现有类型“添加”方法，而无需创建新的派生类型、重新编译或以其他方式修改原始类型。扩展方法是一种特殊的静态方法，但可以像扩展类型上的实例方法一样进行调用。对于用 C# 和 Visual Basic 编写的客户端代码，调用扩展方法与调用在类型中实际定义的方法之间没有明显的差异。\n也许你并不明白以上的意思，那一点都没有关系，如果我们平时一定经常使用linq标准查询，那么我们就一直在使用扩展方法啦！\n微软为枚举的集合扩展了很多的标准查询方法，极大的方便了我们的使用！请看下面的例子没有使用扩展方法\n\n   \n\t\n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Text;\nusing wuFengTingHai.Person;\n\nnamespace ExtendMethod\n{\n    public class LinqExtend\n    {\n        private IList<Person> persons = new List<Person>();\n        public IList<Person> Persons\n        {\n            get {\n                //删除集合中名称为无风听海的记录，没有引入system.linq,所以不能使用扩展方法\n                foreach(Person person in this.persons)\n                {\n                    if (person.Name.Equals(\"无风听海\"))\n                    {\n                        this.persons.Remove(person);\n                    }\n                }                \n                return this.persons;\n            }\n            set { this.persons = value; }\n        }        \n    }   \n}\n\t```\n\t\n使用扩展方法\n\t\n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace wuFengTingHai.Person.Extend\n{\n    public class LinqExtend\n    {\n        private IList<Person> persons = new List<Person>();\n        public IList<Person> Persons\n        {\n            get\n            {\n                //删除集合中名称为无风听海的记录，引入system.linq的扩展方法\n                this.persons = this.persons.Where(m => !m.Name.Equals(\"无风听海\")).ToList<Person>();\n                return this.persons;\n            }\n            set { this.persons = value; }\n        }\n    }\n}\n\t```\n引入system.linq后,扩展方法的智能提示\n 从上面的例子中我们可以学到扩展方法的使用方法。那么扩展方法是怎么定义的呢？查看一下Where扩展方法的定义  \n\n```C\n #region Assembly System.Core.dll, v2.0.50727\n// C:\\Program Files\\Reference Assemblies\\Microsoft\\Framework\\v3.5\\System.Core.dll\n#endregion\n\nusing System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Runtime.CompilerServices;\n\nnamespace System.Linq\n{    \n    //为了方便展示，将其他的扩展方法进行了删除精简\n    public static class Enumerable\n    {\n        public static IEnumerable<TSource> Where<TSource>(this IEnumerable<TSource> source, Func<TSource, bool> predicate);\n\n        public static IEnumerable<TSource> Where<TSource>(this IEnumerable<TSource> source, Func<TSource, int, bool> predicate);\n    }\n}\n``` \n  虽然扩展方法通过实例方法语法进行调用的，但是他们却被定义为静态方法。从定义中我们可以看到，它们的第一个参数指定该方法作用于哪个类型，并且该参数以 this 修饰符为前缀。\n\n    下面我们自己定义一个Person类和PersonExtend类来扩展方法，来看看编译器究竟做了什么！\n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace wuFengTingHai.Person\n{\n    public class Person\n    {\n        public Person(string name,string sex,string age)\n        {\n            this.name = name;\n            this.sex = sex;\n            this.age = age;\n        }\n\n        private string name;\n        public string Name\n        {\n            set { this.name = value; }\n            get { return this.name; }\n        }\n\n        private string sex;\n        public string Sex\n        {\n            set { this.sex = value; }\n            get { return this.sex; }\n        }\n\n        private string age;\n        public string Age\n        {\n            set { this.age = value; }\n            get { return this.age; }\n        }\n\n         public override string  ToString()\n        {\n            return string.Format(\"{0}\",\"类本身的方法覆盖了同名扩展方法\");\n        }            \n\n    }\n}\n\t\n\t```\n\t PersonExtend，对Person类进行方法扩展\n\t \n\t \n\t \n\t \n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace wuFengTingHai.Person.Extend\n{\n     public static  class PersonExtend\n    {\n         public static string  GetDescription(this Person person,string msg)\n         {             \n             return string.Format(\"{0}      我是{1},性别{2},今年{3}岁\",msg,person.Name,person.Sex,person.Age);\n         }\n        \n    }\n}\n\t ```\n\t 客户端调用结果\n\t \n\t 让我们看一下客户端main方法的IL代码，我们就知道编译器到底干什么了！\n```C\n\t .method private hidebysig static void  Main(string[] args) cil managed\n{\n  .entrypoint\n  // Code size       63 (0x3f)\n  .maxstack  4\n  .locals init ([0] class [wuFengTingHai.Person]wuFengTingHai.Person.Person person)\n  IL_0000:  nop\n  IL_0001:  ldstr      bytearray (E0 65 CE 98 2C 54 77 6D )                         // .e..,Twm\n  IL_0006:  ldstr      bytearray (37 75 )                                           // 7u\n  IL_000b:  ldstr      \"20\"\n  IL_0010:  newobj     instance void [wuFengTingHai.Person]wuFengTingHai.Person.Person::.ctor(string,\n                                                                                              string,\n                                                                                              string)\n  IL_0015:  stloc.0\n  IL_0016:  ldloc.0\n  IL_0017:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 59 97 01 60 7B 7C 50 00   // .v.c....Y..`{|P.\n                                  65 00 72 00 73 00 6F 00 6E 00 45 00 78 00 74 00   // e.r.s.o.n.E.x.t.\n                                  65 00 6E 00 64 00 03 8C 28 75 2C 00 )             // e.n.d...(u,.\n                       //直接使用静态类PersonExtend调用\n  IL_001c:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,\n                                                                                                                    string)\n  IL_0021:  call       void [mscorlib]System.Console::WriteLine(string)\n  IL_0026:  nop\n  IL_0027:  ldloc.0\n  IL_0028:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 50 00 65 00 72 00 73 00   // .v.c....P.e.r.s.\n                                  6F 00 6E 00 84 76 9E 5B 8B 4F 03 8C 28 75 2C 00 ) // o.n..v.[.O..(u,.\n                       //直接使用Person的扩展方法调用\n  IL_002d:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,\n                                                                                                                    string)\n  IL_0032:  call       void [mscorlib]System.Console::WriteLine(string)\n  IL_0037:  nop\n  IL_0038:  call       string [mscorlib]System.Console::ReadLine()\n  IL_003d:  pop\n  IL_003e:  ret\n} // end of method Program::Main\n\t \n\t ```\n\t \n\t 从IL中我们可以看到扩展方法与其扩展的类之间并没有什么本质的联系，只是编译器跟我们玩的把戏罢了，最终编译器还是将扩展方法转化成静态类的静态方法调用，所以扩展方法不能访问相应类的私有字段和私有方法；至于为什么使用静态类的静态方法，我考虑可能是这样效率相对较高，同时扩展方法作为其他类的扩展，本身类的实例化没有什么意义；     \n\n      如果扩展方法和被扩展类中的方法相同，会怎么样？\n\t  \n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace wuFengTingHai.Person.Extend\n{\n     public static  class PersonExtend\n    {\n         public static string  GetDescription(this Person person,string msg)\n         {             \n             return string.Format(\"{0}      我是{1},性别{2},今年{3}岁\",msg,person.Name,person.Sex,person.Age);\n         }\n\n       \n         public static string ToString(this Person person)\n         {\n             return \"扩展方法能够覆盖原始类的同名方法\";\n         }\n    }\n}\n\t  \n\t  ```\n\t  客户端调用代码\n\t  \n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing wuFengTingHai.Person.Extend;\nnamespace ExtendMethod\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {            \n            wuFengTingHai.Person.Person person = new wuFengTingHai.Person.Person(\"无风听海\", \"男\", \"20\");\n            //Console.WriteLine(wuFengTingHai.Person.Extend.PersonExtend.GetDescription(person, \"直接通过静态类PersonExtend调用,\"));\n            //Console.WriteLine(person.GetDescription(\"直接通过Person的实例调用,\"));\n            Console.WriteLine(person.ToString());\n           \n\n            Console.ReadLine();\n        }\n    }\n}\n\t  ```\n\t  \n调用结果\n\n   \n\n以上我们可以看到编译时，扩展方法的优先级总是比类型本身中定义的实例方法低，所以与接口或类方法具有相同名称和签名的扩展方法永远不会被调用。\n\n综上进行总结\n  扩展方法不改变被扩展类的代码，不用重新编译、修改、派生被扩展类\n  扩展方法不能访问被扩展类的私有成员\n  扩展方法会被被扩展类的同名方法覆盖，所以实现扩展方法我们需要承担随时被覆盖的风险\n  扩展方法看似实现了面向对象中扩展对修改说不的特性，但是也违背了面向对象的继承原则，被扩展类的派生类是不能继承扩展扩展方法的，从而又违背了面向对象的多态性。\n  在我们稳定的引用同一个版本的类库，但是我们没有该类库的源代码，那么我们可以使用扩展方法；但是从项目的可扩展、可维护和版本控制方面来说，都不建议\n\n  使用扩展方法进行类的扩展。","slug":"c-基础-扩展方法","published":1,"updated":"2018-01-11T01:53:56.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaaywy001eocm7hc0dfrp8","content":"<h2 id=\"扩展方法的讲解\"><a href=\"#扩展方法的讲解\" class=\"headerlink\" title=\"扩展方法的讲解\"></a>扩展方法的讲解</h2><p>C#扩展方法，爱你在心口难开<br>转自<a href=\"http://www.cnblogs.com/wufengtinghai/archive/2011/08/05/2128110.html\" target=\"_blank\" rel=\"external\">无风听海</a> </p>\n<a id=\"more\"></a>\n<p>什么是扩展方法?好几天了打算记录一下，今天我们来深入研究一下，探究一下扩展方法的实现机制；那么到底什么是扩展方法呢？<br>扩展方法使您能够向现有类型“添加”方法，而无需创建新的派生类型、重新编译或以其他方式修改原始类型。扩展方法是一种特殊的静态方法，但可以像扩展类型上的实例方法一样进行调用。对于用 C# 和 Visual Basic 编写的客户端代码，调用扩展方法与调用在类型中实际定义的方法之间没有明显的差异。<br>也许你并不明白以上的意思，那一点都没有关系，如果我们平时一定经常使用linq标准查询，那么我们就一直在使用扩展方法啦！<br>微软为枚举的集合扩展了很多的标准查询方法，极大的方便了我们的使用！请看下面的例子没有使用扩展方法</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> wuFengTingHai.Person;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> ExtendMethod</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LinqExtend</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> IList&lt;Person&gt; persons = <span class=\"keyword\">new</span> List&lt;Person&gt;();</div><div class=\"line\">        <span class=\"keyword\">public</span> IList&lt;Person&gt; Persons</div><div class=\"line\">        &#123;</div><div class=\"line\">            get &#123;</div><div class=\"line\">                <span class=\"comment\">//删除集合中名称为无风听海的记录，没有引入system.linq,所以不能使用扩展方法</span></div><div class=\"line\">                foreach(Person person in <span class=\"keyword\">this</span>.persons)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (person.Name.Equals(<span class=\"string\">\"无风听海\"</span>))</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"keyword\">this</span>.persons.Remove(person);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;                </div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.persons;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.persons = value; &#125;</div><div class=\"line\">        &#125;        </div><div class=\"line\">    &#125;   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用扩展方法</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> wuFengTingHai.Person.Extend</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LinqExtend</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> IList&lt;Person&gt; persons = <span class=\"keyword\">new</span> List&lt;Person&gt;();</div><div class=\"line\">        <span class=\"keyword\">public</span> IList&lt;Person&gt; Persons</div><div class=\"line\">        &#123;</div><div class=\"line\">            get</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//删除集合中名称为无风听海的记录，引入system.linq的扩展方法</span></div><div class=\"line\">                <span class=\"keyword\">this</span>.persons = <span class=\"keyword\">this</span>.persons.Where(m =&gt; !m.Name.Equals(<span class=\"string\">\"无风听海\"</span>)).ToList&lt;Person&gt;();</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.persons;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.persons = value; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>引入system.linq后,扩展方法的智能提示<br> 从上面的例子中我们可以学到扩展方法的使用方法。那么扩展方法是怎么定义的呢？查看一下Where扩展方法的定义  </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"meta\">#region Assembly System.Core.dll, v2.0.50727</span></div><div class=\"line\"><span class=\"comment\">// C:\\Program Files\\Reference Assemblies\\Microsoft\\Framework\\v3.5\\System.Core.dll</span></div><div class=\"line\"><span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Runtime.CompilerServices;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> System.Linq</div><div class=\"line\">&#123;    </div><div class=\"line\">    <span class=\"comment\">//为了方便展示，将其他的扩展方法进行了删除精简</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> Enumerable</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> IEnumerable&lt;TSource&gt; Where&lt;TSource&gt;(<span class=\"keyword\">this</span> IEnumerable&lt;TSource&gt; source, Func&lt;TSource, <span class=\"keyword\">bool</span>&gt; predicate);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> IEnumerable&lt;TSource&gt; Where&lt;TSource&gt;(<span class=\"keyword\">this</span> IEnumerable&lt;TSource&gt; source, Func&lt;TSource, <span class=\"keyword\">int</span>, <span class=\"keyword\">bool</span>&gt; predicate);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">``` </div><div class=\"line\">  虽然扩展方法通过实例方法语法进行调用的，但是他们却被定义为静态方法。从定义中我们可以看到，它们的第一个参数指定该方法作用于哪个类型，并且该参数以 <span class=\"keyword\">this</span> 修饰符为前缀。</div><div class=\"line\"></div><div class=\"line\">    下面我们自己定义一个Person类和PersonExtend类来扩展方法，来看看编译器究竟做了什么！</div><div class=\"line\">```C</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> wuFengTingHai.Person</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Person</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(<span class=\"built_in\">string</span> name,<span class=\"built_in\">string</span> sex,<span class=\"built_in\">string</span> age)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">            <span class=\"keyword\">this</span>.sex = sex;</div><div class=\"line\">            <span class=\"keyword\">this</span>.age = age;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> name;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.name = value; &#125;</div><div class=\"line\">            get &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> sex;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Sex</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.sex = value; &#125;</div><div class=\"line\">            get &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sex; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> age;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Age</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.age = value; &#125;</div><div class=\"line\">            get &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.age; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"built_in\">string</span>  <span class=\"title\">ToString</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"&#123;0&#125;\"</span>,<span class=\"string\">\"类本身的方法覆盖了同名扩展方法\"</span>);</div><div class=\"line\">        &#125;            </div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>PersonExtend，对Person类进行方法扩展\n</code></pre><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> wuFengTingHai.Person.Extend</div><div class=\"line\">&#123;</div><div class=\"line\">     <span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  <span class=\"keyword\">class</span> PersonExtend</div><div class=\"line\">    &#123;</div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>  <span class=\"title\">GetDescription</span><span class=\"params\">(<span class=\"keyword\">this</span> Person person,<span class=\"built_in\">string</span> msg)</span></span></div><div class=\"line\">         &#123;             </div><div class=\"line\">             <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"&#123;0&#125;      我是&#123;1&#125;,性别&#123;2&#125;,今年&#123;3&#125;岁\"</span>,msg,person.Name,person.Sex,person.Age);</div><div class=\"line\">         &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>客户端调用结果\n\n让我们看一下客户端main方法的IL代码，我们就知道编译器到底干什么了！\n</code></pre><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t .method private hidebysig static void  Main(string[] args) cil managed</div><div class=\"line\">&#123;</div><div class=\"line\">  .entrypoint</div><div class=\"line\">  // Code size       63 (0x3f)</div><div class=\"line\">  .maxstack  4</div><div class=\"line\">  .locals init ([0] class [wuFengTingHai.Person]wuFengTingHai.Person.Person person)</div><div class=\"line\">  IL_0000:  nop</div><div class=\"line\">  IL_0001:  ldstr      bytearray (E0 65 CE 98 2C 54 77 6D )                         // .e..,Twm</div><div class=\"line\">  IL_0006:  ldstr      bytearray (37 75 )                                           // 7u</div><div class=\"line\">  IL_000b:  ldstr      \"20\"</div><div class=\"line\">  IL_0010:  newobj     instance void [wuFengTingHai.Person]wuFengTingHai.Person.Person::.ctor(string,</div><div class=\"line\">                                                                                              string,</div><div class=\"line\">                                                                                              string)</div><div class=\"line\">  IL_0015:  stloc.0</div><div class=\"line\">  IL_0016:  ldloc.0</div><div class=\"line\">  IL_0017:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 59 97 01 60 7B 7C 50 00   // .v.c....Y..`&#123;|P.</div><div class=\"line\">                                  65 00 72 00 73 00 6F 00 6E 00 45 00 78 00 74 00   // e.r.s.o.n.E.x.t.</div><div class=\"line\">                                  65 00 6E 00 64 00 03 8C 28 75 2C 00 )             // e.n.d...(u,.</div><div class=\"line\">                       //直接使用静态类PersonExtend调用</div><div class=\"line\">  IL_001c:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,</div><div class=\"line\">                                                                                                                    string)</div><div class=\"line\">  IL_0021:  call       void [mscorlib]System.Console::WriteLine(string)</div><div class=\"line\">  IL_0026:  nop</div><div class=\"line\">  IL_0027:  ldloc.0</div><div class=\"line\">  IL_0028:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 50 00 65 00 72 00 73 00   // .v.c....P.e.r.s.</div><div class=\"line\">                                  6F 00 6E 00 84 76 9E 5B 8B 4F 03 8C 28 75 2C 00 ) // o.n..v.[.O..(u,.</div><div class=\"line\">                       //直接使用Person的扩展方法调用</div><div class=\"line\">  IL_002d:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,</div><div class=\"line\">                                                                                                                    string)</div><div class=\"line\">  IL_0032:  call       void [mscorlib]System.Console::WriteLine(string)</div><div class=\"line\">  IL_0037:  nop</div><div class=\"line\">  IL_0038:  call       string [mscorlib]System.Console::ReadLine()</div><div class=\"line\">  IL_003d:  pop</div><div class=\"line\">  IL_003e:  ret</div><div class=\"line\">&#125; // end of method Program::Main</div></pre></td></tr></table></figure>\n<pre><code>从IL中我们可以看到扩展方法与其扩展的类之间并没有什么本质的联系，只是编译器跟我们玩的把戏罢了，最终编译器还是将扩展方法转化成静态类的静态方法调用，所以扩展方法不能访问相应类的私有字段和私有方法；至于为什么使用静态类的静态方法，我考虑可能是这样效率相对较高，同时扩展方法作为其他类的扩展，本身类的实例化没有什么意义；     \n\n 如果扩展方法和被扩展类中的方法相同，会怎么样？\n</code></pre><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> wuFengTingHai.Person.Extend</div><div class=\"line\">&#123;</div><div class=\"line\">     <span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  <span class=\"keyword\">class</span> PersonExtend</div><div class=\"line\">    &#123;</div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>  <span class=\"title\">GetDescription</span><span class=\"params\">(<span class=\"keyword\">this</span> Person person,<span class=\"built_in\">string</span> msg)</span></span></div><div class=\"line\">         &#123;             </div><div class=\"line\">             <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"&#123;0&#125;      我是&#123;1&#125;,性别&#123;2&#125;,今年&#123;3&#125;岁\"</span>,msg,person.Name,person.Sex,person.Age);</div><div class=\"line\">         &#125;</div><div class=\"line\"></div><div class=\"line\">       </div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">ToString</span><span class=\"params\">(<span class=\"keyword\">this</span> Person person)</span></span></div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"keyword\">return</span> <span class=\"string\">\"扩展方法能够覆盖原始类的同名方法\"</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>客户端调用代码\n</code></pre><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> wuFengTingHai.Person.Extend;</div><div class=\"line\"><span class=\"keyword\">namespace</span> ExtendMethod</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;            </div><div class=\"line\">            wuFengTingHai.Person.Person person = <span class=\"keyword\">new</span> wuFengTingHai.Person.Person(<span class=\"string\">\"无风听海\"</span>, <span class=\"string\">\"男\"</span>, <span class=\"string\">\"20\"</span>);</div><div class=\"line\">            <span class=\"comment\">//Console.WriteLine(wuFengTingHai.Person.Extend.PersonExtend.GetDescription(person, \"直接通过静态类PersonExtend调用,\"));</span></div><div class=\"line\">            <span class=\"comment\">//Console.WriteLine(person.GetDescription(\"直接通过Person的实例调用,\"));</span></div><div class=\"line\">            Console.WriteLine(person.ToString());</div><div class=\"line\">           </div><div class=\"line\"></div><div class=\"line\">            Console.ReadLine();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>调用结果</p>\n<p>以上我们可以看到编译时，扩展方法的优先级总是比类型本身中定义的实例方法低，所以与接口或类方法具有相同名称和签名的扩展方法永远不会被调用。</p>\n<p>综上进行总结<br>  扩展方法不改变被扩展类的代码，不用重新编译、修改、派生被扩展类<br>  扩展方法不能访问被扩展类的私有成员<br>  扩展方法会被被扩展类的同名方法覆盖，所以实现扩展方法我们需要承担随时被覆盖的风险<br>  扩展方法看似实现了面向对象中扩展对修改说不的特性，但是也违背了面向对象的继承原则，被扩展类的派生类是不能继承扩展扩展方法的，从而又违背了面向对象的多态性。<br>  在我们稳定的引用同一个版本的类库，但是我们没有该类库的源代码，那么我们可以使用扩展方法；但是从项目的可扩展、可维护和版本控制方面来说，都不建议</p>\n<p>  使用扩展方法进行类的扩展。</p>\n","excerpt":"<h2 id=\"扩展方法的讲解\"><a href=\"#扩展方法的讲解\" class=\"headerlink\" title=\"扩展方法的讲解\"></a>扩展方法的讲解</h2><p>C#扩展方法，爱你在心口难开<br>转自<a href=\"http://www.cnblogs.com/wufengtinghai/archive/2011/08/05/2128110.html\">无风听海</a> </p>","more":"<p>什么是扩展方法?好几天了打算记录一下，今天我们来深入研究一下，探究一下扩展方法的实现机制；那么到底什么是扩展方法呢？<br>扩展方法使您能够向现有类型“添加”方法，而无需创建新的派生类型、重新编译或以其他方式修改原始类型。扩展方法是一种特殊的静态方法，但可以像扩展类型上的实例方法一样进行调用。对于用 C# 和 Visual Basic 编写的客户端代码，调用扩展方法与调用在类型中实际定义的方法之间没有明显的差异。<br>也许你并不明白以上的意思，那一点都没有关系，如果我们平时一定经常使用linq标准查询，那么我们就一直在使用扩展方法啦！<br>微软为枚举的集合扩展了很多的标准查询方法，极大的方便了我们的使用！请看下面的例子没有使用扩展方法</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> wuFengTingHai.Person;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> ExtendMethod</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LinqExtend</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> IList&lt;Person&gt; persons = <span class=\"keyword\">new</span> List&lt;Person&gt;();</div><div class=\"line\">        <span class=\"keyword\">public</span> IList&lt;Person&gt; Persons</div><div class=\"line\">        &#123;</div><div class=\"line\">            get &#123;</div><div class=\"line\">                <span class=\"comment\">//删除集合中名称为无风听海的记录，没有引入system.linq,所以不能使用扩展方法</span></div><div class=\"line\">                foreach(Person person in <span class=\"keyword\">this</span>.persons)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (person.Name.Equals(<span class=\"string\">\"无风听海\"</span>))</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"keyword\">this</span>.persons.Remove(person);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;                </div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.persons;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.persons = value; &#125;</div><div class=\"line\">        &#125;        </div><div class=\"line\">    &#125;   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>使用扩展方法</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> wuFengTingHai.Person.Extend</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> LinqExtend</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> IList&lt;Person&gt; persons = <span class=\"keyword\">new</span> List&lt;Person&gt;();</div><div class=\"line\">        <span class=\"keyword\">public</span> IList&lt;Person&gt; Persons</div><div class=\"line\">        &#123;</div><div class=\"line\">            get</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//删除集合中名称为无风听海的记录，引入system.linq的扩展方法</span></div><div class=\"line\">                <span class=\"keyword\">this</span>.persons = <span class=\"keyword\">this</span>.persons.Where(m =&gt; !m.Name.Equals(<span class=\"string\">\"无风听海\"</span>)).ToList&lt;Person&gt;();</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.persons;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.persons = value; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>引入system.linq后,扩展方法的智能提示<br> 从上面的例子中我们可以学到扩展方法的使用方法。那么扩展方法是怎么定义的呢？查看一下Where扩展方法的定义  </p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"meta\">#region Assembly System.Core.dll, v2.0.50727</span></div><div class=\"line\"><span class=\"comment\">// C:\\Program Files\\Reference Assemblies\\Microsoft\\Framework\\v3.5\\System.Core.dll</span></div><div class=\"line\"><span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Runtime.CompilerServices;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> System.Linq</div><div class=\"line\">&#123;    </div><div class=\"line\">    <span class=\"comment\">//为了方便展示，将其他的扩展方法进行了删除精简</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> Enumerable</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> IEnumerable&lt;TSource&gt; Where&lt;TSource&gt;(<span class=\"keyword\">this</span> IEnumerable&lt;TSource&gt; source, Func&lt;TSource, <span class=\"keyword\">bool</span>&gt; predicate);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> IEnumerable&lt;TSource&gt; Where&lt;TSource&gt;(<span class=\"keyword\">this</span> IEnumerable&lt;TSource&gt; source, Func&lt;TSource, <span class=\"keyword\">int</span>, <span class=\"keyword\">bool</span>&gt; predicate);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">``` </div><div class=\"line\">  虽然扩展方法通过实例方法语法进行调用的，但是他们却被定义为静态方法。从定义中我们可以看到，它们的第一个参数指定该方法作用于哪个类型，并且该参数以 <span class=\"keyword\">this</span> 修饰符为前缀。</div><div class=\"line\"></div><div class=\"line\">    下面我们自己定义一个Person类和PersonExtend类来扩展方法，来看看编译器究竟做了什么！</div><div class=\"line\">```C</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> wuFengTingHai.Person</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Person</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Person</span><span class=\"params\">(<span class=\"built_in\">string</span> name,<span class=\"built_in\">string</span> sex,<span class=\"built_in\">string</span> age)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.name = name;</div><div class=\"line\">            <span class=\"keyword\">this</span>.sex = sex;</div><div class=\"line\">            <span class=\"keyword\">this</span>.age = age;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> name;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.name = value; &#125;</div><div class=\"line\">            get &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> sex;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Sex</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.sex = value; &#125;</div><div class=\"line\">            get &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.sex; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"built_in\">string</span> age;</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Age</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">set</span> &#123; <span class=\"keyword\">this</span>.age = value; &#125;</div><div class=\"line\">            get &#123; <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.age; &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">public</span> override <span class=\"built_in\">string</span>  <span class=\"title\">ToString</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"&#123;0&#125;\"</span>,<span class=\"string\">\"类本身的方法覆盖了同名扩展方法\"</span>);</div><div class=\"line\">        &#125;            </div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>PersonExtend，对Person类进行方法扩展\n</code></pre><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> wuFengTingHai.Person.Extend</div><div class=\"line\">&#123;</div><div class=\"line\">     <span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  <span class=\"keyword\">class</span> PersonExtend</div><div class=\"line\">    &#123;</div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>  <span class=\"title\">GetDescription</span><span class=\"params\">(<span class=\"keyword\">this</span> Person person,<span class=\"built_in\">string</span> msg)</span></div><div class=\"line\">         </span>&#123;             </div><div class=\"line\">             <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"&#123;0&#125;      我是&#123;1&#125;,性别&#123;2&#125;,今年&#123;3&#125;岁\"</span>,msg,person.Name,person.Sex,person.Age);</div><div class=\"line\">         &#125;</div><div class=\"line\">        </div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>客户端调用结果\n\n让我们看一下客户端main方法的IL代码，我们就知道编译器到底干什么了！\n</code></pre><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t .method private hidebysig static void  Main(string[] args) cil managed</div><div class=\"line\">&#123;</div><div class=\"line\">  .entrypoint</div><div class=\"line\">  // Code size       63 (0x3f)</div><div class=\"line\">  .maxstack  4</div><div class=\"line\">  .locals init ([0] class [wuFengTingHai.Person]wuFengTingHai.Person.Person person)</div><div class=\"line\">  IL_0000:  nop</div><div class=\"line\">  IL_0001:  ldstr      bytearray (E0 65 CE 98 2C 54 77 6D )                         // .e..,Twm</div><div class=\"line\">  IL_0006:  ldstr      bytearray (37 75 )                                           // 7u</div><div class=\"line\">  IL_000b:  ldstr      \"20\"</div><div class=\"line\">  IL_0010:  newobj     instance void [wuFengTingHai.Person]wuFengTingHai.Person.Person::.ctor(string,</div><div class=\"line\">                                                                                              string,</div><div class=\"line\">                                                                                              string)</div><div class=\"line\">  IL_0015:  stloc.0</div><div class=\"line\">  IL_0016:  ldloc.0</div><div class=\"line\">  IL_0017:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 59 97 01 60 7B 7C 50 00   // .v.c....Y..`&#123;|P.</div><div class=\"line\">                                  65 00 72 00 73 00 6F 00 6E 00 45 00 78 00 74 00   // e.r.s.o.n.E.x.t.</div><div class=\"line\">                                  65 00 6E 00 64 00 03 8C 28 75 2C 00 )             // e.n.d...(u,.</div><div class=\"line\">                       //直接使用静态类PersonExtend调用</div><div class=\"line\">  IL_001c:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,</div><div class=\"line\">                                                                                                                    string)</div><div class=\"line\">  IL_0021:  call       void [mscorlib]System.Console::WriteLine(string)</div><div class=\"line\">  IL_0026:  nop</div><div class=\"line\">  IL_0027:  ldloc.0</div><div class=\"line\">  IL_0028:  ldstr      bytearray (F4 76 A5 63 1A 90 C7 8F 50 00 65 00 72 00 73 00   // .v.c....P.e.r.s.</div><div class=\"line\">                                  6F 00 6E 00 84 76 9E 5B 8B 4F 03 8C 28 75 2C 00 ) // o.n..v.[.O..(u,.</div><div class=\"line\">                       //直接使用Person的扩展方法调用</div><div class=\"line\">  IL_002d:  call       string [wuFengTingHai.Person.Extend]wuFengTingHai.Person.Extend.PersonExtend::GetDescription(class [wuFengTingHai.Person]wuFengTingHai.Person.Person,</div><div class=\"line\">                                                                                                                    string)</div><div class=\"line\">  IL_0032:  call       void [mscorlib]System.Console::WriteLine(string)</div><div class=\"line\">  IL_0037:  nop</div><div class=\"line\">  IL_0038:  call       string [mscorlib]System.Console::ReadLine()</div><div class=\"line\">  IL_003d:  pop</div><div class=\"line\">  IL_003e:  ret</div><div class=\"line\">&#125; // end of method Program::Main</div></pre></td></tr></table></figure>\n<pre><code>从IL中我们可以看到扩展方法与其扩展的类之间并没有什么本质的联系，只是编译器跟我们玩的把戏罢了，最终编译器还是将扩展方法转化成静态类的静态方法调用，所以扩展方法不能访问相应类的私有字段和私有方法；至于为什么使用静态类的静态方法，我考虑可能是这样效率相对较高，同时扩展方法作为其他类的扩展，本身类的实例化没有什么意义；     \n\n 如果扩展方法和被扩展类中的方法相同，会怎么样？\n</code></pre><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> wuFengTingHai.Person.Extend</div><div class=\"line\">&#123;</div><div class=\"line\">     <span class=\"keyword\">public</span> <span class=\"keyword\">static</span>  <span class=\"keyword\">class</span> PersonExtend</div><div class=\"line\">    &#123;</div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>  <span class=\"title\">GetDescription</span><span class=\"params\">(<span class=\"keyword\">this</span> Person person,<span class=\"built_in\">string</span> msg)</span></div><div class=\"line\">         </span>&#123;             </div><div class=\"line\">             <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.Format(<span class=\"string\">\"&#123;0&#125;      我是&#123;1&#125;,性别&#123;2&#125;,今年&#123;3&#125;岁\"</span>,msg,person.Name,person.Sex,person.Age);</div><div class=\"line\">         &#125;</div><div class=\"line\"></div><div class=\"line\">       </div><div class=\"line\">         <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">ToString</span><span class=\"params\">(<span class=\"keyword\">this</span> Person person)</span></div><div class=\"line\">         </span>&#123;</div><div class=\"line\">             <span class=\"keyword\">return</span> <span class=\"string\">\"扩展方法能够覆盖原始类的同名方法\"</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<pre><code>客户端调用代码\n</code></pre><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> wuFengTingHai.Person.Extend;</div><div class=\"line\"><span class=\"keyword\">namespace</span> ExtendMethod</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;            </div><div class=\"line\">            wuFengTingHai.Person.Person person = <span class=\"keyword\">new</span> wuFengTingHai.Person.Person(<span class=\"string\">\"无风听海\"</span>, <span class=\"string\">\"男\"</span>, <span class=\"string\">\"20\"</span>);</div><div class=\"line\">            <span class=\"comment\">//Console.WriteLine(wuFengTingHai.Person.Extend.PersonExtend.GetDescription(person, \"直接通过静态类PersonExtend调用,\"));</span></div><div class=\"line\">            <span class=\"comment\">//Console.WriteLine(person.GetDescription(\"直接通过Person的实例调用,\"));</span></div><div class=\"line\">            Console.WriteLine(person.ToString());</div><div class=\"line\">           </div><div class=\"line\"></div><div class=\"line\">            Console.ReadLine();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>调用结果</p>\n<p>以上我们可以看到编译时，扩展方法的优先级总是比类型本身中定义的实例方法低，所以与接口或类方法具有相同名称和签名的扩展方法永远不会被调用。</p>\n<p>综上进行总结<br>  扩展方法不改变被扩展类的代码，不用重新编译、修改、派生被扩展类<br>  扩展方法不能访问被扩展类的私有成员<br>  扩展方法会被被扩展类的同名方法覆盖，所以实现扩展方法我们需要承担随时被覆盖的风险<br>  扩展方法看似实现了面向对象中扩展对修改说不的特性，但是也违背了面向对象的继承原则，被扩展类的派生类是不能继承扩展扩展方法的，从而又违背了面向对象的多态性。<br>  在我们稳定的引用同一个版本的类库，但是我们没有该类库的源代码，那么我们可以使用扩展方法；但是从项目的可扩展、可维护和版本控制方面来说，都不建议</p>\n<p>  使用扩展方法进行类的扩展。</p>"},{"title":"Hello World","date":"2016-08-10T12:26:04.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2016-08-10 20:26:04\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2017-08-14T09:17:05.758Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayxn001hocm75ydk961c","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"保险","date":"2018-06-19T05:55:41.000Z","+description":"购买保险的总结","_content":"\n保险相关\n\n\n<!--more-->\n## 问题描述\n### PDF操作插件 iText\n{% asset_img 20180611152915.jpg 页脚位置出现水印 %}\n1、 [iText官网](https://itextpdf.com/)","source":"_posts/insurance.md","raw":"---\ntitle: 保险\ndate: 2018-06-19 13:55:41\ntags:\ncategories:\n- 生活\n+description: \"购买保险的总结\"\n---\n\n保险相关\n\n\n<!--more-->\n## 问题描述\n### PDF操作插件 iText\n{% asset_img 20180611152915.jpg 页脚位置出现水印 %}\n1、 [iText官网](https://itextpdf.com/)","slug":"insurance","published":1,"updated":"2018-06-19T06:06:16.268Z","_id":"cjilaayxq001kocm73mlghw28","comments":1,"layout":"post","photos":[],"link":"","content":"<p>保险相关</p>\n<a id=\"more\"></a>\n<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><h3 id=\"PDF操作插件-iText\"><a href=\"#PDF操作插件-iText\" class=\"headerlink\" title=\"PDF操作插件 iText\"></a>PDF操作插件 iText</h3>\n<p>1、 <a href=\"https://itextpdf.com/\" target=\"_blank\" rel=\"external\">iText官网</a></p>\n","excerpt":"<p>保险相关</p>","more":"<h2 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a>问题描述</h2><h3 id=\"PDF操作插件-iText\"><a href=\"#PDF操作插件-iText\" class=\"headerlink\" title=\"PDF操作插件 iText\"></a>PDF操作插件 iText</h3>\n<p>1、 <a href=\"https://itextpdf.com/\">iText官网</a></p>"},{"title":".net获得本机可用端口号","date":"2017-06-19T02:04:06.000Z","_content":"好久没有总结文字了，上周整理过一个IIS自动发布并绑定域名的demo，\n其中有一部分需要读取未使用的服务器端口号用来发布网站，因此\n整理出该方法。\n实现逻辑思路：.net 通过命令提示符窗口获得当前已用端口，再筛选出可用端口。\n<!--more-->\n## 公用方法代码\n```C\npublic string GetFreePort()\n        {\n            string result = \"\";\n            Process p = new Process();\n            p.StartInfo.FileName = \"cmd.exe\";//设置启动的应用程序    \n            p.StartInfo.UseShellExecute = false;//禁止使用操作系统外壳程序启动进程    \n            p.StartInfo.RedirectStandardInput = true;//应用程序的输入从流中读取    \n            p.StartInfo.RedirectStandardOutput = true;//应用程序的输出写入流中    \n            p.StartInfo.RedirectStandardError = true;//将错误信息写入流    \n            p.StartInfo.CreateNoWindow = true;//是否在新窗口中启动进程    \n            p.Start();\n            //p.StandardInput.WriteLine(@\"netstat -a -n>c:\\port.txt\");//将字符串写入文本流    \n            p.StandardInput.WriteLine(@\"netstat -a -n\");\n            p.StandardInput.WriteLine(\"exit\"); //此处必须加退出命令，否则界面会卡死在cmd窗口无法继续执行\n            string str;\n            StreamReader reader=p.StandardOutput;\n            str = reader.ReadLine();\n            ArrayList ports = new ArrayList();\n            ////匹配出端口号\n            string pattern = @\":\\d+\"; //正则表达式字符串\n            Regex regex = new Regex(pattern);\n            while (!reader.EndOfStream)\n            {\n                Match match = regex.Match(str);\n                if (match.Success)\n                {\n                    string port = match.Groups[0].Value.Substring(1);\n                    ports.Add(port);\n                }\n                Console.WriteLine(str);\n                str = reader.ReadLine();\n            }\n            ////可用端口号范围1024－49151\n            for (int i = 1024; i < 49151; i++)\n            {\n                if (!ports.Contains(i))\n                {\n                    result = i.ToString();\n                    break;\n                }\n            }\n            return result;\n        }\n```\n","source":"_posts/net获得本机可用端口号.md","raw":"---\ntitle: .net获得本机可用端口号\ndate: 2017-06-19 10:04:06\ntags:\n- ASP.NET\ncategories:\n- C#基础\n---\n好久没有总结文字了，上周整理过一个IIS自动发布并绑定域名的demo，\n其中有一部分需要读取未使用的服务器端口号用来发布网站，因此\n整理出该方法。\n实现逻辑思路：.net 通过命令提示符窗口获得当前已用端口，再筛选出可用端口。\n<!--more-->\n## 公用方法代码\n```C\npublic string GetFreePort()\n        {\n            string result = \"\";\n            Process p = new Process();\n            p.StartInfo.FileName = \"cmd.exe\";//设置启动的应用程序    \n            p.StartInfo.UseShellExecute = false;//禁止使用操作系统外壳程序启动进程    \n            p.StartInfo.RedirectStandardInput = true;//应用程序的输入从流中读取    \n            p.StartInfo.RedirectStandardOutput = true;//应用程序的输出写入流中    \n            p.StartInfo.RedirectStandardError = true;//将错误信息写入流    \n            p.StartInfo.CreateNoWindow = true;//是否在新窗口中启动进程    \n            p.Start();\n            //p.StandardInput.WriteLine(@\"netstat -a -n>c:\\port.txt\");//将字符串写入文本流    \n            p.StandardInput.WriteLine(@\"netstat -a -n\");\n            p.StandardInput.WriteLine(\"exit\"); //此处必须加退出命令，否则界面会卡死在cmd窗口无法继续执行\n            string str;\n            StreamReader reader=p.StandardOutput;\n            str = reader.ReadLine();\n            ArrayList ports = new ArrayList();\n            ////匹配出端口号\n            string pattern = @\":\\d+\"; //正则表达式字符串\n            Regex regex = new Regex(pattern);\n            while (!reader.EndOfStream)\n            {\n                Match match = regex.Match(str);\n                if (match.Success)\n                {\n                    string port = match.Groups[0].Value.Substring(1);\n                    ports.Add(port);\n                }\n                Console.WriteLine(str);\n                str = reader.ReadLine();\n            }\n            ////可用端口号范围1024－49151\n            for (int i = 1024; i < 49151; i++)\n            {\n                if (!ports.Contains(i))\n                {\n                    result = i.ToString();\n                    break;\n                }\n            }\n            return result;\n        }\n```\n","slug":"net获得本机可用端口号","published":1,"updated":"2018-06-19T06:01:15.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayxt001mocm7zgfl40o3","content":"<p>好久没有总结文字了，上周整理过一个IIS自动发布并绑定域名的demo，<br>其中有一部分需要读取未使用的服务器端口号用来发布网站，因此<br>整理出该方法。<br>实现逻辑思路：.net 通过命令提示符窗口获得当前已用端口，再筛选出可用端口。<br><a id=\"more\"></a></p>\n<h2 id=\"公用方法代码\"><a href=\"#公用方法代码\" class=\"headerlink\" title=\"公用方法代码\"></a>公用方法代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetFreePort</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            Process p = <span class=\"keyword\">new</span> Process();</div><div class=\"line\">            p.StartInfo.FileName = <span class=\"string\">\"cmd.exe\"</span>;<span class=\"comment\">//设置启动的应用程序    </span></div><div class=\"line\">            p.StartInfo.UseShellExecute = <span class=\"literal\">false</span>;<span class=\"comment\">//禁止使用操作系统外壳程序启动进程    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardInput = <span class=\"literal\">true</span>;<span class=\"comment\">//应用程序的输入从流中读取    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardOutput = <span class=\"literal\">true</span>;<span class=\"comment\">//应用程序的输出写入流中    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardError = <span class=\"literal\">true</span>;<span class=\"comment\">//将错误信息写入流    </span></div><div class=\"line\">            p.StartInfo.CreateNoWindow = <span class=\"literal\">true</span>;<span class=\"comment\">//是否在新窗口中启动进程    </span></div><div class=\"line\">            p.Start();</div><div class=\"line\">            <span class=\"comment\">//p.StandardInput.WriteLine(@\"netstat -a -n&gt;c:\\port.txt\");//将字符串写入文本流    </span></div><div class=\"line\">            p.StandardInput.WriteLine(@<span class=\"string\">\"netstat -a -n\"</span>);</div><div class=\"line\">            p.StandardInput.WriteLine(<span class=\"string\">\"exit\"</span>); <span class=\"comment\">//此处必须加退出命令，否则界面会卡死在cmd窗口无法继续执行</span></div><div class=\"line\">            <span class=\"built_in\">string</span> str;</div><div class=\"line\">            StreamReader reader=p.StandardOutput;</div><div class=\"line\">            str = reader.ReadLine();</div><div class=\"line\">            ArrayList ports = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">            <span class=\"comment\">////匹配出端口号</span></div><div class=\"line\">            <span class=\"built_in\">string</span> pattern = @<span class=\"string\">\":\\d+\"</span>; <span class=\"comment\">//正则表达式字符串</span></div><div class=\"line\">            Regex regex = <span class=\"keyword\">new</span> Regex(pattern);</div><div class=\"line\">            <span class=\"keyword\">while</span> (!reader.EndOfStream)</div><div class=\"line\">            &#123;</div><div class=\"line\">                Match match = regex.Match(str);</div><div class=\"line\">                <span class=\"keyword\">if</span> (match.Success)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> port = match.Groups[<span class=\"number\">0</span>].Value.Substring(<span class=\"number\">1</span>);</div><div class=\"line\">                    ports.Add(port);</div><div class=\"line\">                &#125;</div><div class=\"line\">                Console.WriteLine(str);</div><div class=\"line\">                str = reader.ReadLine();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">////可用端口号范围1024－49151</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1024</span>; i &lt; <span class=\"number\">49151</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (!ports.Contains(i))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    result = i.ToString();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>\n","excerpt":"<p>好久没有总结文字了，上周整理过一个IIS自动发布并绑定域名的demo，<br>其中有一部分需要读取未使用的服务器端口号用来发布网站，因此<br>整理出该方法。<br>实现逻辑思路：.net 通过命令提示符窗口获得当前已用端口，再筛选出可用端口。<br>","more":"</p>\n<h2 id=\"公用方法代码\"><a href=\"#公用方法代码\" class=\"headerlink\" title=\"公用方法代码\"></a>公用方法代码</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">string</span> <span class=\"title\">GetFreePort</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            Process p = <span class=\"keyword\">new</span> Process();</div><div class=\"line\">            p.StartInfo.FileName = <span class=\"string\">\"cmd.exe\"</span>;<span class=\"comment\">//设置启动的应用程序    </span></div><div class=\"line\">            p.StartInfo.UseShellExecute = <span class=\"literal\">false</span>;<span class=\"comment\">//禁止使用操作系统外壳程序启动进程    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardInput = <span class=\"literal\">true</span>;<span class=\"comment\">//应用程序的输入从流中读取    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardOutput = <span class=\"literal\">true</span>;<span class=\"comment\">//应用程序的输出写入流中    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardError = <span class=\"literal\">true</span>;<span class=\"comment\">//将错误信息写入流    </span></div><div class=\"line\">            p.StartInfo.CreateNoWindow = <span class=\"literal\">true</span>;<span class=\"comment\">//是否在新窗口中启动进程    </span></div><div class=\"line\">            p.Start();</div><div class=\"line\">            <span class=\"comment\">//p.StandardInput.WriteLine(@\"netstat -a -n&gt;c:\\port.txt\");//将字符串写入文本流    </span></div><div class=\"line\">            p.StandardInput.WriteLine(@<span class=\"string\">\"netstat -a -n\"</span>);</div><div class=\"line\">            p.StandardInput.WriteLine(<span class=\"string\">\"exit\"</span>); <span class=\"comment\">//此处必须加退出命令，否则界面会卡死在cmd窗口无法继续执行</span></div><div class=\"line\">            <span class=\"built_in\">string</span> str;</div><div class=\"line\">            StreamReader reader=p.StandardOutput;</div><div class=\"line\">            str = reader.ReadLine();</div><div class=\"line\">            ArrayList ports = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">            <span class=\"comment\">////匹配出端口号</span></div><div class=\"line\">            <span class=\"built_in\">string</span> pattern = @<span class=\"string\">\":\\d+\"</span>; <span class=\"comment\">//正则表达式字符串</span></div><div class=\"line\">            Regex regex = <span class=\"keyword\">new</span> Regex(pattern);</div><div class=\"line\">            <span class=\"keyword\">while</span> (!reader.EndOfStream)</div><div class=\"line\">            &#123;</div><div class=\"line\">                Match match = regex.Match(str);</div><div class=\"line\">                <span class=\"keyword\">if</span> (match.Success)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> port = match.Groups[<span class=\"number\">0</span>].Value.Substring(<span class=\"number\">1</span>);</div><div class=\"line\">                    ports.Add(port);</div><div class=\"line\">                &#125;</div><div class=\"line\">                Console.WriteLine(str);</div><div class=\"line\">                str = reader.ReadLine();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">////可用端口号范围1024－49151</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1024</span>; i &lt; <span class=\"number\">49151</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (!ports.Contains(i))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    result = i.ToString();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div></pre></td></tr></table></figure>"},{"title":"window服务守护外部程序不被关闭","date":"2017-01-21T06:34:11.000Z","_content":"1、需求描述：保证程序能够一直运行，不会关闭。\n2、实现过程：创建windows服务并保持自动运行，该服务定时检查程序进程是否关闭，如果关闭则启动。\n3、实现过程中遇到的问题：windows服务直接打开外部程序，该程序只存在于任务管理器中的\n进程中，界面无法直接显示。\n\n<!--more-->\n服务定时访问代码\n\n```C\n\npublic partial class Service1 : ServiceBase\n    {\n        private System.Timers.Timer aTimer;//定时器\n        public Service1()\n        {\n            InitializeComponent();\n        }\n\n        protected override void OnStart(string[] args)\n        {\n            // As creating a child process might be a time consuming operation,\n            // its better to do that in a separate thread than blocking the main thread.\n            //System.Threading.Thread ProcessCreationThread = new System.Threading.Thread(MyThreadFunc);\n            //ProcessCreationThread.Start();\n            MyThreadFunc();\n        }\n        // This thread function would launch a child process \n        // in the interactive session of the logged-on user.\n        public void MyThreadFunc()\n        {\n            Log.WriteLogToTxt(\"打开多屏系统\");\n            aTimer = new System.Timers.Timer();\n            //第一次马上打开\n            timer1_Tick(null,null);\n            //到达时间的时候执行事件；\n            aTimer.Elapsed += new ElapsedEventHandler(timer1_Tick);\n            // 设置引发时间的时间间隔 此处设置为1秒（1000毫秒） \n            aTimer.Interval = Convert.ToDouble(AppConfig.GetApp(\"INTERVAL\"));\n            //设置是执行一次（false）还是一直执行(true)；\n            aTimer.AutoReset = true;\n            //是否执行System.Timers.Timer.Elapsed事件；\n            aTimer.Enabled = true;\n            aTimer.Start();\n\n        }\n        /// <summary>\n        /// 定时事件\n        /// </summary>\n        /// <param name=\"source\">源对象</param>\n        /// <param name=\"e\">ElapsedEventArgs事件对象</param>\n        protected void timer1_Tick(object source, ElapsedEventArgs e)\n        {\n            bool isProcessResult = IsProcessStarted(\"IocpServer\");//判断是否运行\n            if (!isProcessResult)\n            {\n                //Debugger.Launch();调试debug\n                Log.WriteLogToTxt(\"自动开始运行\");\n                //此处可以直接将exe运行地址赋值如c:\\1.exe\n                string applicationLocation = AppConfig.GetApp(\"ApplicationLocation\");\n                Log.WriteLogToTxt(applicationLocation);\n                CreateProcessAsUserWrapper.LaunchChildProcess(applicationLocation);\n            }\n        }\n\n        private void myprocess_Exited(object sender, EventArgs e)//被触发的程序\n        {\n            Log.WriteLogToTxt(\"关闭多屏系统\");\n        }\n\n        /// <summary>\n        /// 判断程序是否运行\n        /// </summary>\n        /// <param name=\"processName\"></param>\n        /// <returns></returns>\n        private bool IsProcessStarted(string processName)\n        {\n            Process[] temp = Process.GetProcessesByName(processName);\n\n            if (temp.Length > 0)\n            {\n                string tempName = \"\";\n                foreach (Process process in temp)\n                {\n                    tempName += process.ProcessName + \";\";\n                }\n                //Log.WriteLogToTxt(\"程序名称\" + tempName);\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        protected override void OnStop()\n        {\n        }\n    }\n\n```\n### [微软demo](https://code.msdn.microsoft.com/CSCreateProcessAsUserFromSe-b682134e/sourcecode?fileId=50832&pathId=163624599)\n","source":"_posts/window服务守护外部程序.md","raw":"---\ntitle: window服务守护外部程序不被关闭\ndate: 2017-01-21 14:34:11\ntags:\n- WinForm\ncategories:\n- C#基础\n---\n1、需求描述：保证程序能够一直运行，不会关闭。\n2、实现过程：创建windows服务并保持自动运行，该服务定时检查程序进程是否关闭，如果关闭则启动。\n3、实现过程中遇到的问题：windows服务直接打开外部程序，该程序只存在于任务管理器中的\n进程中，界面无法直接显示。\n\n<!--more-->\n服务定时访问代码\n\n```C\n\npublic partial class Service1 : ServiceBase\n    {\n        private System.Timers.Timer aTimer;//定时器\n        public Service1()\n        {\n            InitializeComponent();\n        }\n\n        protected override void OnStart(string[] args)\n        {\n            // As creating a child process might be a time consuming operation,\n            // its better to do that in a separate thread than blocking the main thread.\n            //System.Threading.Thread ProcessCreationThread = new System.Threading.Thread(MyThreadFunc);\n            //ProcessCreationThread.Start();\n            MyThreadFunc();\n        }\n        // This thread function would launch a child process \n        // in the interactive session of the logged-on user.\n        public void MyThreadFunc()\n        {\n            Log.WriteLogToTxt(\"打开多屏系统\");\n            aTimer = new System.Timers.Timer();\n            //第一次马上打开\n            timer1_Tick(null,null);\n            //到达时间的时候执行事件；\n            aTimer.Elapsed += new ElapsedEventHandler(timer1_Tick);\n            // 设置引发时间的时间间隔 此处设置为1秒（1000毫秒） \n            aTimer.Interval = Convert.ToDouble(AppConfig.GetApp(\"INTERVAL\"));\n            //设置是执行一次（false）还是一直执行(true)；\n            aTimer.AutoReset = true;\n            //是否执行System.Timers.Timer.Elapsed事件；\n            aTimer.Enabled = true;\n            aTimer.Start();\n\n        }\n        /// <summary>\n        /// 定时事件\n        /// </summary>\n        /// <param name=\"source\">源对象</param>\n        /// <param name=\"e\">ElapsedEventArgs事件对象</param>\n        protected void timer1_Tick(object source, ElapsedEventArgs e)\n        {\n            bool isProcessResult = IsProcessStarted(\"IocpServer\");//判断是否运行\n            if (!isProcessResult)\n            {\n                //Debugger.Launch();调试debug\n                Log.WriteLogToTxt(\"自动开始运行\");\n                //此处可以直接将exe运行地址赋值如c:\\1.exe\n                string applicationLocation = AppConfig.GetApp(\"ApplicationLocation\");\n                Log.WriteLogToTxt(applicationLocation);\n                CreateProcessAsUserWrapper.LaunchChildProcess(applicationLocation);\n            }\n        }\n\n        private void myprocess_Exited(object sender, EventArgs e)//被触发的程序\n        {\n            Log.WriteLogToTxt(\"关闭多屏系统\");\n        }\n\n        /// <summary>\n        /// 判断程序是否运行\n        /// </summary>\n        /// <param name=\"processName\"></param>\n        /// <returns></returns>\n        private bool IsProcessStarted(string processName)\n        {\n            Process[] temp = Process.GetProcessesByName(processName);\n\n            if (temp.Length > 0)\n            {\n                string tempName = \"\";\n                foreach (Process process in temp)\n                {\n                    tempName += process.ProcessName + \";\";\n                }\n                //Log.WriteLogToTxt(\"程序名称\" + tempName);\n                return true;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        protected override void OnStop()\n        {\n        }\n    }\n\n```\n### [微软demo](https://code.msdn.microsoft.com/CSCreateProcessAsUserFromSe-b682134e/sourcecode?fileId=50832&pathId=163624599)\n","slug":"window服务守护外部程序","published":1,"updated":"2018-01-11T01:52:24.274Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayy0001oocm75yjgtaw1","content":"<p>1、需求描述：保证程序能够一直运行，不会关闭。<br>2、实现过程：创建windows服务并保持自动运行，该服务定时检查程序进程是否关闭，如果关闭则启动。<br>3、实现过程中遇到的问题：windows服务直接打开外部程序，该程序只存在于任务管理器中的<br>进程中，界面无法直接显示。</p>\n<a id=\"more\"></a>\n<p>服务定时访问代码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> Service1 : ServiceBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> System.Timers.Timer aTimer;<span class=\"comment\">//定时器</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Service1</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            InitializeComponent();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> override <span class=\"keyword\">void</span> <span class=\"title\">OnStart</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">// As creating a child process might be a time consuming operation,</span></div><div class=\"line\">            <span class=\"comment\">// its better to do that in a separate thread than blocking the main thread.</span></div><div class=\"line\">            <span class=\"comment\">//System.Threading.Thread ProcessCreationThread = new System.Threading.Thread(MyThreadFunc);</span></div><div class=\"line\">            <span class=\"comment\">//ProcessCreationThread.Start();</span></div><div class=\"line\">            MyThreadFunc();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// This thread function would launch a child process </span></div><div class=\"line\">        <span class=\"comment\">// in the interactive session of the logged-on user.</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">MyThreadFunc</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Log.WriteLogToTxt(<span class=\"string\">\"打开多屏系统\"</span>);</div><div class=\"line\">            aTimer = <span class=\"keyword\">new</span> System.Timers.Timer();</div><div class=\"line\">            <span class=\"comment\">//第一次马上打开</span></div><div class=\"line\">            timer1_Tick(null,null);</div><div class=\"line\">            <span class=\"comment\">//到达时间的时候执行事件；</span></div><div class=\"line\">            aTimer.Elapsed += <span class=\"keyword\">new</span> ElapsedEventHandler(timer1_Tick);</div><div class=\"line\">            <span class=\"comment\">// 设置引发时间的时间间隔 此处设置为1秒（1000毫秒） </span></div><div class=\"line\">            aTimer.Interval = Convert.ToDouble(AppConfig.GetApp(<span class=\"string\">\"INTERVAL\"</span>));</div><div class=\"line\">            <span class=\"comment\">//设置是执行一次（false）还是一直执行(true)；</span></div><div class=\"line\">            aTimer.AutoReset = <span class=\"literal\">true</span>;</div><div class=\"line\">            <span class=\"comment\">//是否执行System.Timers.Timer.Elapsed事件；</span></div><div class=\"line\">            aTimer.Enabled = <span class=\"literal\">true</span>;</div><div class=\"line\">            aTimer.Start();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 定时事件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"source\"&gt;源对象&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"e\"&gt;ElapsedEventArgs事件对象&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">timer1_Tick</span><span class=\"params\">(object source, ElapsedEventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> isProcessResult = IsProcessStarted(<span class=\"string\">\"IocpServer\"</span>);<span class=\"comment\">//判断是否运行</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!isProcessResult)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//Debugger.Launch();调试debug</span></div><div class=\"line\">                Log.WriteLogToTxt(<span class=\"string\">\"自动开始运行\"</span>);</div><div class=\"line\">                <span class=\"comment\">//此处可以直接将exe运行地址赋值如c:\\1.exe</span></div><div class=\"line\">                <span class=\"built_in\">string</span> applicationLocation = AppConfig.GetApp(<span class=\"string\">\"ApplicationLocation\"</span>);</div><div class=\"line\">                Log.WriteLogToTxt(applicationLocation);</div><div class=\"line\">                CreateProcessAsUserWrapper.LaunchChildProcess(applicationLocation);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">myprocess_Exited</span><span class=\"params\">(object sender, EventArgs e)</span><span class=\"comment\">//被触发的程序</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Log.WriteLogToTxt(<span class=\"string\">\"关闭多屏系统\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 判断程序是否运行</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"processName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsProcessStarted</span><span class=\"params\">(<span class=\"built_in\">string</span> processName)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Process[] temp = Process.GetProcessesByName(processName);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (temp.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> tempName = <span class=\"string\">\"\"</span>;</div><div class=\"line\">                foreach (Process process in temp)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    tempName += process.ProcessName + <span class=\"string\">\";\"</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"comment\">//Log.WriteLogToTxt(\"程序名称\" + tempName);</span></div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> override <span class=\"keyword\">void</span> <span class=\"title\">OnStop</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"微软demo\"><a href=\"#微软demo\" class=\"headerlink\" title=\"微软demo\"></a><a href=\"https://code.msdn.microsoft.com/CSCreateProcessAsUserFromSe-b682134e/sourcecode?fileId=50832&amp;pathId=163624599\" target=\"_blank\" rel=\"external\">微软demo</a></h3>","excerpt":"<p>1、需求描述：保证程序能够一直运行，不会关闭。<br>2、实现过程：创建windows服务并保持自动运行，该服务定时检查程序进程是否关闭，如果关闭则启动。<br>3、实现过程中遇到的问题：windows服务直接打开外部程序，该程序只存在于任务管理器中的<br>进程中，界面无法直接显示。</p>","more":"<p>服务定时访问代码</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> Service1 : ServiceBase</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> System.Timers.Timer aTimer;<span class=\"comment\">//定时器</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Service1</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            InitializeComponent();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> override <span class=\"keyword\">void</span> <span class=\"title\">OnStart</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">// As creating a child process might be a time consuming operation,</span></div><div class=\"line\">            <span class=\"comment\">// its better to do that in a separate thread than blocking the main thread.</span></div><div class=\"line\">            <span class=\"comment\">//System.Threading.Thread ProcessCreationThread = new System.Threading.Thread(MyThreadFunc);</span></div><div class=\"line\">            <span class=\"comment\">//ProcessCreationThread.Start();</span></div><div class=\"line\">            MyThreadFunc();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">// This thread function would launch a child process </span></div><div class=\"line\">        <span class=\"comment\">// in the interactive session of the logged-on user.</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">MyThreadFunc</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Log.WriteLogToTxt(<span class=\"string\">\"打开多屏系统\"</span>);</div><div class=\"line\">            aTimer = <span class=\"keyword\">new</span> System.Timers.Timer();</div><div class=\"line\">            <span class=\"comment\">//第一次马上打开</span></div><div class=\"line\">            timer1_Tick(null,null);</div><div class=\"line\">            <span class=\"comment\">//到达时间的时候执行事件；</span></div><div class=\"line\">            aTimer.Elapsed += <span class=\"keyword\">new</span> ElapsedEventHandler(timer1_Tick);</div><div class=\"line\">            <span class=\"comment\">// 设置引发时间的时间间隔 此处设置为1秒（1000毫秒） </span></div><div class=\"line\">            aTimer.Interval = Convert.ToDouble(AppConfig.GetApp(<span class=\"string\">\"INTERVAL\"</span>));</div><div class=\"line\">            <span class=\"comment\">//设置是执行一次（false）还是一直执行(true)；</span></div><div class=\"line\">            aTimer.AutoReset = <span class=\"literal\">true</span>;</div><div class=\"line\">            <span class=\"comment\">//是否执行System.Timers.Timer.Elapsed事件；</span></div><div class=\"line\">            aTimer.Enabled = <span class=\"literal\">true</span>;</div><div class=\"line\">            aTimer.Start();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 定时事件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"source\"&gt;源对象&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"e\"&gt;ElapsedEventArgs事件对象&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">timer1_Tick</span><span class=\"params\">(object source, ElapsedEventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">bool</span> isProcessResult = IsProcessStarted(<span class=\"string\">\"IocpServer\"</span>);<span class=\"comment\">//判断是否运行</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!isProcessResult)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//Debugger.Launch();调试debug</span></div><div class=\"line\">                Log.WriteLogToTxt(<span class=\"string\">\"自动开始运行\"</span>);</div><div class=\"line\">                <span class=\"comment\">//此处可以直接将exe运行地址赋值如c:\\1.exe</span></div><div class=\"line\">                <span class=\"built_in\">string</span> applicationLocation = AppConfig.GetApp(<span class=\"string\">\"ApplicationLocation\"</span>);</div><div class=\"line\">                Log.WriteLogToTxt(applicationLocation);</div><div class=\"line\">                CreateProcessAsUserWrapper.LaunchChildProcess(applicationLocation);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">myprocess_Exited</span><span class=\"params\">(object sender, EventArgs e)</span><span class=\"comment\">//被触发的程序</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Log.WriteLogToTxt(<span class=\"string\">\"关闭多屏系统\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 判断程序是否运行</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"processName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsProcessStarted</span><span class=\"params\">(<span class=\"built_in\">string</span> processName)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Process[] temp = Process.GetProcessesByName(processName);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (temp.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> tempName = <span class=\"string\">\"\"</span>;</div><div class=\"line\">                foreach (Process process in temp)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    tempName += process.ProcessName + <span class=\"string\">\";\"</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"comment\">//Log.WriteLogToTxt(\"程序名称\" + tempName);</span></div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> override <span class=\"keyword\">void</span> <span class=\"title\">OnStop</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"微软demo\"><a href=\"#微软demo\" class=\"headerlink\" title=\"微软demo\"></a><a href=\"https://code.msdn.microsoft.com/CSCreateProcessAsUserFromSe-b682134e/sourcecode?fileId=50832&amp;pathId=163624599\">微软demo</a></h3>"},{"title":".net动态控制发布IIS网站（一）","date":"2017-06-20T08:22:31.000Z","+description":"变相实现SAAS，.net控制动态发布网站","_content":"# 资料\n1.[Microsoft.Web.Administration  IIS操作API](https://msdn.microsoft.com/en-us/library/microsoft.web.administration)\n\n# 代码简介\n主要逻辑功能 拷贝网站发布文件夹->IIS创建站点(获得空闲端口)->绑定域名\n\n涉及到两个工具类 \n1、IISManager IIS管理类\n2、DirFileHelper 文件及文件夹操作类\n<!--more-->\n## 代码详情\n```C\nusing CommonTools;\nusing System;\nusing System.Collections;\nnamespace IIS\n{\n    class Program\n    {\n\n        static void Main(string[] args)\n        {\n            string folderName = \"D:\\\\WebSiteTest\";//发布网站目录\n            string physicsPath = \"D:\\\\WebSite0421\";//模板网站目录\n\n\n\n            ArrayList ports = IISManager.GetAllUsePorts();\n            for (int i = 0; i < 30; i++)\n            {\n                string port = IISManager.GetFreePort(ref ports);\n                //Console.WriteLine(port);\n                string currentWebsiteName = \"WebSite\" + i;\n                string currentPath = folderName + \"\\\\\" + currentWebsiteName;\n                DirFileHelper.CopyFolder(physicsPath, currentPath);\n                IISManager.CreateWebSite(currentWebsiteName, currentPath, port);\n                IISManager.BindHost(currentWebsiteName, \"www.baidu.com\" + i);\n\n                System.Console.WriteLine(\"网站名：\" + currentWebsiteName + \"端口号：\" + port + \"路径：\" + currentPath + \" 域名:\" + \"www.baidu.com\" + i);\n            }\n            //for (int i = 0; i < 30; i++)\n            //{\n            //    IISManager.DeleteWebSite(\"WebSite\" + i);\n                \n            //}\n\n            Console.ReadKey();\n        }\n\n\n    }\n}\n\n```\n```C\nusing Microsoft.Web.Administration;\nusing System;\nusing System.Collections;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Text.RegularExpressions;\n\nnamespace CommonTools\n{\n    public static class IISManager\n    {\n        private static ServerManager serverManager = new ServerManager();\n        /// <summary>\n        /// 创建站点\n        /// </summary>\n        /// <param name=\"websiteName\">站点名</param>\n        /// <param name=\"physicsPath\">物理路径</param>\n        /// <param name=\"ip\">ip地址</param>\n        /// <param name=\"port\">端口号</param>\n        /// <param name=\"poolver\">应用程序池的DOTNET FRAMEWORK版本</param>\n        /// <param name=\"binding\">使用的协议</param>\n        public static void CreateWebSite(string websiteName, string physicsPath,\n            string port, string ip = \"*\", string poolver = \"v4.0\", string binding = \"http\")\n        {\n            try\n            {\n                string fullIP = ip + \":\" + port + \":\";\n\n                ApplicationPool newPool = serverManager.ApplicationPools.Add(websiteName);\n                newPool.ManagedRuntimeVersion = poolver;\n\n                Site mySide = serverManager.Sites.Add(websiteName, binding, fullIP, physicsPath);\n                mySide.Applications[0].ApplicationPoolName = websiteName;\n\n                serverManager.CommitChanges();\n            }\n            catch (Exception error)\n            {\n\n            }\n\n        }\n\n\n        /// <summary>\n        /// 删除站点\n        /// </summary>\n        /// <param name=\"websiteName\">站点名称</param>\n        public static void DeleteWebSite(string websiteName)\n        {\n\n            serverManager.Sites.Remove(serverManager.Sites[websiteName]);\n            serverManager.ApplicationPools.Remove(serverManager.ApplicationPools[websiteName]);\n            serverManager.CommitChanges();\n        }\n\n\n        /// <summary>\n        /// 获得空闲端口\n        /// </summary>\n        /// <returns></returns>\n        public static ArrayList GetAllUsePorts()\n        {\n            \n            Process p = new Process();\n            p.StartInfo.FileName = \"cmd.exe\";//设置启动的应用程序    \n            p.StartInfo.UseShellExecute = false;//禁止使用操作系统外壳程序启动进程    \n            p.StartInfo.RedirectStandardInput = true;//应用程序的输入从流中读取    \n            p.StartInfo.RedirectStandardOutput = true;//应用程序的输出写入流中    \n            p.StartInfo.RedirectStandardError = true;//将错误信息写入流    \n            p.StartInfo.CreateNoWindow = true;//是否在新窗口中启动进程    \n            p.Start();\n            //p.StandardInput.WriteLine(@\"netstat -a -n>c:\\port.txt\");//将字符串写入文本流    \n            p.StandardInput.WriteLine(@\"netstat -a -n\");\n            p.StandardInput.WriteLine(\"exit\");\n            string str;\n            StreamReader reader = p.StandardOutput;\n            str = reader.ReadLine();\n            ArrayList ports = new ArrayList();\n            ////匹配出端口号\n            string pattern = @\":\\d+\"; //正则表达式字符串\n            Regex regex = new Regex(pattern);\n            while (!reader.EndOfStream)\n            {\n                Match match = regex.Match(str);\n                if (match.Success)\n                {\n                    string port = match.Groups[0].Value.Substring(1);\n                    ports.Add(int.Parse(port));\n                }\n                str = reader.ReadLine();\n            }\n           \n            return ports;\n        }\n\n\n        /// <summary>\n        /// 追加绑定域名\n        /// </summary>\n        /// <param name=\"websiteName\">站点名</param>\n        /// <param name=\"hostName\">域名</param>\n        public static void BindHost(string websiteName, string hostName)\n        {\n            BindingCollection bindings = serverManager.Sites[websiteName].Bindings;\n            for (int i = 1; i < bindings.Count; i++)\n            {\n                serverManager.Sites[websiteName].Bindings.RemoveAt(i);\n            }\n            serverManager.Sites[websiteName].Bindings.Add(\"*:80:\" + hostName, \"http\");\n            serverManager.CommitChanges();\n        }\n\n\n        /// <summary>\n        /// 获得当前IIS网站运行列表\n        /// </summary>\n        public static void GetListOfIIS()\n        {\n\n            string StateStr = \"\";\n            for (int i = 0; i < serverManager.Sites.Count; i++)\n            {\n\n                switch (serverManager.Sites[i].State)\n                {\n                    case ObjectState.Started:\n                        {\n                            StateStr = \"正常\"; break;\n                        }\n                    case ObjectState.Starting:\n                        {\n                            StateStr = \"正在启动\"; break;\n                        }\n                    case ObjectState.Stopping:\n                        {\n                            StateStr = \"正在关闭\"; break;\n                        }\n                    case ObjectState.Stopped:\n                        {\n                            StateStr = \"关闭\"; break;\n                        }\n                }\n                Console.WriteLine(serverManager.Sites[i].Name + \"【\" + StateStr + \"】\");\n            }\n        }\n\n        /// <summary>\n        /// 获得当前IIS站点状态\n        /// </summary>\n        public static void ReadConfig()\n        {\n\n\n            System.Console.WriteLine(\"应用程序池默认设置：\");\n            System.Console.WriteLine(\"\\t常规：\");\n            System.Console.WriteLine(\"\\t\\t.NET Framework 版本：{0}\", serverManager.ApplicationPoolDefaults.ManagedRuntimeVersion);\n            System.Console.WriteLine(\"\\t\\t队列长度：{0}\", serverManager.ApplicationPoolDefaults.QueueLength);\n            System.Console.WriteLine(\"\\t\\t托管管道模式：{0}\", serverManager.ApplicationPoolDefaults.ManagedPipelineMode.ToString());\n            System.Console.WriteLine(\"\\t\\t自动启动：{0}\", serverManager.ApplicationPoolDefaults.AutoStart);\n\n            System.Console.WriteLine(\"\\tCPU：\");\n            System.Console.WriteLine(\"\\t\\t处理器关联掩码：{0}\", serverManager.ApplicationPoolDefaults.Cpu.SmpProcessorAffinityMask);\n            System.Console.WriteLine(\"\\t\\t限制：{0}\", serverManager.ApplicationPoolDefaults.Cpu.Limit);\n            System.Console.WriteLine(\"\\t\\t限制操作：{0}\", serverManager.ApplicationPoolDefaults.Cpu.Action.ToString());\n            System.Console.WriteLine(\"\\t\\t限制间隔（分钟）：{0}\", serverManager.ApplicationPoolDefaults.Cpu.ResetInterval.TotalMinutes);\n            System.Console.WriteLine(\"\\t\\t已启用处理器关联：{0}\", serverManager.ApplicationPoolDefaults.Cpu.SmpAffinitized);\n\n            System.Console.WriteLine(\"\\t回收：\");\n            System.Console.WriteLine(\"\\t\\t发生配置更改时禁止回收：{0}\", serverManager.ApplicationPoolDefaults.Recycling.DisallowRotationOnConfigChange);\n            System.Console.WriteLine(\"\\t\\t固定时间间隔（分钟）：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Time.TotalMinutes);\n            System.Console.WriteLine(\"\\t\\t禁用重叠回收：{0}\", serverManager.ApplicationPoolDefaults.Recycling.DisallowOverlappingRotation);\n            System.Console.WriteLine(\"\\t\\t请求限制：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Requests);\n            System.Console.WriteLine(\"\\t\\t虚拟内存限制（KB）：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Memory);\n            System.Console.WriteLine(\"\\t\\t专用内存限制（KB）：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.PrivateMemory);\n            System.Console.WriteLine(\"\\t\\t特定时间：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Schedule.ToString());\n            System.Console.WriteLine(\"\\t\\t生成回收事件日志条目：{0}\", serverManager.ApplicationPoolDefaults.Recycling.LogEventOnRecycle.ToString());\n\n            System.Console.WriteLine(\"\\t进程孤立：\");\n            System.Console.WriteLine(\"\\t\\t可执行文件：{0}\", serverManager.ApplicationPoolDefaults.Failure.OrphanActionExe);\n            System.Console.WriteLine(\"\\t\\t可执行文件参数：{0}\", serverManager.ApplicationPoolDefaults.Failure.OrphanActionParams);\n            System.Console.WriteLine(\"\\t\\t已启用：{0}\", serverManager.ApplicationPoolDefaults.Failure.OrphanWorkerProcess);\n\n            System.Console.WriteLine(\"\\t进程模型：\");\n            System.Console.WriteLine(\"\\t\\tPing 间隔（秒）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.PingInterval.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\tPing 最大响应时间（秒）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.PingResponseTime.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\t标识：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.IdentityType);\n            System.Console.WriteLine(\"\\t\\t用户名：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.UserName);\n            System.Console.WriteLine(\"\\t\\t密码：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.Password);\n            System.Console.WriteLine(\"\\t\\t关闭时间限制（秒）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.ShutdownTimeLimit.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\t加载用户配置文件：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.LoadUserProfile);\n            System.Console.WriteLine(\"\\t\\t启动时间限制（秒）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.StartupTimeLimit.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\t允许 Ping：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.PingingEnabled);\n            System.Console.WriteLine(\"\\t\\t闲置超时（分钟）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.IdleTimeout.TotalMinutes);\n            System.Console.WriteLine(\"\\t\\t最大工作进程数：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.MaxProcesses);\n\n            System.Console.WriteLine(\"\\t快速故障防护：\");\n            System.Console.WriteLine(\"\\t\\t“服务不可用”响应类型：{0}\", serverManager.ApplicationPoolDefaults.Failure.LoadBalancerCapabilities.ToString());\n            System.Console.WriteLine(\"\\t\\t故障间隔（分钟）：{0}\", serverManager.ApplicationPoolDefaults.Failure.RapidFailProtectionInterval.TotalMinutes);\n            System.Console.WriteLine(\"\\t\\t关闭可执行文件：{0}\", serverManager.ApplicationPoolDefaults.Failure.AutoShutdownExe);\n            System.Console.WriteLine(\"\\t\\t关闭可执行文件参数：{0}\", serverManager.ApplicationPoolDefaults.Failure.AutoShutdownParams);\n            System.Console.WriteLine(\"\\t\\t已启用：{0}\", serverManager.ApplicationPoolDefaults.Failure.RapidFailProtection);\n            System.Console.WriteLine(\"\\t\\t最大故障数：{0}\", serverManager.ApplicationPoolDefaults.Failure.RapidFailProtectionMaxCrashes);\n            System.Console.WriteLine(\"\\t\\t允许32位应用程序运行在64位 Windows 上：{0}\", serverManager.ApplicationPoolDefaults.Enable32BitAppOnWin64);\n\n            System.Console.WriteLine();\n            System.Console.WriteLine(\"网站默认设置：\");\n            System.Console.WriteLine(\"\\t常规：\");\n            System.Console.WriteLine(\"\\t\\t物理路径凭据：UserName={0}, Password={1}\", serverManager.VirtualDirectoryDefaults.UserName, serverManager.VirtualDirectoryDefaults.Password);\n            System.Console.WriteLine(\"\\t\\t物理路径凭据登录类型：{0}\", serverManager.VirtualDirectoryDefaults.LogonMethod.ToString());\n            System.Console.WriteLine(\"\\t\\t应用程序池：{0}\", serverManager.ApplicationDefaults.ApplicationPoolName);\n            System.Console.WriteLine(\"\\t\\t自动启动：{0}\", serverManager.SiteDefaults.ServerAutoStart);\n            System.Console.WriteLine(\"\\t行为：\");\n            System.Console.WriteLine(\"\\t\\t连接限制：\");\n            System.Console.WriteLine(\"\\t\\t\\t连接超时（秒）：{0}\", serverManager.SiteDefaults.Limits.ConnectionTimeout.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\t\\t最大并发连接数：{0}\", serverManager.SiteDefaults.Limits.MaxConnections);\n            System.Console.WriteLine(\"\\t\\t\\t最大带宽（字节/秒）：{0}\", serverManager.SiteDefaults.Limits.MaxBandwidth);\n            System.Console.WriteLine(\"\\t\\t失败请求跟踪：\");\n            System.Console.WriteLine(\"\\t\\t\\t跟踪文件的最大数量：{0}\", serverManager.SiteDefaults.TraceFailedRequestsLogging.MaxLogFiles);\n            System.Console.WriteLine(\"\\t\\t\\t目录：{0}\", serverManager.SiteDefaults.TraceFailedRequestsLogging.Directory);\n            System.Console.WriteLine(\"\\t\\t\\t已启用：{0}\", serverManager.SiteDefaults.TraceFailedRequestsLogging.Enabled);\n            System.Console.WriteLine(\"\\t\\t已启用的协议：{0}\", serverManager.ApplicationDefaults.EnabledProtocols);\n\n            foreach (var s in serverManager.Sites)//遍历网站\n            {\n                System.Console.WriteLine();\n                System.Console.WriteLine(\"模式名：{0}\", s.Schema.Name);\n                System.Console.WriteLine(\"编号：{0}\", s.Id);\n                System.Console.WriteLine(\"网站名称：{0}\", s.Name);\n                System.Console.WriteLine(\"物理路径：{0}\", s.Applications[\"/\"].VirtualDirectories[\"/\"].PhysicalPath);\n                System.Console.WriteLine(\"物理路径凭据：{0}\", s.Methods.ToString());\n                System.Console.WriteLine(\"应用程序池：{0}\", s.Applications[\"/\"].ApplicationPoolName);\n                System.Console.WriteLine(\"已启用的协议：{0}\", s.Applications[\"/\"].EnabledProtocols);\n                System.Console.WriteLine(\"自动启动：{0}\", s.ServerAutoStart);\n                System.Console.WriteLine(\"运行状态：{0}\", s.State.ToString());\n\n                System.Console.WriteLine(\"网站绑定：\");\n                foreach (var tmp in s.Bindings)\n                {\n                    System.Console.WriteLine(\"\\t类型：{0}\", tmp.Protocol);\n                    //System.Console.WriteLine(\"\\tIP 地址：{0}\", tmp.EndPoint.Address.ToString());\n                    //System.Console.WriteLine(\"\\t端口：{0}\", tmp.EndPoint.Port.ToString());\n                    System.Console.WriteLine(\"\\t主机名：{0}\", tmp.Host);\n                    //System.Console.WriteLine(tmp.BindingInformation);\n                    //System.Console.WriteLine(tmp.CertificateStoreName);\n                    //System.Console.WriteLine(tmp.IsIPPortHostBinding);\n                    //System.Console.WriteLine(tmp.IsLocallyStored);\n                    //System.Console.WriteLine(tmp.UseDsMapper);\n                }\n\n                System.Console.WriteLine(\"连接限制：\");\n                System.Console.WriteLine(\"\\t连接超时（秒）：{0}\", s.Limits.ConnectionTimeout.TotalSeconds);\n                System.Console.WriteLine(\"\\t最大并发连接数：{0}\", s.Limits.MaxConnections);\n                System.Console.WriteLine(\"\\t最大带宽（字节/秒）：{0}\", s.Limits.MaxBandwidth);\n\n                System.Console.WriteLine(\"失败请求跟踪：\");\n                System.Console.WriteLine(\"\\t跟踪文件的最大数量：{0}\", s.TraceFailedRequestsLogging.MaxLogFiles);\n                System.Console.WriteLine(\"\\t目录：{0}\", s.TraceFailedRequestsLogging.Directory);\n                System.Console.WriteLine(\"\\t已启用：{0}\", s.TraceFailedRequestsLogging.Enabled);\n\n                System.Console.WriteLine(\"日志：\");\n                //System.Console.WriteLine(\"\\t启用日志服务：{0}\", s.LogFile.Enabled);\n                System.Console.WriteLine(\"\\t格式：{0}\", s.LogFile.LogFormat.ToString());\n                System.Console.WriteLine(\"\\t目录：{0}\", s.LogFile.Directory);\n                System.Console.WriteLine(\"\\t文件包含字段：{0}\", s.LogFile.LogExtFileFlags.ToString());\n                System.Console.WriteLine(\"\\t计划：{0}\", s.LogFile.Period.ToString());\n                System.Console.WriteLine(\"\\t最大文件大小（字节）：{0}\", s.LogFile.TruncateSize);\n                System.Console.WriteLine(\"\\t使用本地时间进行文件命名和滚动更新：{0}\", s.LogFile.LocalTimeRollover);\n\n                System.Console.WriteLine(\"----应用程序的默认应用程序池：{0}\", s.ApplicationDefaults.ApplicationPoolName);\n                System.Console.WriteLine(\"----应用程序的默认已启用的协议：{0}\", s.ApplicationDefaults.EnabledProtocols);\n                //System.Console.WriteLine(\"----应用程序的默认物理路径凭据：{0}\", s.ApplicationDefaults.Methods.ToString());\n                //System.Console.WriteLine(\"----虚拟目录的默认物理路径凭据：{0}\", s.VirtualDirectoryDefaults.Methods.ToString());\n                System.Console.WriteLine(\"----虚拟目录的默认物理路径凭据登录类型：{0}\", s.VirtualDirectoryDefaults.LogonMethod.ToString());\n                System.Console.WriteLine(\"----虚拟目录的默认用户名：{0}\", s.VirtualDirectoryDefaults.UserName);\n                System.Console.WriteLine(\"----虚拟目录的默认用户密码：{0}\", s.VirtualDirectoryDefaults.Password);\n                System.Console.WriteLine(\"应用程序 列表：\");\n                foreach (var tmp in s.Applications)\n                {\n                    if (tmp.Path != \"/\")\n                    {\n                        System.Console.WriteLine(\"\\t模式名：{0}\", tmp.Schema.Name);\n                        System.Console.WriteLine(\"\\t虚拟路径：{0}\", tmp.Path);\n                        System.Console.WriteLine(\"\\t物理路径：{0}\", tmp.VirtualDirectories[\"/\"].PhysicalPath);\n                        //System.Console.WriteLine(\"\\t物理路径凭据：{0}\", tmp.Methods.ToString());\n                        System.Console.WriteLine(\"\\t应用程序池：{0}\", tmp.ApplicationPoolName);\n                        System.Console.WriteLine(\"\\t已启用的协议：{0}\", tmp.EnabledProtocols);\n                    }\n                    System.Console.WriteLine(\"\\t虚拟目录 列表：\");\n                    foreach (var tmp2 in tmp.VirtualDirectories)\n                    {\n                        if (tmp2.Path != \"/\")\n                        {\n                            System.Console.WriteLine(\"\\t\\t模式名：{0}\", tmp2.Schema.Name);\n                            System.Console.WriteLine(\"\\t\\t虚拟路径：{0}\", tmp2.Path);\n                            System.Console.WriteLine(\"\\t\\t物理路径：{0}\", tmp2.PhysicalPath);\n                            //System.Console.WriteLine(\"\\t\\t物理路径凭据：{0}\", tmp2.Methods.ToString());\n                            System.Console.WriteLine(\"\\t\\t物理路径凭据登录类型：{0}\", tmp2.LogonMethod.ToString());\n                        }\n                    }\n                }\n            }\n        }\n        /// <summary>\n        /// 获得可用端口号\n        /// </summary>\n        /// <param name=\"ports\"></param>\n        /// <returns></returns>\n        public static string GetFreePort(ref ArrayList ports)\n        {\n            ////1024－49151\n            string result = \"\";\n            for (int i = 1024; i < 49151; i++)\n            {\n                if (!ports.Contains(i))\n                {\n                    ports.Add(i);\n                    result = i.ToString();\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n}\n\n```\n\n```C\nusing System;\nusing System.Text;\nusing System.IO;\n\n\nnamespace CommonTools\n{\n    /// <summary>\n    /// 文件操作夹\n    /// </summary>\n    public static class DirFileHelper\n    {\n        #region 检测指定目录是否存在\n        /// <summary>\n        /// 检测指定目录是否存在\n        /// </summary>\n        /// <param name=\"directoryPath\">目录的绝对路径</param>\n        /// <returns></returns>\n        public static bool IsExistDirectory(string directoryPath)\n        {\n            return Directory.Exists(directoryPath);\n        }\n        #endregion\n\n        #region 检测指定文件是否存在,如果存在返回true\n        /// <summary>\n        /// 检测指定文件是否存在,如果存在则返回true。\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static bool IsExistFile(string filePath)\n        {\n            return File.Exists(filePath);\n        }\n        #endregion\n\n        #region 获取指定目录中的文件列表\n        /// <summary>\n        /// 获取指定目录中所有文件列表\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>        \n        public static string[] GetFileNames(string directoryPath)\n        {\n            //如果目录不存在，则抛出异常\n            if (!IsExistDirectory(directoryPath))\n            {\n                throw new FileNotFoundException();\n            }\n\n            //获取文件列表\n            return Directory.GetFiles(directoryPath);\n        }\n        #endregion\n\n        #region 获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.\n        /// <summary>\n        /// 获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>        \n        public static string[] GetDirectories(string directoryPath)\n        {\n            try\n            {\n                return Directory.GetDirectories(directoryPath);\n            }\n            catch (IOException ex)\n            {\n                throw ex;\n            }\n        }\n        #endregion\n\n        #region 获取指定目录及子目录中所有文件列表\n        /// <summary>\n        /// 获取指定目录及子目录中所有文件列表\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        /// <param name=\"searchPattern\">模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。\n        /// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。</param>\n        /// <param name=\"isSearchChild\">是否搜索子目录</param>\n        public static string[] GetFileNames(string directoryPath, string searchPattern, bool isSearchChild)\n        {\n            //如果目录不存在，则抛出异常\n            if (!IsExistDirectory(directoryPath))\n            {\n                throw new FileNotFoundException();\n            }\n\n            try\n            {\n                if (isSearchChild)\n                {\n                    return Directory.GetFiles(directoryPath, searchPattern, SearchOption.AllDirectories);\n                }\n                else\n                {\n                    return Directory.GetFiles(directoryPath, searchPattern, SearchOption.TopDirectoryOnly);\n                }\n            }\n            catch (IOException ex)\n            {\n                throw ex;\n            }\n        }\n        #endregion\n\n        #region 检测指定目录是否为空\n        /// <summary>\n        /// 检测指定目录是否为空\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>        \n        public static bool IsEmptyDirectory(string directoryPath)\n        {\n            try\n            {\n                //判断是否存在文件\n                string[] fileNames = GetFileNames(directoryPath);\n                if (fileNames.Length > 0)\n                {\n                    return false;\n                }\n\n                //判断是否存在文件夹\n                string[] directoryNames = GetDirectories(directoryPath);\n                if (directoryNames.Length > 0)\n                {\n                    return false;\n                }\n\n                return true;\n            }\n            catch\n            {\n                //这里记录日志\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n                return true;\n            }\n        }\n        #endregion\n\n        #region 检测指定目录中是否存在指定的文件\n        /// <summary>\n        /// 检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        /// <param name=\"searchPattern\">模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。\n        /// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。</param>        \n        public static bool Contains(string directoryPath, string searchPattern)\n        {\n            try\n            {\n                //获取指定的文件列表\n                string[] fileNames = GetFileNames(directoryPath, searchPattern, false);\n\n                //判断指定文件是否存在\n                if (fileNames.Length == 0)\n                {\n                    return false;\n                }\n                else\n                {\n                    return true;\n                }\n            }\n            catch (Exception ex)\n            {\n                throw new Exception(ex.Message);\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n            }\n        }\n\n        /// <summary>\n        /// 检测指定目录中是否存在指定的文件\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        /// <param name=\"searchPattern\">模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。\n        /// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。</param> \n        /// <param name=\"isSearchChild\">是否搜索子目录</param>\n        public static bool Contains(string directoryPath, string searchPattern, bool isSearchChild)\n        {\n            try\n            {\n                //获取指定的文件列表\n                string[] fileNames = GetFileNames(directoryPath, searchPattern, true);\n\n                //判断指定文件是否存在\n                if (fileNames.Length == 0)\n                {\n                    return false;\n                }\n                else\n                {\n                    return true;\n                }\n            }\n            catch (Exception ex)\n            {\n                throw new Exception(ex.Message);\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n            }\n        }\n        #endregion\n\n        #region 创建目录\n        /// <summary>\n        /// 创建目录\n        /// </summary>\n        /// <param name=\"dir\">要创建的目录路径包括目录名</param>\n        public static void CreateDir(string dir)\n        {\n            if (dir.Length == 0) return;\n            if (!Directory.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir))\n                Directory.CreateDirectory(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir);\n        }\n        #endregion\n\n        #region 删除目录\n        /// <summary>\n        /// 删除目录\n        /// </summary>\n        /// <param name=\"dir\">要删除的目录路径和名称</param>\n        public static void DeleteDir(string dir)\n        {\n            if (dir.Length == 0) return;\n            if (Directory.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir))\n                Directory.Delete(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir);\n        }\n        #endregion\n\n        #region 删除文件\n        /// <summary>\n        /// 删除文件\n        /// </summary>\n        /// <param name=\"file\">要删除的文件路径和名称</param>\n        public static void DeleteFile(string file)\n        {\n            if (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + file))\n                File.Delete(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + file);\n        }\n        #endregion\n\n        #region 创建文件\n        /// <summary>\n        /// 创建文件\n        /// </summary>\n        /// <param name=\"dir\">带后缀的文件名</param>\n        /// <param name=\"pagestr\">文件内容</param>\n        public static void CreateFile(string dir, string pagestr)\n        {\n            dir = dir.Replace(\"/\", \"\\\\\");\n            if (dir.IndexOf(\"\\\\\") > -1)\n                CreateDir(dir.Substring(0, dir.LastIndexOf(\"\\\\\")));\n            System.IO.StreamWriter sw = new System.IO.StreamWriter(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir, false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            sw.Write(pagestr);\n            sw.Close();\n        }\n        #endregion\n\n        #region 移动文件(剪贴--粘贴)\n        /// <summary>\n        /// 移动文件(剪贴--粘贴)\n        /// </summary>\n        /// <param name=\"dir1\">要移动的文件的路径及全名(包括后缀)</param>\n        /// <param name=\"dir2\">文件移动到新的位置,并指定新的文件名</param>\n        public static void MoveFile(string dir1, string dir2)\n        {\n            dir1 = dir1.Replace(\"/\", \"\\\\\");\n            dir2 = dir2.Replace(\"/\", \"\\\\\");\n            if (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir1))\n                File.Move(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir1, System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir2);\n        }\n        #endregion\n\n        #region 复制文件\n        /// <summary>\n        /// 复制文件\n        /// </summary>\n        /// <param name=\"dir1\">要复制的文件的路径已经全名(包括后缀)</param>\n        /// <param name=\"dir2\">目标位置,并指定新的文件名</param>\n        public static void CopyFile(string dir1, string dir2)\n        {\n            dir1 = dir1.Replace(\"/\", \"\\\\\");\n            dir2 = dir2.Replace(\"/\", \"\\\\\");\n            if (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir1))\n            {\n                File.Copy(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir1, System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir2, true);\n            }\n        }\n        #endregion\n\n        #region 根据时间得到目录名 / 格式:yyyyMMdd 或者 HHmmssff\n        /// <summary>\n        /// 根据时间得到目录名yyyyMMdd\n        /// </summary>\n        /// <returns></returns>\n        public static string GetDateDir()\n        {\n            return DateTime.Now.ToString(\"yyyyMMdd\");\n        }\n        /// <summary>\n        /// 根据时间得到文件名HHmmssff\n        /// </summary>\n        /// <returns></returns>\n        public static string GetDateFile()\n        {\n            return DateTime.Now.ToString(\"HHmmssff\");\n        }\n        #endregion\n\n        #region 复制文件夹\n        /// <summary>\n        /// 复制文件夹(递归)\n        /// </summary>\n        /// <param name=\"varFromDirectory\">源文件夹路径</param>\n        /// <param name=\"varToDirectory\">目标文件夹路径</param>\n        public static void CopyFolder(string varFromDirectory, string varToDirectory)\n        {\n            Directory.CreateDirectory(varToDirectory);\n\n            if (!Directory.Exists(varFromDirectory)) return;\n\n            string[] directories = Directory.GetDirectories(varFromDirectory);\n\n            if (directories.Length > 0)\n            {\n                foreach (string d in directories)\n                {\n                    CopyFolder(d, varToDirectory + d.Substring(d.LastIndexOf(\"\\\\\")));\n                }\n            }\n            string[] files = Directory.GetFiles(varFromDirectory);\n            if (files.Length > 0)\n            {\n                foreach (string s in files)\n                {\n                    File.Copy(s, varToDirectory + s.Substring(s.LastIndexOf(\"\\\\\")), true);\n                }\n            }\n        }\n        #endregion\n\n        #region 检查文件,如果文件不存在则创建\n        /// <summary>\n        /// 检查文件,如果文件不存在则创建  \n        /// </summary>\n        /// <param name=\"FilePath\">路径,包括文件名</param>\n        public static void ExistsFile(string FilePath)\n        {\n            //if(!File.Exists(FilePath))    \n            //File.Create(FilePath);    \n            //以上写法会报错,详细解释请看下文.........   \n            if (!File.Exists(FilePath))\n            {\n                FileStream fs = File.Create(FilePath);\n                fs.Close();\n            }\n        }\n        #endregion\n\n        #region 删除指定文件夹对应其他文件夹里的文件\n        /// <summary>\n        /// 删除指定文件夹对应其他文件夹里的文件\n        /// </summary>\n        /// <param name=\"varFromDirectory\">指定文件夹路径</param>\n        /// <param name=\"varToDirectory\">对应其他文件夹路径</param>\n        public static void DeleteFolderFiles(string varFromDirectory, string varToDirectory)\n        {\n            Directory.CreateDirectory(varToDirectory);\n\n            if (!Directory.Exists(varFromDirectory)) return;\n\n            string[] directories = Directory.GetDirectories(varFromDirectory);\n\n            if (directories.Length > 0)\n            {\n                foreach (string d in directories)\n                {\n                    DeleteFolderFiles(d, varToDirectory + d.Substring(d.LastIndexOf(\"\\\\\")));\n                }\n            }\n\n\n            string[] files = Directory.GetFiles(varFromDirectory);\n\n            if (files.Length > 0)\n            {\n                foreach (string s in files)\n                {\n                    File.Delete(varToDirectory + s.Substring(s.LastIndexOf(\"\\\\\")));\n                }\n            }\n        }\n        #endregion\n\n        #region 从文件的绝对路径中获取文件名( 包含扩展名 )\n        /// <summary>\n        /// 从文件的绝对路径中获取文件名( 包含扩展名 )\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static string GetFileName(string filePath)\n        {\n            //获取文件的名称\n            FileInfo fi = new FileInfo(filePath);\n            return fi.Name;\n        }\n        #endregion\n\n        /// <summary>\n        /// 复制文件参考方法,页面中引用\n        /// </summary>\n        /// <param name=\"cDir\">新路径</param>\n        /// <param name=\"TempId\">模板引擎替换编号</param>\n        public static void CopyFiles(string cDir, string TempId)\n        {\n            //if (Directory.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\"))\n            //{\n            //    string TempStr = string.Empty;\n            //    StreamWriter sw;\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Default.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Default.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Default.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Column.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Column.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\List.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Content.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Content.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\View.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\MoreDiss.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\MoreDiss.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\DissList.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\ShowDiss.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\ShowDiss.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Diss.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Review.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Review.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Review.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Search.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Search.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Search.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //}\n        }\n\n        #region 创建一个目录\n        /// <summary>\n        /// 创建一个目录\n        /// </summary>\n        /// <param name=\"directoryPath\">目录的绝对路径</param>\n        public static void CreateDirectory(string directoryPath)\n        {\n            //如果目录不存在则创建该目录\n            if (!IsExistDirectory(directoryPath))\n            {\n                Directory.CreateDirectory(directoryPath);\n            }\n        }\n        #endregion\n\n        #region 创建一个文件\n        /// <summary>\n        /// 创建一个文件。\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        public static void CreateFile(string filePath)\n        {\n            try\n            {\n                //如果文件不存在则创建该文件\n                if (!IsExistFile(filePath))\n                {\n                    //创建一个FileInfo对象\n                    FileInfo file = new FileInfo(filePath);\n\n                    //创建文件\n                    FileStream fs = file.Create();\n\n                    //关闭文件流\n                    fs.Close();\n                }\n            }\n            catch (Exception ex)\n            {\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n                throw ex;\n            }\n        }\n\n        /// <summary>\n        /// 创建一个文件,并将字节流写入文件。\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        /// <param name=\"buffer\">二进制流数据</param>\n        public static void CreateFile(string filePath, byte[] buffer)\n        {\n            try\n            {\n                //如果文件不存在则创建该文件\n                if (!IsExistFile(filePath))\n                {\n                    //创建一个FileInfo对象\n                    FileInfo file = new FileInfo(filePath);\n\n                    //创建文件\n                    FileStream fs = file.Create();\n\n                    //写入二进制流\n                    fs.Write(buffer, 0, buffer.Length);\n\n                    //关闭文件流\n                    fs.Close();\n                }\n            }\n            catch (Exception ex)\n            {\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n                throw ex;\n            }\n        }\n        #endregion\n\n        #region 获取文本文件的行数\n        /// <summary>\n        /// 获取文本文件的行数\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static int GetLineCount(string filePath)\n        {\n            //将文本文件的各行读到一个字符串数组中\n            string[] rows = File.ReadAllLines(filePath);\n\n            //返回行数\n            return rows.Length;\n        }\n        #endregion\n\n        #region 获取一个文件的长度\n        /// <summary>\n        /// 获取一个文件的长度,单位为Byte\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static int GetFileSize(string filePath)\n        {\n            //创建一个文件对象\n            FileInfo fi = new FileInfo(filePath);\n\n            //获取文件的大小\n            return (int)fi.Length;\n        }\n        #endregion\n\n        #region 获取指定目录中的子目录列表\n        /// <summary>\n        /// 获取指定目录及子目录中所有子目录列表\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        /// <param name=\"searchPattern\">模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。\n        /// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。</param>\n        /// <param name=\"isSearchChild\">是否搜索子目录</param>\n        public static string[] GetDirectories(string directoryPath, string searchPattern, bool isSearchChild)\n        {\n            try\n            {\n                if (isSearchChild)\n                {\n                    return Directory.GetDirectories(directoryPath, searchPattern, SearchOption.AllDirectories);\n                }\n                else\n                {\n                    return Directory.GetDirectories(directoryPath, searchPattern, SearchOption.TopDirectoryOnly);\n                }\n            }\n            catch (IOException ex)\n            {\n                throw ex;\n            }\n        }\n        #endregion\n\n        #region 向文本文件写入内容\n\n        /// <summary>\n        /// 向文本文件中写入内容\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        /// <param name=\"text\">写入的内容</param>\n        /// <param name=\"encoding\">编码</param>\n        public static void WriteText(string filePath, string text, Encoding encoding)\n        {\n            //向文件写入内容\n            File.WriteAllText(filePath, text, encoding);\n        }\n        #endregion\n\n        #region 向文本文件的尾部追加内容\n        /// <summary>\n        /// 向文本文件的尾部追加内容\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        /// <param name=\"content\">写入的内容</param>\n        public static void AppendText(string filePath, string content)\n        {\n            File.AppendAllText(filePath, content);\n        }\n        #endregion\n\n        #region 将现有文件的内容复制到新文件中\n        /// <summary>\n        /// 将源文件的内容复制到目标文件中\n        /// </summary>\n        /// <param name=\"sourceFilePath\">源文件的绝对路径</param>\n        /// <param name=\"destFilePath\">目标文件的绝对路径</param>\n        public static void Copy(string sourceFilePath, string destFilePath)\n        {\n            File.Copy(sourceFilePath, destFilePath, true);\n        }\n        #endregion\n\n        #region 将文件移动到指定目录\n        /// <summary>\n        /// 将文件移动到指定目录\n        /// </summary>\n        /// <param name=\"sourceFilePath\">需要移动的源文件的绝对路径</param>\n        /// <param name=\"descDirectoryPath\">移动到的目录的绝对路径</param>\n        public static void Move(string sourceFilePath, string descDirectoryPath)\n        {\n            //获取源文件的名称\n            string sourceFileName = GetFileName(sourceFilePath);\n\n            if (IsExistDirectory(descDirectoryPath))\n            {\n                //如果目标中存在同名文件,则删除\n                if (IsExistFile(descDirectoryPath + \"\\\\\" + sourceFileName))\n                {\n                    DeleteFile(descDirectoryPath + \"\\\\\" + sourceFileName);\n                }\n                //将文件移动到指定目录\n                File.Move(sourceFilePath, descDirectoryPath + \"\\\\\" + sourceFileName);\n            }\n        }\n        #endregion\n\n        #region 从文件的绝对路径中获取文件名( 不包含扩展名 )\n        /// <summary>\n        /// 从文件的绝对路径中获取文件名( 不包含扩展名 )\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static string GetFileNameNoExtension(string filePath)\n        {\n            //获取文件的名称\n            FileInfo fi = new FileInfo(filePath);\n            return fi.Name.Split('.')[0];\n        }\n        #endregion\n\n        #region 从文件的绝对路径中获取扩展名\n        /// <summary>\n        /// 从文件的绝对路径中获取扩展名\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static string GetExtension(string filePath)\n        {\n            //获取文件的名称\n            FileInfo fi = new FileInfo(filePath);\n            return fi.Extension;\n        }\n        #endregion\n\n        #region 清空指定目录\n        /// <summary>\n        /// 清空指定目录下所有文件及子目录,但该目录依然保存.\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        public static void ClearDirectory(string directoryPath)\n        {\n            if (IsExistDirectory(directoryPath))\n            {\n                //删除目录中所有的文件\n                string[] fileNames = GetFileNames(directoryPath);\n                for (int i = 0; i < fileNames.Length; i++)\n                {\n                    DeleteFile(fileNames[i]);\n                }\n\n                //删除目录中所有的子目录\n                string[] directoryNames = GetDirectories(directoryPath);\n                for (int i = 0; i < directoryNames.Length; i++)\n                {\n                    DeleteDirectory(directoryNames[i]);\n                }\n            }\n        }\n        #endregion\n\n        #region 清空文件内容\n        /// <summary>\n        /// 清空文件内容\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        public static void ClearFile(string filePath)\n        {\n            //删除文件\n            File.Delete(filePath);\n\n            //重新创建该文件\n            CreateFile(filePath);\n        }\n        #endregion\n\n        #region 删除指定目录\n        /// <summary>\n        /// 删除指定目录及其所有子目录\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        public static void DeleteDirectory(string directoryPath)\n        {\n            if (IsExistDirectory(directoryPath))\n            {\n                Directory.Delete(directoryPath, true);\n            }\n        }\n        #endregion\n    }\n}\n\n```\n","source":"_posts/net动态控制发布IIS网站一.md","raw":"---\ntitle: .net动态控制发布IIS网站（一）\ndate: 2017-06-20 16:22:31\ntags:\n- ASP.NET\n- IIS\ncategories:\n- C#基础\n+description: \"变相实现SAAS，.net控制动态发布网站\"\n---\n# 资料\n1.[Microsoft.Web.Administration  IIS操作API](https://msdn.microsoft.com/en-us/library/microsoft.web.administration)\n\n# 代码简介\n主要逻辑功能 拷贝网站发布文件夹->IIS创建站点(获得空闲端口)->绑定域名\n\n涉及到两个工具类 \n1、IISManager IIS管理类\n2、DirFileHelper 文件及文件夹操作类\n<!--more-->\n## 代码详情\n```C\nusing CommonTools;\nusing System;\nusing System.Collections;\nnamespace IIS\n{\n    class Program\n    {\n\n        static void Main(string[] args)\n        {\n            string folderName = \"D:\\\\WebSiteTest\";//发布网站目录\n            string physicsPath = \"D:\\\\WebSite0421\";//模板网站目录\n\n\n\n            ArrayList ports = IISManager.GetAllUsePorts();\n            for (int i = 0; i < 30; i++)\n            {\n                string port = IISManager.GetFreePort(ref ports);\n                //Console.WriteLine(port);\n                string currentWebsiteName = \"WebSite\" + i;\n                string currentPath = folderName + \"\\\\\" + currentWebsiteName;\n                DirFileHelper.CopyFolder(physicsPath, currentPath);\n                IISManager.CreateWebSite(currentWebsiteName, currentPath, port);\n                IISManager.BindHost(currentWebsiteName, \"www.baidu.com\" + i);\n\n                System.Console.WriteLine(\"网站名：\" + currentWebsiteName + \"端口号：\" + port + \"路径：\" + currentPath + \" 域名:\" + \"www.baidu.com\" + i);\n            }\n            //for (int i = 0; i < 30; i++)\n            //{\n            //    IISManager.DeleteWebSite(\"WebSite\" + i);\n                \n            //}\n\n            Console.ReadKey();\n        }\n\n\n    }\n}\n\n```\n```C\nusing Microsoft.Web.Administration;\nusing System;\nusing System.Collections;\nusing System.Diagnostics;\nusing System.IO;\nusing System.Text.RegularExpressions;\n\nnamespace CommonTools\n{\n    public static class IISManager\n    {\n        private static ServerManager serverManager = new ServerManager();\n        /// <summary>\n        /// 创建站点\n        /// </summary>\n        /// <param name=\"websiteName\">站点名</param>\n        /// <param name=\"physicsPath\">物理路径</param>\n        /// <param name=\"ip\">ip地址</param>\n        /// <param name=\"port\">端口号</param>\n        /// <param name=\"poolver\">应用程序池的DOTNET FRAMEWORK版本</param>\n        /// <param name=\"binding\">使用的协议</param>\n        public static void CreateWebSite(string websiteName, string physicsPath,\n            string port, string ip = \"*\", string poolver = \"v4.0\", string binding = \"http\")\n        {\n            try\n            {\n                string fullIP = ip + \":\" + port + \":\";\n\n                ApplicationPool newPool = serverManager.ApplicationPools.Add(websiteName);\n                newPool.ManagedRuntimeVersion = poolver;\n\n                Site mySide = serverManager.Sites.Add(websiteName, binding, fullIP, physicsPath);\n                mySide.Applications[0].ApplicationPoolName = websiteName;\n\n                serverManager.CommitChanges();\n            }\n            catch (Exception error)\n            {\n\n            }\n\n        }\n\n\n        /// <summary>\n        /// 删除站点\n        /// </summary>\n        /// <param name=\"websiteName\">站点名称</param>\n        public static void DeleteWebSite(string websiteName)\n        {\n\n            serverManager.Sites.Remove(serverManager.Sites[websiteName]);\n            serverManager.ApplicationPools.Remove(serverManager.ApplicationPools[websiteName]);\n            serverManager.CommitChanges();\n        }\n\n\n        /// <summary>\n        /// 获得空闲端口\n        /// </summary>\n        /// <returns></returns>\n        public static ArrayList GetAllUsePorts()\n        {\n            \n            Process p = new Process();\n            p.StartInfo.FileName = \"cmd.exe\";//设置启动的应用程序    \n            p.StartInfo.UseShellExecute = false;//禁止使用操作系统外壳程序启动进程    \n            p.StartInfo.RedirectStandardInput = true;//应用程序的输入从流中读取    \n            p.StartInfo.RedirectStandardOutput = true;//应用程序的输出写入流中    \n            p.StartInfo.RedirectStandardError = true;//将错误信息写入流    \n            p.StartInfo.CreateNoWindow = true;//是否在新窗口中启动进程    \n            p.Start();\n            //p.StandardInput.WriteLine(@\"netstat -a -n>c:\\port.txt\");//将字符串写入文本流    \n            p.StandardInput.WriteLine(@\"netstat -a -n\");\n            p.StandardInput.WriteLine(\"exit\");\n            string str;\n            StreamReader reader = p.StandardOutput;\n            str = reader.ReadLine();\n            ArrayList ports = new ArrayList();\n            ////匹配出端口号\n            string pattern = @\":\\d+\"; //正则表达式字符串\n            Regex regex = new Regex(pattern);\n            while (!reader.EndOfStream)\n            {\n                Match match = regex.Match(str);\n                if (match.Success)\n                {\n                    string port = match.Groups[0].Value.Substring(1);\n                    ports.Add(int.Parse(port));\n                }\n                str = reader.ReadLine();\n            }\n           \n            return ports;\n        }\n\n\n        /// <summary>\n        /// 追加绑定域名\n        /// </summary>\n        /// <param name=\"websiteName\">站点名</param>\n        /// <param name=\"hostName\">域名</param>\n        public static void BindHost(string websiteName, string hostName)\n        {\n            BindingCollection bindings = serverManager.Sites[websiteName].Bindings;\n            for (int i = 1; i < bindings.Count; i++)\n            {\n                serverManager.Sites[websiteName].Bindings.RemoveAt(i);\n            }\n            serverManager.Sites[websiteName].Bindings.Add(\"*:80:\" + hostName, \"http\");\n            serverManager.CommitChanges();\n        }\n\n\n        /// <summary>\n        /// 获得当前IIS网站运行列表\n        /// </summary>\n        public static void GetListOfIIS()\n        {\n\n            string StateStr = \"\";\n            for (int i = 0; i < serverManager.Sites.Count; i++)\n            {\n\n                switch (serverManager.Sites[i].State)\n                {\n                    case ObjectState.Started:\n                        {\n                            StateStr = \"正常\"; break;\n                        }\n                    case ObjectState.Starting:\n                        {\n                            StateStr = \"正在启动\"; break;\n                        }\n                    case ObjectState.Stopping:\n                        {\n                            StateStr = \"正在关闭\"; break;\n                        }\n                    case ObjectState.Stopped:\n                        {\n                            StateStr = \"关闭\"; break;\n                        }\n                }\n                Console.WriteLine(serverManager.Sites[i].Name + \"【\" + StateStr + \"】\");\n            }\n        }\n\n        /// <summary>\n        /// 获得当前IIS站点状态\n        /// </summary>\n        public static void ReadConfig()\n        {\n\n\n            System.Console.WriteLine(\"应用程序池默认设置：\");\n            System.Console.WriteLine(\"\\t常规：\");\n            System.Console.WriteLine(\"\\t\\t.NET Framework 版本：{0}\", serverManager.ApplicationPoolDefaults.ManagedRuntimeVersion);\n            System.Console.WriteLine(\"\\t\\t队列长度：{0}\", serverManager.ApplicationPoolDefaults.QueueLength);\n            System.Console.WriteLine(\"\\t\\t托管管道模式：{0}\", serverManager.ApplicationPoolDefaults.ManagedPipelineMode.ToString());\n            System.Console.WriteLine(\"\\t\\t自动启动：{0}\", serverManager.ApplicationPoolDefaults.AutoStart);\n\n            System.Console.WriteLine(\"\\tCPU：\");\n            System.Console.WriteLine(\"\\t\\t处理器关联掩码：{0}\", serverManager.ApplicationPoolDefaults.Cpu.SmpProcessorAffinityMask);\n            System.Console.WriteLine(\"\\t\\t限制：{0}\", serverManager.ApplicationPoolDefaults.Cpu.Limit);\n            System.Console.WriteLine(\"\\t\\t限制操作：{0}\", serverManager.ApplicationPoolDefaults.Cpu.Action.ToString());\n            System.Console.WriteLine(\"\\t\\t限制间隔（分钟）：{0}\", serverManager.ApplicationPoolDefaults.Cpu.ResetInterval.TotalMinutes);\n            System.Console.WriteLine(\"\\t\\t已启用处理器关联：{0}\", serverManager.ApplicationPoolDefaults.Cpu.SmpAffinitized);\n\n            System.Console.WriteLine(\"\\t回收：\");\n            System.Console.WriteLine(\"\\t\\t发生配置更改时禁止回收：{0}\", serverManager.ApplicationPoolDefaults.Recycling.DisallowRotationOnConfigChange);\n            System.Console.WriteLine(\"\\t\\t固定时间间隔（分钟）：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Time.TotalMinutes);\n            System.Console.WriteLine(\"\\t\\t禁用重叠回收：{0}\", serverManager.ApplicationPoolDefaults.Recycling.DisallowOverlappingRotation);\n            System.Console.WriteLine(\"\\t\\t请求限制：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Requests);\n            System.Console.WriteLine(\"\\t\\t虚拟内存限制（KB）：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Memory);\n            System.Console.WriteLine(\"\\t\\t专用内存限制（KB）：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.PrivateMemory);\n            System.Console.WriteLine(\"\\t\\t特定时间：{0}\", serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Schedule.ToString());\n            System.Console.WriteLine(\"\\t\\t生成回收事件日志条目：{0}\", serverManager.ApplicationPoolDefaults.Recycling.LogEventOnRecycle.ToString());\n\n            System.Console.WriteLine(\"\\t进程孤立：\");\n            System.Console.WriteLine(\"\\t\\t可执行文件：{0}\", serverManager.ApplicationPoolDefaults.Failure.OrphanActionExe);\n            System.Console.WriteLine(\"\\t\\t可执行文件参数：{0}\", serverManager.ApplicationPoolDefaults.Failure.OrphanActionParams);\n            System.Console.WriteLine(\"\\t\\t已启用：{0}\", serverManager.ApplicationPoolDefaults.Failure.OrphanWorkerProcess);\n\n            System.Console.WriteLine(\"\\t进程模型：\");\n            System.Console.WriteLine(\"\\t\\tPing 间隔（秒）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.PingInterval.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\tPing 最大响应时间（秒）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.PingResponseTime.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\t标识：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.IdentityType);\n            System.Console.WriteLine(\"\\t\\t用户名：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.UserName);\n            System.Console.WriteLine(\"\\t\\t密码：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.Password);\n            System.Console.WriteLine(\"\\t\\t关闭时间限制（秒）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.ShutdownTimeLimit.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\t加载用户配置文件：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.LoadUserProfile);\n            System.Console.WriteLine(\"\\t\\t启动时间限制（秒）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.StartupTimeLimit.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\t允许 Ping：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.PingingEnabled);\n            System.Console.WriteLine(\"\\t\\t闲置超时（分钟）：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.IdleTimeout.TotalMinutes);\n            System.Console.WriteLine(\"\\t\\t最大工作进程数：{0}\", serverManager.ApplicationPoolDefaults.ProcessModel.MaxProcesses);\n\n            System.Console.WriteLine(\"\\t快速故障防护：\");\n            System.Console.WriteLine(\"\\t\\t“服务不可用”响应类型：{0}\", serverManager.ApplicationPoolDefaults.Failure.LoadBalancerCapabilities.ToString());\n            System.Console.WriteLine(\"\\t\\t故障间隔（分钟）：{0}\", serverManager.ApplicationPoolDefaults.Failure.RapidFailProtectionInterval.TotalMinutes);\n            System.Console.WriteLine(\"\\t\\t关闭可执行文件：{0}\", serverManager.ApplicationPoolDefaults.Failure.AutoShutdownExe);\n            System.Console.WriteLine(\"\\t\\t关闭可执行文件参数：{0}\", serverManager.ApplicationPoolDefaults.Failure.AutoShutdownParams);\n            System.Console.WriteLine(\"\\t\\t已启用：{0}\", serverManager.ApplicationPoolDefaults.Failure.RapidFailProtection);\n            System.Console.WriteLine(\"\\t\\t最大故障数：{0}\", serverManager.ApplicationPoolDefaults.Failure.RapidFailProtectionMaxCrashes);\n            System.Console.WriteLine(\"\\t\\t允许32位应用程序运行在64位 Windows 上：{0}\", serverManager.ApplicationPoolDefaults.Enable32BitAppOnWin64);\n\n            System.Console.WriteLine();\n            System.Console.WriteLine(\"网站默认设置：\");\n            System.Console.WriteLine(\"\\t常规：\");\n            System.Console.WriteLine(\"\\t\\t物理路径凭据：UserName={0}, Password={1}\", serverManager.VirtualDirectoryDefaults.UserName, serverManager.VirtualDirectoryDefaults.Password);\n            System.Console.WriteLine(\"\\t\\t物理路径凭据登录类型：{0}\", serverManager.VirtualDirectoryDefaults.LogonMethod.ToString());\n            System.Console.WriteLine(\"\\t\\t应用程序池：{0}\", serverManager.ApplicationDefaults.ApplicationPoolName);\n            System.Console.WriteLine(\"\\t\\t自动启动：{0}\", serverManager.SiteDefaults.ServerAutoStart);\n            System.Console.WriteLine(\"\\t行为：\");\n            System.Console.WriteLine(\"\\t\\t连接限制：\");\n            System.Console.WriteLine(\"\\t\\t\\t连接超时（秒）：{0}\", serverManager.SiteDefaults.Limits.ConnectionTimeout.TotalSeconds);\n            System.Console.WriteLine(\"\\t\\t\\t最大并发连接数：{0}\", serverManager.SiteDefaults.Limits.MaxConnections);\n            System.Console.WriteLine(\"\\t\\t\\t最大带宽（字节/秒）：{0}\", serverManager.SiteDefaults.Limits.MaxBandwidth);\n            System.Console.WriteLine(\"\\t\\t失败请求跟踪：\");\n            System.Console.WriteLine(\"\\t\\t\\t跟踪文件的最大数量：{0}\", serverManager.SiteDefaults.TraceFailedRequestsLogging.MaxLogFiles);\n            System.Console.WriteLine(\"\\t\\t\\t目录：{0}\", serverManager.SiteDefaults.TraceFailedRequestsLogging.Directory);\n            System.Console.WriteLine(\"\\t\\t\\t已启用：{0}\", serverManager.SiteDefaults.TraceFailedRequestsLogging.Enabled);\n            System.Console.WriteLine(\"\\t\\t已启用的协议：{0}\", serverManager.ApplicationDefaults.EnabledProtocols);\n\n            foreach (var s in serverManager.Sites)//遍历网站\n            {\n                System.Console.WriteLine();\n                System.Console.WriteLine(\"模式名：{0}\", s.Schema.Name);\n                System.Console.WriteLine(\"编号：{0}\", s.Id);\n                System.Console.WriteLine(\"网站名称：{0}\", s.Name);\n                System.Console.WriteLine(\"物理路径：{0}\", s.Applications[\"/\"].VirtualDirectories[\"/\"].PhysicalPath);\n                System.Console.WriteLine(\"物理路径凭据：{0}\", s.Methods.ToString());\n                System.Console.WriteLine(\"应用程序池：{0}\", s.Applications[\"/\"].ApplicationPoolName);\n                System.Console.WriteLine(\"已启用的协议：{0}\", s.Applications[\"/\"].EnabledProtocols);\n                System.Console.WriteLine(\"自动启动：{0}\", s.ServerAutoStart);\n                System.Console.WriteLine(\"运行状态：{0}\", s.State.ToString());\n\n                System.Console.WriteLine(\"网站绑定：\");\n                foreach (var tmp in s.Bindings)\n                {\n                    System.Console.WriteLine(\"\\t类型：{0}\", tmp.Protocol);\n                    //System.Console.WriteLine(\"\\tIP 地址：{0}\", tmp.EndPoint.Address.ToString());\n                    //System.Console.WriteLine(\"\\t端口：{0}\", tmp.EndPoint.Port.ToString());\n                    System.Console.WriteLine(\"\\t主机名：{0}\", tmp.Host);\n                    //System.Console.WriteLine(tmp.BindingInformation);\n                    //System.Console.WriteLine(tmp.CertificateStoreName);\n                    //System.Console.WriteLine(tmp.IsIPPortHostBinding);\n                    //System.Console.WriteLine(tmp.IsLocallyStored);\n                    //System.Console.WriteLine(tmp.UseDsMapper);\n                }\n\n                System.Console.WriteLine(\"连接限制：\");\n                System.Console.WriteLine(\"\\t连接超时（秒）：{0}\", s.Limits.ConnectionTimeout.TotalSeconds);\n                System.Console.WriteLine(\"\\t最大并发连接数：{0}\", s.Limits.MaxConnections);\n                System.Console.WriteLine(\"\\t最大带宽（字节/秒）：{0}\", s.Limits.MaxBandwidth);\n\n                System.Console.WriteLine(\"失败请求跟踪：\");\n                System.Console.WriteLine(\"\\t跟踪文件的最大数量：{0}\", s.TraceFailedRequestsLogging.MaxLogFiles);\n                System.Console.WriteLine(\"\\t目录：{0}\", s.TraceFailedRequestsLogging.Directory);\n                System.Console.WriteLine(\"\\t已启用：{0}\", s.TraceFailedRequestsLogging.Enabled);\n\n                System.Console.WriteLine(\"日志：\");\n                //System.Console.WriteLine(\"\\t启用日志服务：{0}\", s.LogFile.Enabled);\n                System.Console.WriteLine(\"\\t格式：{0}\", s.LogFile.LogFormat.ToString());\n                System.Console.WriteLine(\"\\t目录：{0}\", s.LogFile.Directory);\n                System.Console.WriteLine(\"\\t文件包含字段：{0}\", s.LogFile.LogExtFileFlags.ToString());\n                System.Console.WriteLine(\"\\t计划：{0}\", s.LogFile.Period.ToString());\n                System.Console.WriteLine(\"\\t最大文件大小（字节）：{0}\", s.LogFile.TruncateSize);\n                System.Console.WriteLine(\"\\t使用本地时间进行文件命名和滚动更新：{0}\", s.LogFile.LocalTimeRollover);\n\n                System.Console.WriteLine(\"----应用程序的默认应用程序池：{0}\", s.ApplicationDefaults.ApplicationPoolName);\n                System.Console.WriteLine(\"----应用程序的默认已启用的协议：{0}\", s.ApplicationDefaults.EnabledProtocols);\n                //System.Console.WriteLine(\"----应用程序的默认物理路径凭据：{0}\", s.ApplicationDefaults.Methods.ToString());\n                //System.Console.WriteLine(\"----虚拟目录的默认物理路径凭据：{0}\", s.VirtualDirectoryDefaults.Methods.ToString());\n                System.Console.WriteLine(\"----虚拟目录的默认物理路径凭据登录类型：{0}\", s.VirtualDirectoryDefaults.LogonMethod.ToString());\n                System.Console.WriteLine(\"----虚拟目录的默认用户名：{0}\", s.VirtualDirectoryDefaults.UserName);\n                System.Console.WriteLine(\"----虚拟目录的默认用户密码：{0}\", s.VirtualDirectoryDefaults.Password);\n                System.Console.WriteLine(\"应用程序 列表：\");\n                foreach (var tmp in s.Applications)\n                {\n                    if (tmp.Path != \"/\")\n                    {\n                        System.Console.WriteLine(\"\\t模式名：{0}\", tmp.Schema.Name);\n                        System.Console.WriteLine(\"\\t虚拟路径：{0}\", tmp.Path);\n                        System.Console.WriteLine(\"\\t物理路径：{0}\", tmp.VirtualDirectories[\"/\"].PhysicalPath);\n                        //System.Console.WriteLine(\"\\t物理路径凭据：{0}\", tmp.Methods.ToString());\n                        System.Console.WriteLine(\"\\t应用程序池：{0}\", tmp.ApplicationPoolName);\n                        System.Console.WriteLine(\"\\t已启用的协议：{0}\", tmp.EnabledProtocols);\n                    }\n                    System.Console.WriteLine(\"\\t虚拟目录 列表：\");\n                    foreach (var tmp2 in tmp.VirtualDirectories)\n                    {\n                        if (tmp2.Path != \"/\")\n                        {\n                            System.Console.WriteLine(\"\\t\\t模式名：{0}\", tmp2.Schema.Name);\n                            System.Console.WriteLine(\"\\t\\t虚拟路径：{0}\", tmp2.Path);\n                            System.Console.WriteLine(\"\\t\\t物理路径：{0}\", tmp2.PhysicalPath);\n                            //System.Console.WriteLine(\"\\t\\t物理路径凭据：{0}\", tmp2.Methods.ToString());\n                            System.Console.WriteLine(\"\\t\\t物理路径凭据登录类型：{0}\", tmp2.LogonMethod.ToString());\n                        }\n                    }\n                }\n            }\n        }\n        /// <summary>\n        /// 获得可用端口号\n        /// </summary>\n        /// <param name=\"ports\"></param>\n        /// <returns></returns>\n        public static string GetFreePort(ref ArrayList ports)\n        {\n            ////1024－49151\n            string result = \"\";\n            for (int i = 1024; i < 49151; i++)\n            {\n                if (!ports.Contains(i))\n                {\n                    ports.Add(i);\n                    result = i.ToString();\n                    break;\n                }\n            }\n            return result;\n        }\n    }\n}\n\n```\n\n```C\nusing System;\nusing System.Text;\nusing System.IO;\n\n\nnamespace CommonTools\n{\n    /// <summary>\n    /// 文件操作夹\n    /// </summary>\n    public static class DirFileHelper\n    {\n        #region 检测指定目录是否存在\n        /// <summary>\n        /// 检测指定目录是否存在\n        /// </summary>\n        /// <param name=\"directoryPath\">目录的绝对路径</param>\n        /// <returns></returns>\n        public static bool IsExistDirectory(string directoryPath)\n        {\n            return Directory.Exists(directoryPath);\n        }\n        #endregion\n\n        #region 检测指定文件是否存在,如果存在返回true\n        /// <summary>\n        /// 检测指定文件是否存在,如果存在则返回true。\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static bool IsExistFile(string filePath)\n        {\n            return File.Exists(filePath);\n        }\n        #endregion\n\n        #region 获取指定目录中的文件列表\n        /// <summary>\n        /// 获取指定目录中所有文件列表\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>        \n        public static string[] GetFileNames(string directoryPath)\n        {\n            //如果目录不存在，则抛出异常\n            if (!IsExistDirectory(directoryPath))\n            {\n                throw new FileNotFoundException();\n            }\n\n            //获取文件列表\n            return Directory.GetFiles(directoryPath);\n        }\n        #endregion\n\n        #region 获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.\n        /// <summary>\n        /// 获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>        \n        public static string[] GetDirectories(string directoryPath)\n        {\n            try\n            {\n                return Directory.GetDirectories(directoryPath);\n            }\n            catch (IOException ex)\n            {\n                throw ex;\n            }\n        }\n        #endregion\n\n        #region 获取指定目录及子目录中所有文件列表\n        /// <summary>\n        /// 获取指定目录及子目录中所有文件列表\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        /// <param name=\"searchPattern\">模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。\n        /// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。</param>\n        /// <param name=\"isSearchChild\">是否搜索子目录</param>\n        public static string[] GetFileNames(string directoryPath, string searchPattern, bool isSearchChild)\n        {\n            //如果目录不存在，则抛出异常\n            if (!IsExistDirectory(directoryPath))\n            {\n                throw new FileNotFoundException();\n            }\n\n            try\n            {\n                if (isSearchChild)\n                {\n                    return Directory.GetFiles(directoryPath, searchPattern, SearchOption.AllDirectories);\n                }\n                else\n                {\n                    return Directory.GetFiles(directoryPath, searchPattern, SearchOption.TopDirectoryOnly);\n                }\n            }\n            catch (IOException ex)\n            {\n                throw ex;\n            }\n        }\n        #endregion\n\n        #region 检测指定目录是否为空\n        /// <summary>\n        /// 检测指定目录是否为空\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>        \n        public static bool IsEmptyDirectory(string directoryPath)\n        {\n            try\n            {\n                //判断是否存在文件\n                string[] fileNames = GetFileNames(directoryPath);\n                if (fileNames.Length > 0)\n                {\n                    return false;\n                }\n\n                //判断是否存在文件夹\n                string[] directoryNames = GetDirectories(directoryPath);\n                if (directoryNames.Length > 0)\n                {\n                    return false;\n                }\n\n                return true;\n            }\n            catch\n            {\n                //这里记录日志\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n                return true;\n            }\n        }\n        #endregion\n\n        #region 检测指定目录中是否存在指定的文件\n        /// <summary>\n        /// 检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        /// <param name=\"searchPattern\">模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。\n        /// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。</param>        \n        public static bool Contains(string directoryPath, string searchPattern)\n        {\n            try\n            {\n                //获取指定的文件列表\n                string[] fileNames = GetFileNames(directoryPath, searchPattern, false);\n\n                //判断指定文件是否存在\n                if (fileNames.Length == 0)\n                {\n                    return false;\n                }\n                else\n                {\n                    return true;\n                }\n            }\n            catch (Exception ex)\n            {\n                throw new Exception(ex.Message);\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n            }\n        }\n\n        /// <summary>\n        /// 检测指定目录中是否存在指定的文件\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        /// <param name=\"searchPattern\">模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。\n        /// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。</param> \n        /// <param name=\"isSearchChild\">是否搜索子目录</param>\n        public static bool Contains(string directoryPath, string searchPattern, bool isSearchChild)\n        {\n            try\n            {\n                //获取指定的文件列表\n                string[] fileNames = GetFileNames(directoryPath, searchPattern, true);\n\n                //判断指定文件是否存在\n                if (fileNames.Length == 0)\n                {\n                    return false;\n                }\n                else\n                {\n                    return true;\n                }\n            }\n            catch (Exception ex)\n            {\n                throw new Exception(ex.Message);\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n            }\n        }\n        #endregion\n\n        #region 创建目录\n        /// <summary>\n        /// 创建目录\n        /// </summary>\n        /// <param name=\"dir\">要创建的目录路径包括目录名</param>\n        public static void CreateDir(string dir)\n        {\n            if (dir.Length == 0) return;\n            if (!Directory.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir))\n                Directory.CreateDirectory(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir);\n        }\n        #endregion\n\n        #region 删除目录\n        /// <summary>\n        /// 删除目录\n        /// </summary>\n        /// <param name=\"dir\">要删除的目录路径和名称</param>\n        public static void DeleteDir(string dir)\n        {\n            if (dir.Length == 0) return;\n            if (Directory.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir))\n                Directory.Delete(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir);\n        }\n        #endregion\n\n        #region 删除文件\n        /// <summary>\n        /// 删除文件\n        /// </summary>\n        /// <param name=\"file\">要删除的文件路径和名称</param>\n        public static void DeleteFile(string file)\n        {\n            if (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + file))\n                File.Delete(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + file);\n        }\n        #endregion\n\n        #region 创建文件\n        /// <summary>\n        /// 创建文件\n        /// </summary>\n        /// <param name=\"dir\">带后缀的文件名</param>\n        /// <param name=\"pagestr\">文件内容</param>\n        public static void CreateFile(string dir, string pagestr)\n        {\n            dir = dir.Replace(\"/\", \"\\\\\");\n            if (dir.IndexOf(\"\\\\\") > -1)\n                CreateDir(dir.Substring(0, dir.LastIndexOf(\"\\\\\")));\n            System.IO.StreamWriter sw = new System.IO.StreamWriter(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir, false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            sw.Write(pagestr);\n            sw.Close();\n        }\n        #endregion\n\n        #region 移动文件(剪贴--粘贴)\n        /// <summary>\n        /// 移动文件(剪贴--粘贴)\n        /// </summary>\n        /// <param name=\"dir1\">要移动的文件的路径及全名(包括后缀)</param>\n        /// <param name=\"dir2\">文件移动到新的位置,并指定新的文件名</param>\n        public static void MoveFile(string dir1, string dir2)\n        {\n            dir1 = dir1.Replace(\"/\", \"\\\\\");\n            dir2 = dir2.Replace(\"/\", \"\\\\\");\n            if (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir1))\n                File.Move(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir1, System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir2);\n        }\n        #endregion\n\n        #region 复制文件\n        /// <summary>\n        /// 复制文件\n        /// </summary>\n        /// <param name=\"dir1\">要复制的文件的路径已经全名(包括后缀)</param>\n        /// <param name=\"dir2\">目标位置,并指定新的文件名</param>\n        public static void CopyFile(string dir1, string dir2)\n        {\n            dir1 = dir1.Replace(\"/\", \"\\\\\");\n            dir2 = dir2.Replace(\"/\", \"\\\\\");\n            if (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir1))\n            {\n                File.Copy(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir1, System.Web.HttpContext.Current.Request.PhysicalApplicationPath + \"\\\\\" + dir2, true);\n            }\n        }\n        #endregion\n\n        #region 根据时间得到目录名 / 格式:yyyyMMdd 或者 HHmmssff\n        /// <summary>\n        /// 根据时间得到目录名yyyyMMdd\n        /// </summary>\n        /// <returns></returns>\n        public static string GetDateDir()\n        {\n            return DateTime.Now.ToString(\"yyyyMMdd\");\n        }\n        /// <summary>\n        /// 根据时间得到文件名HHmmssff\n        /// </summary>\n        /// <returns></returns>\n        public static string GetDateFile()\n        {\n            return DateTime.Now.ToString(\"HHmmssff\");\n        }\n        #endregion\n\n        #region 复制文件夹\n        /// <summary>\n        /// 复制文件夹(递归)\n        /// </summary>\n        /// <param name=\"varFromDirectory\">源文件夹路径</param>\n        /// <param name=\"varToDirectory\">目标文件夹路径</param>\n        public static void CopyFolder(string varFromDirectory, string varToDirectory)\n        {\n            Directory.CreateDirectory(varToDirectory);\n\n            if (!Directory.Exists(varFromDirectory)) return;\n\n            string[] directories = Directory.GetDirectories(varFromDirectory);\n\n            if (directories.Length > 0)\n            {\n                foreach (string d in directories)\n                {\n                    CopyFolder(d, varToDirectory + d.Substring(d.LastIndexOf(\"\\\\\")));\n                }\n            }\n            string[] files = Directory.GetFiles(varFromDirectory);\n            if (files.Length > 0)\n            {\n                foreach (string s in files)\n                {\n                    File.Copy(s, varToDirectory + s.Substring(s.LastIndexOf(\"\\\\\")), true);\n                }\n            }\n        }\n        #endregion\n\n        #region 检查文件,如果文件不存在则创建\n        /// <summary>\n        /// 检查文件,如果文件不存在则创建  \n        /// </summary>\n        /// <param name=\"FilePath\">路径,包括文件名</param>\n        public static void ExistsFile(string FilePath)\n        {\n            //if(!File.Exists(FilePath))    \n            //File.Create(FilePath);    \n            //以上写法会报错,详细解释请看下文.........   \n            if (!File.Exists(FilePath))\n            {\n                FileStream fs = File.Create(FilePath);\n                fs.Close();\n            }\n        }\n        #endregion\n\n        #region 删除指定文件夹对应其他文件夹里的文件\n        /// <summary>\n        /// 删除指定文件夹对应其他文件夹里的文件\n        /// </summary>\n        /// <param name=\"varFromDirectory\">指定文件夹路径</param>\n        /// <param name=\"varToDirectory\">对应其他文件夹路径</param>\n        public static void DeleteFolderFiles(string varFromDirectory, string varToDirectory)\n        {\n            Directory.CreateDirectory(varToDirectory);\n\n            if (!Directory.Exists(varFromDirectory)) return;\n\n            string[] directories = Directory.GetDirectories(varFromDirectory);\n\n            if (directories.Length > 0)\n            {\n                foreach (string d in directories)\n                {\n                    DeleteFolderFiles(d, varToDirectory + d.Substring(d.LastIndexOf(\"\\\\\")));\n                }\n            }\n\n\n            string[] files = Directory.GetFiles(varFromDirectory);\n\n            if (files.Length > 0)\n            {\n                foreach (string s in files)\n                {\n                    File.Delete(varToDirectory + s.Substring(s.LastIndexOf(\"\\\\\")));\n                }\n            }\n        }\n        #endregion\n\n        #region 从文件的绝对路径中获取文件名( 包含扩展名 )\n        /// <summary>\n        /// 从文件的绝对路径中获取文件名( 包含扩展名 )\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static string GetFileName(string filePath)\n        {\n            //获取文件的名称\n            FileInfo fi = new FileInfo(filePath);\n            return fi.Name;\n        }\n        #endregion\n\n        /// <summary>\n        /// 复制文件参考方法,页面中引用\n        /// </summary>\n        /// <param name=\"cDir\">新路径</param>\n        /// <param name=\"TempId\">模板引擎替换编号</param>\n        public static void CopyFiles(string cDir, string TempId)\n        {\n            //if (Directory.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\"))\n            //{\n            //    string TempStr = string.Empty;\n            //    StreamWriter sw;\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Default.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Default.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Default.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Column.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Column.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\List.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Content.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Content.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\View.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\MoreDiss.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\MoreDiss.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\DissList.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\ShowDiss.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\ShowDiss.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Diss.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Review.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Review.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Review.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Search.aspx\"))\n            //    {\n            //        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Search.aspx\");\n            //        TempStr = TempStr.Replace(\"{$ChannelId$}\", TempId);\n\n            //        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Search.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));\n            //        sw.Write(TempStr);\n            //        sw.Close();\n            //    }\n            //}\n        }\n\n        #region 创建一个目录\n        /// <summary>\n        /// 创建一个目录\n        /// </summary>\n        /// <param name=\"directoryPath\">目录的绝对路径</param>\n        public static void CreateDirectory(string directoryPath)\n        {\n            //如果目录不存在则创建该目录\n            if (!IsExistDirectory(directoryPath))\n            {\n                Directory.CreateDirectory(directoryPath);\n            }\n        }\n        #endregion\n\n        #region 创建一个文件\n        /// <summary>\n        /// 创建一个文件。\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        public static void CreateFile(string filePath)\n        {\n            try\n            {\n                //如果文件不存在则创建该文件\n                if (!IsExistFile(filePath))\n                {\n                    //创建一个FileInfo对象\n                    FileInfo file = new FileInfo(filePath);\n\n                    //创建文件\n                    FileStream fs = file.Create();\n\n                    //关闭文件流\n                    fs.Close();\n                }\n            }\n            catch (Exception ex)\n            {\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n                throw ex;\n            }\n        }\n\n        /// <summary>\n        /// 创建一个文件,并将字节流写入文件。\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        /// <param name=\"buffer\">二进制流数据</param>\n        public static void CreateFile(string filePath, byte[] buffer)\n        {\n            try\n            {\n                //如果文件不存在则创建该文件\n                if (!IsExistFile(filePath))\n                {\n                    //创建一个FileInfo对象\n                    FileInfo file = new FileInfo(filePath);\n\n                    //创建文件\n                    FileStream fs = file.Create();\n\n                    //写入二进制流\n                    fs.Write(buffer, 0, buffer.Length);\n\n                    //关闭文件流\n                    fs.Close();\n                }\n            }\n            catch (Exception ex)\n            {\n                //LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);\n                throw ex;\n            }\n        }\n        #endregion\n\n        #region 获取文本文件的行数\n        /// <summary>\n        /// 获取文本文件的行数\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static int GetLineCount(string filePath)\n        {\n            //将文本文件的各行读到一个字符串数组中\n            string[] rows = File.ReadAllLines(filePath);\n\n            //返回行数\n            return rows.Length;\n        }\n        #endregion\n\n        #region 获取一个文件的长度\n        /// <summary>\n        /// 获取一个文件的长度,单位为Byte\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static int GetFileSize(string filePath)\n        {\n            //创建一个文件对象\n            FileInfo fi = new FileInfo(filePath);\n\n            //获取文件的大小\n            return (int)fi.Length;\n        }\n        #endregion\n\n        #region 获取指定目录中的子目录列表\n        /// <summary>\n        /// 获取指定目录及子目录中所有子目录列表\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        /// <param name=\"searchPattern\">模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。\n        /// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。</param>\n        /// <param name=\"isSearchChild\">是否搜索子目录</param>\n        public static string[] GetDirectories(string directoryPath, string searchPattern, bool isSearchChild)\n        {\n            try\n            {\n                if (isSearchChild)\n                {\n                    return Directory.GetDirectories(directoryPath, searchPattern, SearchOption.AllDirectories);\n                }\n                else\n                {\n                    return Directory.GetDirectories(directoryPath, searchPattern, SearchOption.TopDirectoryOnly);\n                }\n            }\n            catch (IOException ex)\n            {\n                throw ex;\n            }\n        }\n        #endregion\n\n        #region 向文本文件写入内容\n\n        /// <summary>\n        /// 向文本文件中写入内容\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        /// <param name=\"text\">写入的内容</param>\n        /// <param name=\"encoding\">编码</param>\n        public static void WriteText(string filePath, string text, Encoding encoding)\n        {\n            //向文件写入内容\n            File.WriteAllText(filePath, text, encoding);\n        }\n        #endregion\n\n        #region 向文本文件的尾部追加内容\n        /// <summary>\n        /// 向文本文件的尾部追加内容\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        /// <param name=\"content\">写入的内容</param>\n        public static void AppendText(string filePath, string content)\n        {\n            File.AppendAllText(filePath, content);\n        }\n        #endregion\n\n        #region 将现有文件的内容复制到新文件中\n        /// <summary>\n        /// 将源文件的内容复制到目标文件中\n        /// </summary>\n        /// <param name=\"sourceFilePath\">源文件的绝对路径</param>\n        /// <param name=\"destFilePath\">目标文件的绝对路径</param>\n        public static void Copy(string sourceFilePath, string destFilePath)\n        {\n            File.Copy(sourceFilePath, destFilePath, true);\n        }\n        #endregion\n\n        #region 将文件移动到指定目录\n        /// <summary>\n        /// 将文件移动到指定目录\n        /// </summary>\n        /// <param name=\"sourceFilePath\">需要移动的源文件的绝对路径</param>\n        /// <param name=\"descDirectoryPath\">移动到的目录的绝对路径</param>\n        public static void Move(string sourceFilePath, string descDirectoryPath)\n        {\n            //获取源文件的名称\n            string sourceFileName = GetFileName(sourceFilePath);\n\n            if (IsExistDirectory(descDirectoryPath))\n            {\n                //如果目标中存在同名文件,则删除\n                if (IsExistFile(descDirectoryPath + \"\\\\\" + sourceFileName))\n                {\n                    DeleteFile(descDirectoryPath + \"\\\\\" + sourceFileName);\n                }\n                //将文件移动到指定目录\n                File.Move(sourceFilePath, descDirectoryPath + \"\\\\\" + sourceFileName);\n            }\n        }\n        #endregion\n\n        #region 从文件的绝对路径中获取文件名( 不包含扩展名 )\n        /// <summary>\n        /// 从文件的绝对路径中获取文件名( 不包含扩展名 )\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static string GetFileNameNoExtension(string filePath)\n        {\n            //获取文件的名称\n            FileInfo fi = new FileInfo(filePath);\n            return fi.Name.Split('.')[0];\n        }\n        #endregion\n\n        #region 从文件的绝对路径中获取扩展名\n        /// <summary>\n        /// 从文件的绝对路径中获取扩展名\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>        \n        public static string GetExtension(string filePath)\n        {\n            //获取文件的名称\n            FileInfo fi = new FileInfo(filePath);\n            return fi.Extension;\n        }\n        #endregion\n\n        #region 清空指定目录\n        /// <summary>\n        /// 清空指定目录下所有文件及子目录,但该目录依然保存.\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        public static void ClearDirectory(string directoryPath)\n        {\n            if (IsExistDirectory(directoryPath))\n            {\n                //删除目录中所有的文件\n                string[] fileNames = GetFileNames(directoryPath);\n                for (int i = 0; i < fileNames.Length; i++)\n                {\n                    DeleteFile(fileNames[i]);\n                }\n\n                //删除目录中所有的子目录\n                string[] directoryNames = GetDirectories(directoryPath);\n                for (int i = 0; i < directoryNames.Length; i++)\n                {\n                    DeleteDirectory(directoryNames[i]);\n                }\n            }\n        }\n        #endregion\n\n        #region 清空文件内容\n        /// <summary>\n        /// 清空文件内容\n        /// </summary>\n        /// <param name=\"filePath\">文件的绝对路径</param>\n        public static void ClearFile(string filePath)\n        {\n            //删除文件\n            File.Delete(filePath);\n\n            //重新创建该文件\n            CreateFile(filePath);\n        }\n        #endregion\n\n        #region 删除指定目录\n        /// <summary>\n        /// 删除指定目录及其所有子目录\n        /// </summary>\n        /// <param name=\"directoryPath\">指定目录的绝对路径</param>\n        public static void DeleteDirectory(string directoryPath)\n        {\n            if (IsExistDirectory(directoryPath))\n            {\n                Directory.Delete(directoryPath, true);\n            }\n        }\n        #endregion\n    }\n}\n\n```\n","slug":"net动态控制发布IIS网站一","published":1,"updated":"2018-06-19T06:01:09.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayy3001rocm7v72kf6oy","content":"<h1 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h1><p>1.<a href=\"https://msdn.microsoft.com/en-us/library/microsoft.web.administration\" target=\"_blank\" rel=\"external\">Microsoft.Web.Administration  IIS操作API</a></p>\n<h1 id=\"代码简介\"><a href=\"#代码简介\" class=\"headerlink\" title=\"代码简介\"></a>代码简介</h1><p>主要逻辑功能 拷贝网站发布文件夹-&gt;IIS创建站点(获得空闲端口)-&gt;绑定域名</p>\n<p>涉及到两个工具类<br>1、IISManager IIS管理类<br>2、DirFileHelper 文件及文件夹操作类<br><a id=\"more\"></a></p>\n<h2 id=\"代码详情\"><a href=\"#代码详情\" class=\"headerlink\" title=\"代码详情\"></a>代码详情</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> CommonTools;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">namespace</span> IIS</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> folderName = <span class=\"string\">\"D:\\\\WebSiteTest\"</span>;<span class=\"comment\">//发布网站目录</span></div><div class=\"line\">            <span class=\"built_in\">string</span> physicsPath = <span class=\"string\">\"D:\\\\WebSite0421\"</span>;<span class=\"comment\">//模板网站目录</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            ArrayList ports = IISManager.GetAllUsePorts();</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">30</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> port = IISManager.GetFreePort(ref ports);</div><div class=\"line\">                <span class=\"comment\">//Console.WriteLine(port);</span></div><div class=\"line\">                <span class=\"built_in\">string</span> currentWebsiteName = <span class=\"string\">\"WebSite\"</span> + i;</div><div class=\"line\">                <span class=\"built_in\">string</span> currentPath = folderName + <span class=\"string\">\"\\\\\"</span> + currentWebsiteName;</div><div class=\"line\">                DirFileHelper.CopyFolder(physicsPath, currentPath);</div><div class=\"line\">                IISManager.CreateWebSite(currentWebsiteName, currentPath, port);</div><div class=\"line\">                IISManager.BindHost(currentWebsiteName, <span class=\"string\">\"www.baidu.com\"</span> + i);</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"网站名：\"</span> + currentWebsiteName + <span class=\"string\">\"端口号：\"</span> + port + <span class=\"string\">\"路径：\"</span> + currentPath + <span class=\"string\">\" 域名:\"</span> + <span class=\"string\">\"www.baidu.com\"</span> + i);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">//for (int i = 0; i &lt; 30; i++)</span></div><div class=\"line\">            <span class=\"comment\">//&#123;</span></div><div class=\"line\">            <span class=\"comment\">//    IISManager.DeleteWebSite(\"WebSite\" + i);</span></div><div class=\"line\">                </div><div class=\"line\">            <span class=\"comment\">//&#125;</span></div><div class=\"line\"></div><div class=\"line\">            Console.ReadKey();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Microsoft.Web.Administration;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Diagnostics;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> CommonTools</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> IISManager</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ServerManager serverManager = <span class=\"keyword\">new</span> ServerManager();</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建站点</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"websiteName\"&gt;站点名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"physicsPath\"&gt;物理路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"ip\"&gt;ip地址&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"port\"&gt;端口号&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"poolver\"&gt;应用程序池的DOTNET FRAMEWORK版本&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"binding\"&gt;使用的协议&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateWebSite</span><span class=\"params\">(<span class=\"built_in\">string</span> websiteName, <span class=\"built_in\">string</span> physicsPath,</span></span></div><div class=\"line\">            <span class=\"built_in\">string</span> port, <span class=\"built_in\">string</span> ip = <span class=\"string\">\"*\"</span>, <span class=\"built_in\">string</span> poolver = <span class=\"string\">\"v4.0\"</span>, <span class=\"built_in\">string</span> binding = <span class=\"string\">\"http\"</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> fullIP = ip + <span class=\"string\">\":\"</span> + port + <span class=\"string\">\":\"</span>;</div><div class=\"line\"></div><div class=\"line\">                ApplicationPool newPool = serverManager.ApplicationPools.Add(websiteName);</div><div class=\"line\">                newPool.ManagedRuntimeVersion = poolver;</div><div class=\"line\"></div><div class=\"line\">                Site mySide = serverManager.Sites.Add(websiteName, binding, fullIP, physicsPath);</div><div class=\"line\">                mySide.Applications[<span class=\"number\">0</span>].ApplicationPoolName = websiteName;</div><div class=\"line\"></div><div class=\"line\">                serverManager.CommitChanges();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception error)</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除站点</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"websiteName\"&gt;站点名称&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteWebSite</span><span class=\"params\">(<span class=\"built_in\">string</span> websiteName)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">            serverManager.Sites.Remove(serverManager.Sites[websiteName]);</div><div class=\"line\">            serverManager.ApplicationPools.Remove(serverManager.ApplicationPools[websiteName]);</div><div class=\"line\">            serverManager.CommitChanges();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得空闲端口</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ArrayList <span class=\"title\">GetAllUsePorts</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            </div><div class=\"line\">            Process p = <span class=\"keyword\">new</span> Process();</div><div class=\"line\">            p.StartInfo.FileName = <span class=\"string\">\"cmd.exe\"</span>;<span class=\"comment\">//设置启动的应用程序    </span></div><div class=\"line\">            p.StartInfo.UseShellExecute = <span class=\"literal\">false</span>;<span class=\"comment\">//禁止使用操作系统外壳程序启动进程    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardInput = <span class=\"literal\">true</span>;<span class=\"comment\">//应用程序的输入从流中读取    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardOutput = <span class=\"literal\">true</span>;<span class=\"comment\">//应用程序的输出写入流中    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardError = <span class=\"literal\">true</span>;<span class=\"comment\">//将错误信息写入流    </span></div><div class=\"line\">            p.StartInfo.CreateNoWindow = <span class=\"literal\">true</span>;<span class=\"comment\">//是否在新窗口中启动进程    </span></div><div class=\"line\">            p.Start();</div><div class=\"line\">            <span class=\"comment\">//p.StandardInput.WriteLine(@\"netstat -a -n&gt;c:\\port.txt\");//将字符串写入文本流    </span></div><div class=\"line\">            p.StandardInput.WriteLine(@<span class=\"string\">\"netstat -a -n\"</span>);</div><div class=\"line\">            p.StandardInput.WriteLine(<span class=\"string\">\"exit\"</span>);</div><div class=\"line\">            <span class=\"built_in\">string</span> str;</div><div class=\"line\">            StreamReader reader = p.StandardOutput;</div><div class=\"line\">            str = reader.ReadLine();</div><div class=\"line\">            ArrayList ports = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">            <span class=\"comment\">////匹配出端口号</span></div><div class=\"line\">            <span class=\"built_in\">string</span> pattern = @<span class=\"string\">\":\\d+\"</span>; <span class=\"comment\">//正则表达式字符串</span></div><div class=\"line\">            Regex regex = <span class=\"keyword\">new</span> Regex(pattern);</div><div class=\"line\">            <span class=\"keyword\">while</span> (!reader.EndOfStream)</div><div class=\"line\">            &#123;</div><div class=\"line\">                Match match = regex.Match(str);</div><div class=\"line\">                <span class=\"keyword\">if</span> (match.Success)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> port = match.Groups[<span class=\"number\">0</span>].Value.Substring(<span class=\"number\">1</span>);</div><div class=\"line\">                    ports.Add(<span class=\"keyword\">int</span>.Parse(port));</div><div class=\"line\">                &#125;</div><div class=\"line\">                str = reader.ReadLine();</div><div class=\"line\">            &#125;</div><div class=\"line\">           </div><div class=\"line\">            <span class=\"keyword\">return</span> ports;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 追加绑定域名</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"websiteName\"&gt;站点名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"hostName\"&gt;域名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">BindHost</span><span class=\"params\">(<span class=\"built_in\">string</span> websiteName, <span class=\"built_in\">string</span> hostName)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            BindingCollection bindings = serverManager.Sites[websiteName].Bindings;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; bindings.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                serverManager.Sites[websiteName].Bindings.RemoveAt(i);</div><div class=\"line\">            &#125;</div><div class=\"line\">            serverManager.Sites[websiteName].Bindings.Add(<span class=\"string\">\"*:80:\"</span> + hostName, <span class=\"string\">\"http\"</span>);</div><div class=\"line\">            serverManager.CommitChanges();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得当前IIS网站运行列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetListOfIIS</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> StateStr = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; serverManager.Sites.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">switch</span> (serverManager.Sites[i].State)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">case</span> ObjectState.Started:</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            StateStr = <span class=\"string\">\"正常\"</span>; <span class=\"keyword\">break</span>;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    <span class=\"keyword\">case</span> ObjectState.Starting:</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            StateStr = <span class=\"string\">\"正在启动\"</span>; <span class=\"keyword\">break</span>;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    <span class=\"keyword\">case</span> ObjectState.Stopping:</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            StateStr = <span class=\"string\">\"正在关闭\"</span>; <span class=\"keyword\">break</span>;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    <span class=\"keyword\">case</span> ObjectState.Stopped:</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            StateStr = <span class=\"string\">\"关闭\"</span>; <span class=\"keyword\">break</span>;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                Console.WriteLine(serverManager.Sites[i].Name + <span class=\"string\">\"【\"</span> + StateStr + <span class=\"string\">\"】\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得当前IIS站点状态</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ReadConfig</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"应用程序池默认设置：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t常规：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t.NET Framework 版本：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ManagedRuntimeVersion);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t队列长度：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.QueueLength);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t托管管道模式：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ManagedPipelineMode.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t自动启动：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.AutoStart);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\tCPU：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t处理器关联掩码：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.SmpProcessorAffinityMask);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t限制：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.Limit);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t限制操作：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.Action.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t限制间隔（分钟）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.ResetInterval.TotalMinutes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t已启用处理器关联：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.SmpAffinitized);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t回收：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t发生配置更改时禁止回收：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.DisallowRotationOnConfigChange);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t固定时间间隔（分钟）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Time.TotalMinutes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t禁用重叠回收：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.DisallowOverlappingRotation);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t请求限制：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Requests);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t虚拟内存限制（KB）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Memory);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t专用内存限制（KB）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.PrivateMemory);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t特定时间：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Schedule.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t生成回收事件日志条目：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.LogEventOnRecycle.ToString());</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t进程孤立：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t可执行文件：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.OrphanActionExe);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t可执行文件参数：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.OrphanActionParams);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t已启用：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.OrphanWorkerProcess);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t进程模型：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\tPing 间隔（秒）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.PingInterval.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\tPing 最大响应时间（秒）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.PingResponseTime.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t标识：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.IdentityType);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t用户名：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.UserName);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t密码：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.Password);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t关闭时间限制（秒）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.ShutdownTimeLimit.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t加载用户配置文件：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.LoadUserProfile);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t启动时间限制（秒）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.StartupTimeLimit.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t允许 Ping：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.PingingEnabled);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t闲置超时（分钟）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.IdleTimeout.TotalMinutes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t最大工作进程数：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.MaxProcesses);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t快速故障防护：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t“服务不可用”响应类型：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.LoadBalancerCapabilities.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t故障间隔（分钟）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.RapidFailProtectionInterval.TotalMinutes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t关闭可执行文件：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.AutoShutdownExe);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t关闭可执行文件参数：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.AutoShutdownParams);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t已启用：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.RapidFailProtection);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t最大故障数：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.RapidFailProtectionMaxCrashes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t允许32位应用程序运行在64位 Windows 上：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Enable32BitAppOnWin64);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine();</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"网站默认设置：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t常规：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t物理路径凭据：UserName=&#123;0&#125;, Password=&#123;1&#125;\"</span>, serverManager.VirtualDirectoryDefaults.UserName, serverManager.VirtualDirectoryDefaults.Password);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t物理路径凭据登录类型：&#123;0&#125;\"</span>, serverManager.VirtualDirectoryDefaults.LogonMethod.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t应用程序池：&#123;0&#125;\"</span>, serverManager.ApplicationDefaults.ApplicationPoolName);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t自动启动：&#123;0&#125;\"</span>, serverManager.SiteDefaults.ServerAutoStart);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t行为：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t连接限制：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t连接超时（秒）：&#123;0&#125;\"</span>, serverManager.SiteDefaults.Limits.ConnectionTimeout.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t最大并发连接数：&#123;0&#125;\"</span>, serverManager.SiteDefaults.Limits.MaxConnections);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t最大带宽（字节/秒）：&#123;0&#125;\"</span>, serverManager.SiteDefaults.Limits.MaxBandwidth);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t失败请求跟踪：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t跟踪文件的最大数量：&#123;0&#125;\"</span>, serverManager.SiteDefaults.TraceFailedRequestsLogging.MaxLogFiles);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t目录：&#123;0&#125;\"</span>, serverManager.SiteDefaults.TraceFailedRequestsLogging.Directory);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t已启用：&#123;0&#125;\"</span>, serverManager.SiteDefaults.TraceFailedRequestsLogging.Enabled);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t已启用的协议：&#123;0&#125;\"</span>, serverManager.ApplicationDefaults.EnabledProtocols);</div><div class=\"line\"></div><div class=\"line\">            foreach (var s in serverManager.Sites)<span class=\"comment\">//遍历网站</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                System.Console.WriteLine();</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"模式名：&#123;0&#125;\"</span>, s.Schema.Name);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"编号：&#123;0&#125;\"</span>, s.Id);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"网站名称：&#123;0&#125;\"</span>, s.Name);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"物理路径：&#123;0&#125;\"</span>, s.Applications[<span class=\"string\">\"/\"</span>].VirtualDirectories[<span class=\"string\">\"/\"</span>].PhysicalPath);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"物理路径凭据：&#123;0&#125;\"</span>, s.Methods.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"应用程序池：&#123;0&#125;\"</span>, s.Applications[<span class=\"string\">\"/\"</span>].ApplicationPoolName);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"已启用的协议：&#123;0&#125;\"</span>, s.Applications[<span class=\"string\">\"/\"</span>].EnabledProtocols);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"自动启动：&#123;0&#125;\"</span>, s.ServerAutoStart);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"运行状态：&#123;0&#125;\"</span>, s.State.ToString());</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"网站绑定：\"</span>);</div><div class=\"line\">                foreach (var tmp in s.Bindings)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    System.Console.WriteLine(<span class=\"string\">\"\\t类型：&#123;0&#125;\"</span>, tmp.Protocol);</div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(\"\\tIP 地址：&#123;0&#125;\", tmp.EndPoint.Address.ToString());</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(\"\\t端口：&#123;0&#125;\", tmp.EndPoint.Port.ToString());</span></div><div class=\"line\">                    System.Console.WriteLine(<span class=\"string\">\"\\t主机名：&#123;0&#125;\"</span>, tmp.Host);</div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.BindingInformation);</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.CertificateStoreName);</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.IsIPPortHostBinding);</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.IsLocallyStored);</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.UseDsMapper);</span></div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"连接限制：\"</span>);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t连接超时（秒）：&#123;0&#125;\"</span>, s.Limits.ConnectionTimeout.TotalSeconds);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t最大并发连接数：&#123;0&#125;\"</span>, s.Limits.MaxConnections);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t最大带宽（字节/秒）：&#123;0&#125;\"</span>, s.Limits.MaxBandwidth);</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"失败请求跟踪：\"</span>);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t跟踪文件的最大数量：&#123;0&#125;\"</span>, s.TraceFailedRequestsLogging.MaxLogFiles);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t目录：&#123;0&#125;\"</span>, s.TraceFailedRequestsLogging.Directory);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t已启用：&#123;0&#125;\"</span>, s.TraceFailedRequestsLogging.Enabled);</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"日志：\"</span>);</div><div class=\"line\">                <span class=\"comment\">//System.Console.WriteLine(\"\\t启用日志服务：&#123;0&#125;\", s.LogFile.Enabled);</span></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t格式：&#123;0&#125;\"</span>, s.LogFile.LogFormat.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t目录：&#123;0&#125;\"</span>, s.LogFile.Directory);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t文件包含字段：&#123;0&#125;\"</span>, s.LogFile.LogExtFileFlags.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t计划：&#123;0&#125;\"</span>, s.LogFile.Period.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t最大文件大小（字节）：&#123;0&#125;\"</span>, s.LogFile.TruncateSize);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t使用本地时间进行文件命名和滚动更新：&#123;0&#125;\"</span>, s.LogFile.LocalTimeRollover);</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----应用程序的默认应用程序池：&#123;0&#125;\"</span>, s.ApplicationDefaults.ApplicationPoolName);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----应用程序的默认已启用的协议：&#123;0&#125;\"</span>, s.ApplicationDefaults.EnabledProtocols);</div><div class=\"line\">                <span class=\"comment\">//System.Console.WriteLine(\"----应用程序的默认物理路径凭据：&#123;0&#125;\", s.ApplicationDefaults.Methods.ToString());</span></div><div class=\"line\">                <span class=\"comment\">//System.Console.WriteLine(\"----虚拟目录的默认物理路径凭据：&#123;0&#125;\", s.VirtualDirectoryDefaults.Methods.ToString());</span></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----虚拟目录的默认物理路径凭据登录类型：&#123;0&#125;\"</span>, s.VirtualDirectoryDefaults.LogonMethod.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----虚拟目录的默认用户名：&#123;0&#125;\"</span>, s.VirtualDirectoryDefaults.UserName);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----虚拟目录的默认用户密码：&#123;0&#125;\"</span>, s.VirtualDirectoryDefaults.Password);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"应用程序 列表：\"</span>);</div><div class=\"line\">                foreach (var tmp in s.Applications)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (tmp.Path != <span class=\"string\">\"/\"</span>)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t模式名：&#123;0&#125;\"</span>, tmp.Schema.Name);</div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t虚拟路径：&#123;0&#125;\"</span>, tmp.Path);</div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t物理路径：&#123;0&#125;\"</span>, tmp.VirtualDirectories[<span class=\"string\">\"/\"</span>].PhysicalPath);</div><div class=\"line\">                        <span class=\"comment\">//System.Console.WriteLine(\"\\t物理路径凭据：&#123;0&#125;\", tmp.Methods.ToString());</span></div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t应用程序池：&#123;0&#125;\"</span>, tmp.ApplicationPoolName);</div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t已启用的协议：&#123;0&#125;\"</span>, tmp.EnabledProtocols);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    System.Console.WriteLine(<span class=\"string\">\"\\t虚拟目录 列表：\"</span>);</div><div class=\"line\">                    foreach (var tmp2 in tmp.VirtualDirectories)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"keyword\">if</span> (tmp2.Path != <span class=\"string\">\"/\"</span>)</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            System.Console.WriteLine(<span class=\"string\">\"\\t\\t模式名：&#123;0&#125;\"</span>, tmp2.Schema.Name);</div><div class=\"line\">                            System.Console.WriteLine(<span class=\"string\">\"\\t\\t虚拟路径：&#123;0&#125;\"</span>, tmp2.Path);</div><div class=\"line\">                            System.Console.WriteLine(<span class=\"string\">\"\\t\\t物理路径：&#123;0&#125;\"</span>, tmp2.PhysicalPath);</div><div class=\"line\">                            <span class=\"comment\">//System.Console.WriteLine(\"\\t\\t物理路径凭据：&#123;0&#125;\", tmp2.Methods.ToString());</span></div><div class=\"line\">                            System.Console.WriteLine(<span class=\"string\">\"\\t\\t物理路径凭据登录类型：&#123;0&#125;\"</span>, tmp2.LogonMethod.ToString());</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得可用端口号</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"ports\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetFreePort</span><span class=\"params\">(ref ArrayList ports)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">////1024－49151</span></div><div class=\"line\">            <span class=\"built_in\">string</span> result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1024</span>; i &lt; <span class=\"number\">49151</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (!ports.Contains(i))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    ports.Add(i);</div><div class=\"line\">                    result = i.ToString();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div><div class=\"line\">491</div><div class=\"line\">492</div><div class=\"line\">493</div><div class=\"line\">494</div><div class=\"line\">495</div><div class=\"line\">496</div><div class=\"line\">497</div><div class=\"line\">498</div><div class=\"line\">499</div><div class=\"line\">500</div><div class=\"line\">501</div><div class=\"line\">502</div><div class=\"line\">503</div><div class=\"line\">504</div><div class=\"line\">505</div><div class=\"line\">506</div><div class=\"line\">507</div><div class=\"line\">508</div><div class=\"line\">509</div><div class=\"line\">510</div><div class=\"line\">511</div><div class=\"line\">512</div><div class=\"line\">513</div><div class=\"line\">514</div><div class=\"line\">515</div><div class=\"line\">516</div><div class=\"line\">517</div><div class=\"line\">518</div><div class=\"line\">519</div><div class=\"line\">520</div><div class=\"line\">521</div><div class=\"line\">522</div><div class=\"line\">523</div><div class=\"line\">524</div><div class=\"line\">525</div><div class=\"line\">526</div><div class=\"line\">527</div><div class=\"line\">528</div><div class=\"line\">529</div><div class=\"line\">530</div><div class=\"line\">531</div><div class=\"line\">532</div><div class=\"line\">533</div><div class=\"line\">534</div><div class=\"line\">535</div><div class=\"line\">536</div><div class=\"line\">537</div><div class=\"line\">538</div><div class=\"line\">539</div><div class=\"line\">540</div><div class=\"line\">541</div><div class=\"line\">542</div><div class=\"line\">543</div><div class=\"line\">544</div><div class=\"line\">545</div><div class=\"line\">546</div><div class=\"line\">547</div><div class=\"line\">548</div><div class=\"line\">549</div><div class=\"line\">550</div><div class=\"line\">551</div><div class=\"line\">552</div><div class=\"line\">553</div><div class=\"line\">554</div><div class=\"line\">555</div><div class=\"line\">556</div><div class=\"line\">557</div><div class=\"line\">558</div><div class=\"line\">559</div><div class=\"line\">560</div><div class=\"line\">561</div><div class=\"line\">562</div><div class=\"line\">563</div><div class=\"line\">564</div><div class=\"line\">565</div><div class=\"line\">566</div><div class=\"line\">567</div><div class=\"line\">568</div><div class=\"line\">569</div><div class=\"line\">570</div><div class=\"line\">571</div><div class=\"line\">572</div><div class=\"line\">573</div><div class=\"line\">574</div><div class=\"line\">575</div><div class=\"line\">576</div><div class=\"line\">577</div><div class=\"line\">578</div><div class=\"line\">579</div><div class=\"line\">580</div><div class=\"line\">581</div><div class=\"line\">582</div><div class=\"line\">583</div><div class=\"line\">584</div><div class=\"line\">585</div><div class=\"line\">586</div><div class=\"line\">587</div><div class=\"line\">588</div><div class=\"line\">589</div><div class=\"line\">590</div><div class=\"line\">591</div><div class=\"line\">592</div><div class=\"line\">593</div><div class=\"line\">594</div><div class=\"line\">595</div><div class=\"line\">596</div><div class=\"line\">597</div><div class=\"line\">598</div><div class=\"line\">599</div><div class=\"line\">600</div><div class=\"line\">601</div><div class=\"line\">602</div><div class=\"line\">603</div><div class=\"line\">604</div><div class=\"line\">605</div><div class=\"line\">606</div><div class=\"line\">607</div><div class=\"line\">608</div><div class=\"line\">609</div><div class=\"line\">610</div><div class=\"line\">611</div><div class=\"line\">612</div><div class=\"line\">613</div><div class=\"line\">614</div><div class=\"line\">615</div><div class=\"line\">616</div><div class=\"line\">617</div><div class=\"line\">618</div><div class=\"line\">619</div><div class=\"line\">620</div><div class=\"line\">621</div><div class=\"line\">622</div><div class=\"line\">623</div><div class=\"line\">624</div><div class=\"line\">625</div><div class=\"line\">626</div><div class=\"line\">627</div><div class=\"line\">628</div><div class=\"line\">629</div><div class=\"line\">630</div><div class=\"line\">631</div><div class=\"line\">632</div><div class=\"line\">633</div><div class=\"line\">634</div><div class=\"line\">635</div><div class=\"line\">636</div><div class=\"line\">637</div><div class=\"line\">638</div><div class=\"line\">639</div><div class=\"line\">640</div><div class=\"line\">641</div><div class=\"line\">642</div><div class=\"line\">643</div><div class=\"line\">644</div><div class=\"line\">645</div><div class=\"line\">646</div><div class=\"line\">647</div><div class=\"line\">648</div><div class=\"line\">649</div><div class=\"line\">650</div><div class=\"line\">651</div><div class=\"line\">652</div><div class=\"line\">653</div><div class=\"line\">654</div><div class=\"line\">655</div><div class=\"line\">656</div><div class=\"line\">657</div><div class=\"line\">658</div><div class=\"line\">659</div><div class=\"line\">660</div><div class=\"line\">661</div><div class=\"line\">662</div><div class=\"line\">663</div><div class=\"line\">664</div><div class=\"line\">665</div><div class=\"line\">666</div><div class=\"line\">667</div><div class=\"line\">668</div><div class=\"line\">669</div><div class=\"line\">670</div><div class=\"line\">671</div><div class=\"line\">672</div><div class=\"line\">673</div><div class=\"line\">674</div><div class=\"line\">675</div><div class=\"line\">676</div><div class=\"line\">677</div><div class=\"line\">678</div><div class=\"line\">679</div><div class=\"line\">680</div><div class=\"line\">681</div><div class=\"line\">682</div><div class=\"line\">683</div><div class=\"line\">684</div><div class=\"line\">685</div><div class=\"line\">686</div><div class=\"line\">687</div><div class=\"line\">688</div><div class=\"line\">689</div><div class=\"line\">690</div><div class=\"line\">691</div><div class=\"line\">692</div><div class=\"line\">693</div><div class=\"line\">694</div><div class=\"line\">695</div><div class=\"line\">696</div><div class=\"line\">697</div><div class=\"line\">698</div><div class=\"line\">699</div><div class=\"line\">700</div><div class=\"line\">701</div><div class=\"line\">702</div><div class=\"line\">703</div><div class=\"line\">704</div><div class=\"line\">705</div><div class=\"line\">706</div><div class=\"line\">707</div><div class=\"line\">708</div><div class=\"line\">709</div><div class=\"line\">710</div><div class=\"line\">711</div><div class=\"line\">712</div><div class=\"line\">713</div><div class=\"line\">714</div><div class=\"line\">715</div><div class=\"line\">716</div><div class=\"line\">717</div><div class=\"line\">718</div><div class=\"line\">719</div><div class=\"line\">720</div><div class=\"line\">721</div><div class=\"line\">722</div><div class=\"line\">723</div><div class=\"line\">724</div><div class=\"line\">725</div><div class=\"line\">726</div><div class=\"line\">727</div><div class=\"line\">728</div><div class=\"line\">729</div><div class=\"line\">730</div><div class=\"line\">731</div><div class=\"line\">732</div><div class=\"line\">733</div><div class=\"line\">734</div><div class=\"line\">735</div><div class=\"line\">736</div><div class=\"line\">737</div><div class=\"line\">738</div><div class=\"line\">739</div><div class=\"line\">740</div><div class=\"line\">741</div><div class=\"line\">742</div><div class=\"line\">743</div><div class=\"line\">744</div><div class=\"line\">745</div><div class=\"line\">746</div><div class=\"line\">747</div><div class=\"line\">748</div><div class=\"line\">749</div><div class=\"line\">750</div><div class=\"line\">751</div><div class=\"line\">752</div><div class=\"line\">753</div><div class=\"line\">754</div><div class=\"line\">755</div><div class=\"line\">756</div><div class=\"line\">757</div><div class=\"line\">758</div><div class=\"line\">759</div><div class=\"line\">760</div><div class=\"line\">761</div><div class=\"line\">762</div><div class=\"line\">763</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> CommonTools</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 文件操作夹</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> DirFileHelper</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"meta\">#region 检测指定目录是否存在</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定目录是否存在</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsExistDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> Directory.Exists(directoryPath);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 检测指定文件是否存在,如果存在返回true</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定文件是否存在,如果存在则返回true。</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsExistFile</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> File.Exists(filePath);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取指定目录中的文件列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取指定目录中所有文件列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>[] GetFileNames(<span class=\"built_in\">string</span> directoryPath)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//如果目录不存在，则抛出异常</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> FileNotFoundException();</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//获取文件列表</span></div><div class=\"line\">            <span class=\"keyword\">return</span> Directory.GetFiles(directoryPath);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>[] GetDirectories(<span class=\"built_in\">string</span> directoryPath)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> Directory.GetDirectories(directoryPath);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (IOException ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取指定目录及子目录中所有文件列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取指定目录及子目录中所有文件列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"searchPattern\"&gt;模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。</span></div><div class=\"line\">        <span class=\"comment\">/// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"isSearchChild\"&gt;是否搜索子目录&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>[] GetFileNames(<span class=\"built_in\">string</span> directoryPath, <span class=\"built_in\">string</span> searchPattern, <span class=\"keyword\">bool</span> isSearchChild)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//如果目录不存在，则抛出异常</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> FileNotFoundException();</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (isSearchChild)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> Directory.GetFiles(directoryPath, searchPattern, SearchOption.AllDirectories);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> Directory.GetFiles(directoryPath, searchPattern, SearchOption.TopDirectoryOnly);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (IOException ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 检测指定目录是否为空</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定目录是否为空</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsEmptyDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//判断是否存在文件</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] fileNames = GetFileNames(directoryPath);</div><div class=\"line\">                <span class=\"keyword\">if</span> (fileNames.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//判断是否存在文件夹</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] directoryNames = GetDirectories(directoryPath);</div><div class=\"line\">                <span class=\"keyword\">if</span> (directoryNames.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//这里记录日志</span></div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 检测指定目录中是否存在指定的文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"searchPattern\"&gt;模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。</span></div><div class=\"line\">        <span class=\"comment\">/// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">Contains</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath, <span class=\"built_in\">string</span> searchPattern)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//获取指定的文件列表</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] fileNames = GetFileNames(directoryPath, searchPattern, <span class=\"literal\">false</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//判断指定文件是否存在</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (fileNames.Length == <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.Message);</div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定目录中是否存在指定的文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"searchPattern\"&gt;模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。</span></div><div class=\"line\">        <span class=\"comment\">/// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。&lt;/param&gt; </span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"isSearchChild\"&gt;是否搜索子目录&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">Contains</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath, <span class=\"built_in\">string</span> searchPattern, <span class=\"keyword\">bool</span> isSearchChild)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//获取指定的文件列表</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] fileNames = GetFileNames(directoryPath, searchPattern, <span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//判断指定文件是否存在</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (fileNames.Length == <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.Message);</div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 创建目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir\"&gt;要创建的目录路径包括目录名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateDir</span><span class=\"params\">(<span class=\"built_in\">string</span> dir)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (dir.Length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!Directory.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir))</div><div class=\"line\">                Directory.CreateDirectory(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 删除目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir\"&gt;要删除的目录路径和名称&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteDir</span><span class=\"params\">(<span class=\"built_in\">string</span> dir)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (dir.Length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (Directory.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir))</div><div class=\"line\">                Directory.Delete(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 删除文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"file\"&gt;要删除的文件路径和名称&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteFile</span><span class=\"params\">(<span class=\"built_in\">string</span> file)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + file))</div><div class=\"line\">                File.Delete(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + file);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 创建文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir\"&gt;带后缀的文件名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"pagestr\"&gt;文件内容&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateFile</span><span class=\"params\">(<span class=\"built_in\">string</span> dir, <span class=\"built_in\">string</span> pagestr)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            dir = dir.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (dir.IndexOf(<span class=\"string\">\"\\\\\"</span>) &gt; <span class=\"number\">-1</span>)</div><div class=\"line\">                CreateDir(dir.Substring(<span class=\"number\">0</span>, dir.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)));</div><div class=\"line\">            System.IO.StreamWriter sw = <span class=\"keyword\">new</span> System.IO.StreamWriter(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir, <span class=\"literal\">false</span>, System.Text.Encoding.GetEncoding(<span class=\"string\">\"GB2312\"</span>));</div><div class=\"line\">            sw.Write(pagestr);</div><div class=\"line\">            sw.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 移动文件(剪贴--粘贴)</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 移动文件(剪贴--粘贴)</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir1\"&gt;要移动的文件的路径及全名(包括后缀)&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir2\"&gt;文件移动到新的位置,并指定新的文件名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">MoveFile</span><span class=\"params\">(<span class=\"built_in\">string</span> dir1, <span class=\"built_in\">string</span> dir2)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            dir1 = dir1.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            dir2 = dir2.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir1))</div><div class=\"line\">                File.Move(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir1, System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir2);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 复制文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 复制文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir1\"&gt;要复制的文件的路径已经全名(包括后缀)&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir2\"&gt;目标位置,并指定新的文件名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CopyFile</span><span class=\"params\">(<span class=\"built_in\">string</span> dir1, <span class=\"built_in\">string</span> dir2)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            dir1 = dir1.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            dir2 = dir2.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir1))</div><div class=\"line\">            &#123;</div><div class=\"line\">                File.Copy(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir1, System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir2, <span class=\"literal\">true</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 根据时间得到目录名 / 格式:yyyyMMdd 或者 HHmmssff</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 根据时间得到目录名yyyyMMdd</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetDateDir</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> DateTime.Now.ToString(<span class=\"string\">\"yyyyMMdd\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 根据时间得到文件名HHmmssff</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetDateFile</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> DateTime.Now.ToString(<span class=\"string\">\"HHmmssff\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 复制文件夹</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 复制文件夹(递归)</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"varFromDirectory\"&gt;源文件夹路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"varToDirectory\"&gt;目标文件夹路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CopyFolder</span><span class=\"params\">(<span class=\"built_in\">string</span> varFromDirectory, <span class=\"built_in\">string</span> varToDirectory)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Directory.CreateDirectory(varToDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (!Directory.Exists(varFromDirectory)) <span class=\"keyword\">return</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span>[] directories = Directory.GetDirectories(varFromDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (directories.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                foreach (<span class=\"built_in\">string</span> d in directories)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    CopyFolder(d, varToDirectory + d.Substring(d.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)));</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"built_in\">string</span>[] files = Directory.GetFiles(varFromDirectory);</div><div class=\"line\">            <span class=\"keyword\">if</span> (files.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                foreach (<span class=\"built_in\">string</span> s in files)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    File.Copy(s, varToDirectory + s.Substring(s.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)), <span class=\"literal\">true</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 检查文件,如果文件不存在则创建</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检查文件,如果文件不存在则创建  </span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"FilePath\"&gt;路径,包括文件名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ExistsFile</span><span class=\"params\">(<span class=\"built_in\">string</span> FilePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//if(!File.Exists(FilePath))    </span></div><div class=\"line\">            <span class=\"comment\">//File.Create(FilePath);    </span></div><div class=\"line\">            <span class=\"comment\">//以上写法会报错,详细解释请看下文.........   </span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!File.Exists(FilePath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                FileStream fs = File.Create(FilePath);</div><div class=\"line\">                fs.Close();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 删除指定文件夹对应其他文件夹里的文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除指定文件夹对应其他文件夹里的文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"varFromDirectory\"&gt;指定文件夹路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"varToDirectory\"&gt;对应其他文件夹路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteFolderFiles</span><span class=\"params\">(<span class=\"built_in\">string</span> varFromDirectory, <span class=\"built_in\">string</span> varToDirectory)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Directory.CreateDirectory(varToDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (!Directory.Exists(varFromDirectory)) <span class=\"keyword\">return</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span>[] directories = Directory.GetDirectories(varFromDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (directories.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                foreach (<span class=\"built_in\">string</span> d in directories)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    DeleteFolderFiles(d, varToDirectory + d.Substring(d.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)));</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span>[] files = Directory.GetFiles(varFromDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (files.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                foreach (<span class=\"built_in\">string</span> s in files)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    File.Delete(varToDirectory + s.Substring(s.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)));</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 从文件的绝对路径中获取文件名( 包含扩展名 )</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 从文件的绝对路径中获取文件名( 包含扩展名 )</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetFileName</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//获取文件的名称</span></div><div class=\"line\">            FileInfo fi = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\">            <span class=\"keyword\">return</span> fi.Name;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 复制文件参考方法,页面中引用</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"cDir\"&gt;新路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"TempId\"&gt;模板引擎替换编号&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CopyFiles</span><span class=\"params\">(<span class=\"built_in\">string</span> cDir, <span class=\"built_in\">string</span> TempId)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//if (Directory.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\"))</span></div><div class=\"line\">            <span class=\"comment\">//&#123;</span></div><div class=\"line\">            <span class=\"comment\">//    string TempStr = string.Empty;</span></div><div class=\"line\">            <span class=\"comment\">//    StreamWriter sw;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Default.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Default.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Default.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Column.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Column.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\List.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Content.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Content.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\View.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\MoreDiss.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\MoreDiss.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\DissList.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\ShowDiss.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\ShowDiss.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Diss.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Review.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Review.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Review.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Search.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Search.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Search.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//&#125;</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 创建一个目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建一个目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//如果目录不存在则创建该目录</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                Directory.CreateDirectory(directoryPath);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 创建一个文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建一个文件。</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateFile</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//如果文件不存在则创建该文件</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (!IsExistFile(filePath))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"comment\">//创建一个FileInfo对象</span></div><div class=\"line\">                    FileInfo file = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//创建文件</span></div><div class=\"line\">                    FileStream fs = file.Create();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//关闭文件流</span></div><div class=\"line\">                    fs.Close();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建一个文件,并将字节流写入文件。</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"buffer\"&gt;二进制流数据&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateFile</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath, byte[] buffer)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//如果文件不存在则创建该文件</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (!IsExistFile(filePath))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"comment\">//创建一个FileInfo对象</span></div><div class=\"line\">                    FileInfo file = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//创建文件</span></div><div class=\"line\">                    FileStream fs = file.Create();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//写入二进制流</span></div><div class=\"line\">                    fs.Write(buffer, <span class=\"number\">0</span>, buffer.Length);</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//关闭文件流</span></div><div class=\"line\">                    fs.Close();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取文本文件的行数</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取文本文件的行数</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">GetLineCount</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//将文本文件的各行读到一个字符串数组中</span></div><div class=\"line\">            <span class=\"built_in\">string</span>[] rows = File.ReadAllLines(filePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//返回行数</span></div><div class=\"line\">            <span class=\"keyword\">return</span> rows.Length;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取一个文件的长度</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取一个文件的长度,单位为Byte</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">GetFileSize</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//创建一个文件对象</span></div><div class=\"line\">            FileInfo fi = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//获取文件的大小</span></div><div class=\"line\">            <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)fi.Length;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取指定目录中的子目录列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取指定目录及子目录中所有子目录列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"searchPattern\"&gt;模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。</span></div><div class=\"line\">        <span class=\"comment\">/// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"isSearchChild\"&gt;是否搜索子目录&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>[] GetDirectories(<span class=\"built_in\">string</span> directoryPath, <span class=\"built_in\">string</span> searchPattern, <span class=\"keyword\">bool</span> isSearchChild)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (isSearchChild)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> Directory.GetDirectories(directoryPath, searchPattern, SearchOption.AllDirectories);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> Directory.GetDirectories(directoryPath, searchPattern, SearchOption.TopDirectoryOnly);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (IOException ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 向文本文件写入内容</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 向文本文件中写入内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"text\"&gt;写入的内容&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"encoding\"&gt;编码&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">WriteText</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath, <span class=\"built_in\">string</span> text, Encoding encoding)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//向文件写入内容</span></div><div class=\"line\">            File.WriteAllText(filePath, text, encoding);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 向文本文件的尾部追加内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 向文本文件的尾部追加内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"content\"&gt;写入的内容&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AppendText</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath, <span class=\"built_in\">string</span> content)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            File.AppendAllText(filePath, content);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 将现有文件的内容复制到新文件中</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 将源文件的内容复制到目标文件中</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"sourceFilePath\"&gt;源文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"destFilePath\"&gt;目标文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Copy</span><span class=\"params\">(<span class=\"built_in\">string</span> sourceFilePath, <span class=\"built_in\">string</span> destFilePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            File.Copy(sourceFilePath, destFilePath, <span class=\"literal\">true</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 将文件移动到指定目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 将文件移动到指定目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"sourceFilePath\"&gt;需要移动的源文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"descDirectoryPath\"&gt;移动到的目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Move</span><span class=\"params\">(<span class=\"built_in\">string</span> sourceFilePath, <span class=\"built_in\">string</span> descDirectoryPath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//获取源文件的名称</span></div><div class=\"line\">            <span class=\"built_in\">string</span> sourceFileName = GetFileName(sourceFilePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (IsExistDirectory(descDirectoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//如果目标中存在同名文件,则删除</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (IsExistFile(descDirectoryPath + <span class=\"string\">\"\\\\\"</span> + sourceFileName))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    DeleteFile(descDirectoryPath + <span class=\"string\">\"\\\\\"</span> + sourceFileName);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"comment\">//将文件移动到指定目录</span></div><div class=\"line\">                File.Move(sourceFilePath, descDirectoryPath + <span class=\"string\">\"\\\\\"</span> + sourceFileName);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 从文件的绝对路径中获取文件名( 不包含扩展名 )</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 从文件的绝对路径中获取文件名( 不包含扩展名 )</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetFileNameNoExtension</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//获取文件的名称</span></div><div class=\"line\">            FileInfo fi = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\">            <span class=\"keyword\">return</span> fi.Name.Split(<span class=\"string\">'.'</span>)[<span class=\"number\">0</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 从文件的绝对路径中获取扩展名</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 从文件的绝对路径中获取扩展名</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetExtension</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//获取文件的名称</span></div><div class=\"line\">            FileInfo fi = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\">            <span class=\"keyword\">return</span> fi.Extension;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 清空指定目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 清空指定目录下所有文件及子目录,但该目录依然保存.</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ClearDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//删除目录中所有的文件</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] fileNames = GetFileNames(directoryPath);</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; fileNames.Length; i++)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    DeleteFile(fileNames[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//删除目录中所有的子目录</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] directoryNames = GetDirectories(directoryPath);</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; directoryNames.Length; i++)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    DeleteDirectory(directoryNames[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 清空文件内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 清空文件内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ClearFile</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//删除文件</span></div><div class=\"line\">            File.Delete(filePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//重新创建该文件</span></div><div class=\"line\">            CreateFile(filePath);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 删除指定目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除指定目录及其所有子目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                Directory.Delete(directoryPath, <span class=\"literal\">true</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<h1 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h1><p>1.<a href=\"https://msdn.microsoft.com/en-us/library/microsoft.web.administration\">Microsoft.Web.Administration  IIS操作API</a></p>\n<h1 id=\"代码简介\"><a href=\"#代码简介\" class=\"headerlink\" title=\"代码简介\"></a>代码简介</h1><p>主要逻辑功能 拷贝网站发布文件夹-&gt;IIS创建站点(获得空闲端口)-&gt;绑定域名</p>\n<p>涉及到两个工具类<br>1、IISManager IIS管理类<br>2、DirFileHelper 文件及文件夹操作类<br>","more":"</p>\n<h2 id=\"代码详情\"><a href=\"#代码详情\" class=\"headerlink\" title=\"代码详情\"></a>代码详情</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> CommonTools;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">namespace</span> IIS</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> folderName = <span class=\"string\">\"D:\\\\WebSiteTest\"</span>;<span class=\"comment\">//发布网站目录</span></div><div class=\"line\">            <span class=\"built_in\">string</span> physicsPath = <span class=\"string\">\"D:\\\\WebSite0421\"</span>;<span class=\"comment\">//模板网站目录</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            ArrayList ports = IISManager.GetAllUsePorts();</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">30</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> port = IISManager.GetFreePort(ref ports);</div><div class=\"line\">                <span class=\"comment\">//Console.WriteLine(port);</span></div><div class=\"line\">                <span class=\"built_in\">string</span> currentWebsiteName = <span class=\"string\">\"WebSite\"</span> + i;</div><div class=\"line\">                <span class=\"built_in\">string</span> currentPath = folderName + <span class=\"string\">\"\\\\\"</span> + currentWebsiteName;</div><div class=\"line\">                DirFileHelper.CopyFolder(physicsPath, currentPath);</div><div class=\"line\">                IISManager.CreateWebSite(currentWebsiteName, currentPath, port);</div><div class=\"line\">                IISManager.BindHost(currentWebsiteName, <span class=\"string\">\"www.baidu.com\"</span> + i);</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"网站名：\"</span> + currentWebsiteName + <span class=\"string\">\"端口号：\"</span> + port + <span class=\"string\">\"路径：\"</span> + currentPath + <span class=\"string\">\" 域名:\"</span> + <span class=\"string\">\"www.baidu.com\"</span> + i);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">//for (int i = 0; i &lt; 30; i++)</span></div><div class=\"line\">            <span class=\"comment\">//&#123;</span></div><div class=\"line\">            <span class=\"comment\">//    IISManager.DeleteWebSite(\"WebSite\" + i);</span></div><div class=\"line\">                </div><div class=\"line\">            <span class=\"comment\">//&#125;</span></div><div class=\"line\"></div><div class=\"line\">            Console.ReadKey();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> Microsoft.Web.Administration;</div><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Diagnostics;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text.RegularExpressions;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> CommonTools</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> IISManager</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> ServerManager serverManager = <span class=\"keyword\">new</span> ServerManager();</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建站点</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"websiteName\"&gt;站点名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"physicsPath\"&gt;物理路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"ip\"&gt;ip地址&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"port\"&gt;端口号&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"poolver\"&gt;应用程序池的DOTNET FRAMEWORK版本&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"binding\"&gt;使用的协议&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateWebSite</span><span class=\"params\">(<span class=\"built_in\">string</span> websiteName, <span class=\"built_in\">string</span> physicsPath,</div><div class=\"line\">            <span class=\"built_in\">string</span> port, <span class=\"built_in\">string</span> ip = <span class=\"string\">\"*\"</span>, <span class=\"built_in\">string</span> poolver = <span class=\"string\">\"v4.0\"</span>, <span class=\"built_in\">string</span> binding = <span class=\"string\">\"http\"</span>)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"built_in\">string</span> fullIP = ip + <span class=\"string\">\":\"</span> + port + <span class=\"string\">\":\"</span>;</div><div class=\"line\"></div><div class=\"line\">                ApplicationPool newPool = serverManager.ApplicationPools.Add(websiteName);</div><div class=\"line\">                newPool.ManagedRuntimeVersion = poolver;</div><div class=\"line\"></div><div class=\"line\">                Site mySide = serverManager.Sites.Add(websiteName, binding, fullIP, physicsPath);</div><div class=\"line\">                mySide.Applications[<span class=\"number\">0</span>].ApplicationPoolName = websiteName;</div><div class=\"line\"></div><div class=\"line\">                serverManager.CommitChanges();</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception error)</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除站点</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"websiteName\"&gt;站点名称&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteWebSite</span><span class=\"params\">(<span class=\"built_in\">string</span> websiteName)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            serverManager.Sites.Remove(serverManager.Sites[websiteName]);</div><div class=\"line\">            serverManager.ApplicationPools.Remove(serverManager.ApplicationPools[websiteName]);</div><div class=\"line\">            serverManager.CommitChanges();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得空闲端口</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ArrayList <span class=\"title\">GetAllUsePorts</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            </div><div class=\"line\">            Process p = <span class=\"keyword\">new</span> Process();</div><div class=\"line\">            p.StartInfo.FileName = <span class=\"string\">\"cmd.exe\"</span>;<span class=\"comment\">//设置启动的应用程序    </span></div><div class=\"line\">            p.StartInfo.UseShellExecute = <span class=\"literal\">false</span>;<span class=\"comment\">//禁止使用操作系统外壳程序启动进程    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardInput = <span class=\"literal\">true</span>;<span class=\"comment\">//应用程序的输入从流中读取    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardOutput = <span class=\"literal\">true</span>;<span class=\"comment\">//应用程序的输出写入流中    </span></div><div class=\"line\">            p.StartInfo.RedirectStandardError = <span class=\"literal\">true</span>;<span class=\"comment\">//将错误信息写入流    </span></div><div class=\"line\">            p.StartInfo.CreateNoWindow = <span class=\"literal\">true</span>;<span class=\"comment\">//是否在新窗口中启动进程    </span></div><div class=\"line\">            p.Start();</div><div class=\"line\">            <span class=\"comment\">//p.StandardInput.WriteLine(@\"netstat -a -n&gt;c:\\port.txt\");//将字符串写入文本流    </span></div><div class=\"line\">            p.StandardInput.WriteLine(@<span class=\"string\">\"netstat -a -n\"</span>);</div><div class=\"line\">            p.StandardInput.WriteLine(<span class=\"string\">\"exit\"</span>);</div><div class=\"line\">            <span class=\"built_in\">string</span> str;</div><div class=\"line\">            StreamReader reader = p.StandardOutput;</div><div class=\"line\">            str = reader.ReadLine();</div><div class=\"line\">            ArrayList ports = <span class=\"keyword\">new</span> ArrayList();</div><div class=\"line\">            <span class=\"comment\">////匹配出端口号</span></div><div class=\"line\">            <span class=\"built_in\">string</span> pattern = @<span class=\"string\">\":\\d+\"</span>; <span class=\"comment\">//正则表达式字符串</span></div><div class=\"line\">            Regex regex = <span class=\"keyword\">new</span> Regex(pattern);</div><div class=\"line\">            <span class=\"keyword\">while</span> (!reader.EndOfStream)</div><div class=\"line\">            &#123;</div><div class=\"line\">                Match match = regex.Match(str);</div><div class=\"line\">                <span class=\"keyword\">if</span> (match.Success)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> port = match.Groups[<span class=\"number\">0</span>].Value.Substring(<span class=\"number\">1</span>);</div><div class=\"line\">                    ports.Add(<span class=\"keyword\">int</span>.Parse(port));</div><div class=\"line\">                &#125;</div><div class=\"line\">                str = reader.ReadLine();</div><div class=\"line\">            &#125;</div><div class=\"line\">           </div><div class=\"line\">            <span class=\"keyword\">return</span> ports;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 追加绑定域名</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"websiteName\"&gt;站点名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"hostName\"&gt;域名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">BindHost</span><span class=\"params\">(<span class=\"built_in\">string</span> websiteName, <span class=\"built_in\">string</span> hostName)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            BindingCollection bindings = serverManager.Sites[websiteName].Bindings;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; bindings.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                serverManager.Sites[websiteName].Bindings.RemoveAt(i);</div><div class=\"line\">            &#125;</div><div class=\"line\">            serverManager.Sites[websiteName].Bindings.Add(<span class=\"string\">\"*:80:\"</span> + hostName, <span class=\"string\">\"http\"</span>);</div><div class=\"line\">            serverManager.CommitChanges();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得当前IIS网站运行列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">GetListOfIIS</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span> StateStr = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; serverManager.Sites.Count; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">switch</span> (serverManager.Sites[i].State)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">case</span> ObjectState.Started:</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            StateStr = <span class=\"string\">\"正常\"</span>; <span class=\"keyword\">break</span>;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    <span class=\"keyword\">case</span> ObjectState.Starting:</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            StateStr = <span class=\"string\">\"正在启动\"</span>; <span class=\"keyword\">break</span>;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    <span class=\"keyword\">case</span> ObjectState.Stopping:</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            StateStr = <span class=\"string\">\"正在关闭\"</span>; <span class=\"keyword\">break</span>;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    <span class=\"keyword\">case</span> ObjectState.Stopped:</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            StateStr = <span class=\"string\">\"关闭\"</span>; <span class=\"keyword\">break</span>;</div><div class=\"line\">                        &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">                Console.WriteLine(serverManager.Sites[i].Name + <span class=\"string\">\"【\"</span> + StateStr + <span class=\"string\">\"】\"</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得当前IIS站点状态</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ReadConfig</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"应用程序池默认设置：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t常规：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t.NET Framework 版本：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ManagedRuntimeVersion);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t队列长度：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.QueueLength);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t托管管道模式：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ManagedPipelineMode.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t自动启动：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.AutoStart);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\tCPU：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t处理器关联掩码：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.SmpProcessorAffinityMask);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t限制：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.Limit);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t限制操作：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.Action.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t限制间隔（分钟）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.ResetInterval.TotalMinutes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t已启用处理器关联：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Cpu.SmpAffinitized);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t回收：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t发生配置更改时禁止回收：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.DisallowRotationOnConfigChange);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t固定时间间隔（分钟）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Time.TotalMinutes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t禁用重叠回收：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.DisallowOverlappingRotation);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t请求限制：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Requests);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t虚拟内存限制（KB）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Memory);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t专用内存限制（KB）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.PrivateMemory);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t特定时间：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.PeriodicRestart.Schedule.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t生成回收事件日志条目：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Recycling.LogEventOnRecycle.ToString());</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t进程孤立：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t可执行文件：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.OrphanActionExe);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t可执行文件参数：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.OrphanActionParams);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t已启用：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.OrphanWorkerProcess);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t进程模型：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\tPing 间隔（秒）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.PingInterval.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\tPing 最大响应时间（秒）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.PingResponseTime.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t标识：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.IdentityType);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t用户名：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.UserName);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t密码：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.Password);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t关闭时间限制（秒）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.ShutdownTimeLimit.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t加载用户配置文件：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.LoadUserProfile);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t启动时间限制（秒）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.StartupTimeLimit.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t允许 Ping：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.PingingEnabled);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t闲置超时（分钟）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.IdleTimeout.TotalMinutes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t最大工作进程数：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.ProcessModel.MaxProcesses);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t快速故障防护：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t“服务不可用”响应类型：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.LoadBalancerCapabilities.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t故障间隔（分钟）：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.RapidFailProtectionInterval.TotalMinutes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t关闭可执行文件：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.AutoShutdownExe);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t关闭可执行文件参数：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.AutoShutdownParams);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t已启用：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.RapidFailProtection);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t最大故障数：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Failure.RapidFailProtectionMaxCrashes);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t允许32位应用程序运行在64位 Windows 上：&#123;0&#125;\"</span>, serverManager.ApplicationPoolDefaults.Enable32BitAppOnWin64);</div><div class=\"line\"></div><div class=\"line\">            System.Console.WriteLine();</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"网站默认设置：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t常规：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t物理路径凭据：UserName=&#123;0&#125;, Password=&#123;1&#125;\"</span>, serverManager.VirtualDirectoryDefaults.UserName, serverManager.VirtualDirectoryDefaults.Password);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t物理路径凭据登录类型：&#123;0&#125;\"</span>, serverManager.VirtualDirectoryDefaults.LogonMethod.ToString());</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t应用程序池：&#123;0&#125;\"</span>, serverManager.ApplicationDefaults.ApplicationPoolName);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t自动启动：&#123;0&#125;\"</span>, serverManager.SiteDefaults.ServerAutoStart);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t行为：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t连接限制：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t连接超时（秒）：&#123;0&#125;\"</span>, serverManager.SiteDefaults.Limits.ConnectionTimeout.TotalSeconds);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t最大并发连接数：&#123;0&#125;\"</span>, serverManager.SiteDefaults.Limits.MaxConnections);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t最大带宽（字节/秒）：&#123;0&#125;\"</span>, serverManager.SiteDefaults.Limits.MaxBandwidth);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t失败请求跟踪：\"</span>);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t跟踪文件的最大数量：&#123;0&#125;\"</span>, serverManager.SiteDefaults.TraceFailedRequestsLogging.MaxLogFiles);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t目录：&#123;0&#125;\"</span>, serverManager.SiteDefaults.TraceFailedRequestsLogging.Directory);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t\\t已启用：&#123;0&#125;\"</span>, serverManager.SiteDefaults.TraceFailedRequestsLogging.Enabled);</div><div class=\"line\">            System.Console.WriteLine(<span class=\"string\">\"\\t\\t已启用的协议：&#123;0&#125;\"</span>, serverManager.ApplicationDefaults.EnabledProtocols);</div><div class=\"line\"></div><div class=\"line\">            foreach (var s in serverManager.Sites)<span class=\"comment\">//遍历网站</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                System.Console.WriteLine();</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"模式名：&#123;0&#125;\"</span>, s.Schema.Name);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"编号：&#123;0&#125;\"</span>, s.Id);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"网站名称：&#123;0&#125;\"</span>, s.Name);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"物理路径：&#123;0&#125;\"</span>, s.Applications[<span class=\"string\">\"/\"</span>].VirtualDirectories[<span class=\"string\">\"/\"</span>].PhysicalPath);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"物理路径凭据：&#123;0&#125;\"</span>, s.Methods.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"应用程序池：&#123;0&#125;\"</span>, s.Applications[<span class=\"string\">\"/\"</span>].ApplicationPoolName);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"已启用的协议：&#123;0&#125;\"</span>, s.Applications[<span class=\"string\">\"/\"</span>].EnabledProtocols);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"自动启动：&#123;0&#125;\"</span>, s.ServerAutoStart);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"运行状态：&#123;0&#125;\"</span>, s.State.ToString());</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"网站绑定：\"</span>);</div><div class=\"line\">                foreach (var tmp in s.Bindings)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    System.Console.WriteLine(<span class=\"string\">\"\\t类型：&#123;0&#125;\"</span>, tmp.Protocol);</div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(\"\\tIP 地址：&#123;0&#125;\", tmp.EndPoint.Address.ToString());</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(\"\\t端口：&#123;0&#125;\", tmp.EndPoint.Port.ToString());</span></div><div class=\"line\">                    System.Console.WriteLine(<span class=\"string\">\"\\t主机名：&#123;0&#125;\"</span>, tmp.Host);</div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.BindingInformation);</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.CertificateStoreName);</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.IsIPPortHostBinding);</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.IsLocallyStored);</span></div><div class=\"line\">                    <span class=\"comment\">//System.Console.WriteLine(tmp.UseDsMapper);</span></div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"连接限制：\"</span>);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t连接超时（秒）：&#123;0&#125;\"</span>, s.Limits.ConnectionTimeout.TotalSeconds);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t最大并发连接数：&#123;0&#125;\"</span>, s.Limits.MaxConnections);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t最大带宽（字节/秒）：&#123;0&#125;\"</span>, s.Limits.MaxBandwidth);</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"失败请求跟踪：\"</span>);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t跟踪文件的最大数量：&#123;0&#125;\"</span>, s.TraceFailedRequestsLogging.MaxLogFiles);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t目录：&#123;0&#125;\"</span>, s.TraceFailedRequestsLogging.Directory);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t已启用：&#123;0&#125;\"</span>, s.TraceFailedRequestsLogging.Enabled);</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"日志：\"</span>);</div><div class=\"line\">                <span class=\"comment\">//System.Console.WriteLine(\"\\t启用日志服务：&#123;0&#125;\", s.LogFile.Enabled);</span></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t格式：&#123;0&#125;\"</span>, s.LogFile.LogFormat.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t目录：&#123;0&#125;\"</span>, s.LogFile.Directory);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t文件包含字段：&#123;0&#125;\"</span>, s.LogFile.LogExtFileFlags.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t计划：&#123;0&#125;\"</span>, s.LogFile.Period.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t最大文件大小（字节）：&#123;0&#125;\"</span>, s.LogFile.TruncateSize);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"\\t使用本地时间进行文件命名和滚动更新：&#123;0&#125;\"</span>, s.LogFile.LocalTimeRollover);</div><div class=\"line\"></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----应用程序的默认应用程序池：&#123;0&#125;\"</span>, s.ApplicationDefaults.ApplicationPoolName);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----应用程序的默认已启用的协议：&#123;0&#125;\"</span>, s.ApplicationDefaults.EnabledProtocols);</div><div class=\"line\">                <span class=\"comment\">//System.Console.WriteLine(\"----应用程序的默认物理路径凭据：&#123;0&#125;\", s.ApplicationDefaults.Methods.ToString());</span></div><div class=\"line\">                <span class=\"comment\">//System.Console.WriteLine(\"----虚拟目录的默认物理路径凭据：&#123;0&#125;\", s.VirtualDirectoryDefaults.Methods.ToString());</span></div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----虚拟目录的默认物理路径凭据登录类型：&#123;0&#125;\"</span>, s.VirtualDirectoryDefaults.LogonMethod.ToString());</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----虚拟目录的默认用户名：&#123;0&#125;\"</span>, s.VirtualDirectoryDefaults.UserName);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"----虚拟目录的默认用户密码：&#123;0&#125;\"</span>, s.VirtualDirectoryDefaults.Password);</div><div class=\"line\">                System.Console.WriteLine(<span class=\"string\">\"应用程序 列表：\"</span>);</div><div class=\"line\">                foreach (var tmp in s.Applications)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">if</span> (tmp.Path != <span class=\"string\">\"/\"</span>)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t模式名：&#123;0&#125;\"</span>, tmp.Schema.Name);</div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t虚拟路径：&#123;0&#125;\"</span>, tmp.Path);</div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t物理路径：&#123;0&#125;\"</span>, tmp.VirtualDirectories[<span class=\"string\">\"/\"</span>].PhysicalPath);</div><div class=\"line\">                        <span class=\"comment\">//System.Console.WriteLine(\"\\t物理路径凭据：&#123;0&#125;\", tmp.Methods.ToString());</span></div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t应用程序池：&#123;0&#125;\"</span>, tmp.ApplicationPoolName);</div><div class=\"line\">                        System.Console.WriteLine(<span class=\"string\">\"\\t已启用的协议：&#123;0&#125;\"</span>, tmp.EnabledProtocols);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    System.Console.WriteLine(<span class=\"string\">\"\\t虚拟目录 列表：\"</span>);</div><div class=\"line\">                    foreach (var tmp2 in tmp.VirtualDirectories)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        <span class=\"keyword\">if</span> (tmp2.Path != <span class=\"string\">\"/\"</span>)</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            System.Console.WriteLine(<span class=\"string\">\"\\t\\t模式名：&#123;0&#125;\"</span>, tmp2.Schema.Name);</div><div class=\"line\">                            System.Console.WriteLine(<span class=\"string\">\"\\t\\t虚拟路径：&#123;0&#125;\"</span>, tmp2.Path);</div><div class=\"line\">                            System.Console.WriteLine(<span class=\"string\">\"\\t\\t物理路径：&#123;0&#125;\"</span>, tmp2.PhysicalPath);</div><div class=\"line\">                            <span class=\"comment\">//System.Console.WriteLine(\"\\t\\t物理路径凭据：&#123;0&#125;\", tmp2.Methods.ToString());</span></div><div class=\"line\">                            System.Console.WriteLine(<span class=\"string\">\"\\t\\t物理路径凭据登录类型：&#123;0&#125;\"</span>, tmp2.LogonMethod.ToString());</div><div class=\"line\">                        &#125;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获得可用端口号</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"ports\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetFreePort</span><span class=\"params\">(ref ArrayList ports)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">////1024－49151</span></div><div class=\"line\">            <span class=\"built_in\">string</span> result = <span class=\"string\">\"\"</span>;</div><div class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1024</span>; i &lt; <span class=\"number\">49151</span>; i++)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (!ports.Contains(i))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    ports.Add(i);</div><div class=\"line\">                    result = i.ToString();</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> result;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div><div class=\"line\">223</div><div class=\"line\">224</div><div class=\"line\">225</div><div class=\"line\">226</div><div class=\"line\">227</div><div class=\"line\">228</div><div class=\"line\">229</div><div class=\"line\">230</div><div class=\"line\">231</div><div class=\"line\">232</div><div class=\"line\">233</div><div class=\"line\">234</div><div class=\"line\">235</div><div class=\"line\">236</div><div class=\"line\">237</div><div class=\"line\">238</div><div class=\"line\">239</div><div class=\"line\">240</div><div class=\"line\">241</div><div class=\"line\">242</div><div class=\"line\">243</div><div class=\"line\">244</div><div class=\"line\">245</div><div class=\"line\">246</div><div class=\"line\">247</div><div class=\"line\">248</div><div class=\"line\">249</div><div class=\"line\">250</div><div class=\"line\">251</div><div class=\"line\">252</div><div class=\"line\">253</div><div class=\"line\">254</div><div class=\"line\">255</div><div class=\"line\">256</div><div class=\"line\">257</div><div class=\"line\">258</div><div class=\"line\">259</div><div class=\"line\">260</div><div class=\"line\">261</div><div class=\"line\">262</div><div class=\"line\">263</div><div class=\"line\">264</div><div class=\"line\">265</div><div class=\"line\">266</div><div class=\"line\">267</div><div class=\"line\">268</div><div class=\"line\">269</div><div class=\"line\">270</div><div class=\"line\">271</div><div class=\"line\">272</div><div class=\"line\">273</div><div class=\"line\">274</div><div class=\"line\">275</div><div class=\"line\">276</div><div class=\"line\">277</div><div class=\"line\">278</div><div class=\"line\">279</div><div class=\"line\">280</div><div class=\"line\">281</div><div class=\"line\">282</div><div class=\"line\">283</div><div class=\"line\">284</div><div class=\"line\">285</div><div class=\"line\">286</div><div class=\"line\">287</div><div class=\"line\">288</div><div class=\"line\">289</div><div class=\"line\">290</div><div class=\"line\">291</div><div class=\"line\">292</div><div class=\"line\">293</div><div class=\"line\">294</div><div class=\"line\">295</div><div class=\"line\">296</div><div class=\"line\">297</div><div class=\"line\">298</div><div class=\"line\">299</div><div class=\"line\">300</div><div class=\"line\">301</div><div class=\"line\">302</div><div class=\"line\">303</div><div class=\"line\">304</div><div class=\"line\">305</div><div class=\"line\">306</div><div class=\"line\">307</div><div class=\"line\">308</div><div class=\"line\">309</div><div class=\"line\">310</div><div class=\"line\">311</div><div class=\"line\">312</div><div class=\"line\">313</div><div class=\"line\">314</div><div class=\"line\">315</div><div class=\"line\">316</div><div class=\"line\">317</div><div class=\"line\">318</div><div class=\"line\">319</div><div class=\"line\">320</div><div class=\"line\">321</div><div class=\"line\">322</div><div class=\"line\">323</div><div class=\"line\">324</div><div class=\"line\">325</div><div class=\"line\">326</div><div class=\"line\">327</div><div class=\"line\">328</div><div class=\"line\">329</div><div class=\"line\">330</div><div class=\"line\">331</div><div class=\"line\">332</div><div class=\"line\">333</div><div class=\"line\">334</div><div class=\"line\">335</div><div class=\"line\">336</div><div class=\"line\">337</div><div class=\"line\">338</div><div class=\"line\">339</div><div class=\"line\">340</div><div class=\"line\">341</div><div class=\"line\">342</div><div class=\"line\">343</div><div class=\"line\">344</div><div class=\"line\">345</div><div class=\"line\">346</div><div class=\"line\">347</div><div class=\"line\">348</div><div class=\"line\">349</div><div class=\"line\">350</div><div class=\"line\">351</div><div class=\"line\">352</div><div class=\"line\">353</div><div class=\"line\">354</div><div class=\"line\">355</div><div class=\"line\">356</div><div class=\"line\">357</div><div class=\"line\">358</div><div class=\"line\">359</div><div class=\"line\">360</div><div class=\"line\">361</div><div class=\"line\">362</div><div class=\"line\">363</div><div class=\"line\">364</div><div class=\"line\">365</div><div class=\"line\">366</div><div class=\"line\">367</div><div class=\"line\">368</div><div class=\"line\">369</div><div class=\"line\">370</div><div class=\"line\">371</div><div class=\"line\">372</div><div class=\"line\">373</div><div class=\"line\">374</div><div class=\"line\">375</div><div class=\"line\">376</div><div class=\"line\">377</div><div class=\"line\">378</div><div class=\"line\">379</div><div class=\"line\">380</div><div class=\"line\">381</div><div class=\"line\">382</div><div class=\"line\">383</div><div class=\"line\">384</div><div class=\"line\">385</div><div class=\"line\">386</div><div class=\"line\">387</div><div class=\"line\">388</div><div class=\"line\">389</div><div class=\"line\">390</div><div class=\"line\">391</div><div class=\"line\">392</div><div class=\"line\">393</div><div class=\"line\">394</div><div class=\"line\">395</div><div class=\"line\">396</div><div class=\"line\">397</div><div class=\"line\">398</div><div class=\"line\">399</div><div class=\"line\">400</div><div class=\"line\">401</div><div class=\"line\">402</div><div class=\"line\">403</div><div class=\"line\">404</div><div class=\"line\">405</div><div class=\"line\">406</div><div class=\"line\">407</div><div class=\"line\">408</div><div class=\"line\">409</div><div class=\"line\">410</div><div class=\"line\">411</div><div class=\"line\">412</div><div class=\"line\">413</div><div class=\"line\">414</div><div class=\"line\">415</div><div class=\"line\">416</div><div class=\"line\">417</div><div class=\"line\">418</div><div class=\"line\">419</div><div class=\"line\">420</div><div class=\"line\">421</div><div class=\"line\">422</div><div class=\"line\">423</div><div class=\"line\">424</div><div class=\"line\">425</div><div class=\"line\">426</div><div class=\"line\">427</div><div class=\"line\">428</div><div class=\"line\">429</div><div class=\"line\">430</div><div class=\"line\">431</div><div class=\"line\">432</div><div class=\"line\">433</div><div class=\"line\">434</div><div class=\"line\">435</div><div class=\"line\">436</div><div class=\"line\">437</div><div class=\"line\">438</div><div class=\"line\">439</div><div class=\"line\">440</div><div class=\"line\">441</div><div class=\"line\">442</div><div class=\"line\">443</div><div class=\"line\">444</div><div class=\"line\">445</div><div class=\"line\">446</div><div class=\"line\">447</div><div class=\"line\">448</div><div class=\"line\">449</div><div class=\"line\">450</div><div class=\"line\">451</div><div class=\"line\">452</div><div class=\"line\">453</div><div class=\"line\">454</div><div class=\"line\">455</div><div class=\"line\">456</div><div class=\"line\">457</div><div class=\"line\">458</div><div class=\"line\">459</div><div class=\"line\">460</div><div class=\"line\">461</div><div class=\"line\">462</div><div class=\"line\">463</div><div class=\"line\">464</div><div class=\"line\">465</div><div class=\"line\">466</div><div class=\"line\">467</div><div class=\"line\">468</div><div class=\"line\">469</div><div class=\"line\">470</div><div class=\"line\">471</div><div class=\"line\">472</div><div class=\"line\">473</div><div class=\"line\">474</div><div class=\"line\">475</div><div class=\"line\">476</div><div class=\"line\">477</div><div class=\"line\">478</div><div class=\"line\">479</div><div class=\"line\">480</div><div class=\"line\">481</div><div class=\"line\">482</div><div class=\"line\">483</div><div class=\"line\">484</div><div class=\"line\">485</div><div class=\"line\">486</div><div class=\"line\">487</div><div class=\"line\">488</div><div class=\"line\">489</div><div class=\"line\">490</div><div class=\"line\">491</div><div class=\"line\">492</div><div class=\"line\">493</div><div class=\"line\">494</div><div class=\"line\">495</div><div class=\"line\">496</div><div class=\"line\">497</div><div class=\"line\">498</div><div class=\"line\">499</div><div class=\"line\">500</div><div class=\"line\">501</div><div class=\"line\">502</div><div class=\"line\">503</div><div class=\"line\">504</div><div class=\"line\">505</div><div class=\"line\">506</div><div class=\"line\">507</div><div class=\"line\">508</div><div class=\"line\">509</div><div class=\"line\">510</div><div class=\"line\">511</div><div class=\"line\">512</div><div class=\"line\">513</div><div class=\"line\">514</div><div class=\"line\">515</div><div class=\"line\">516</div><div class=\"line\">517</div><div class=\"line\">518</div><div class=\"line\">519</div><div class=\"line\">520</div><div class=\"line\">521</div><div class=\"line\">522</div><div class=\"line\">523</div><div class=\"line\">524</div><div class=\"line\">525</div><div class=\"line\">526</div><div class=\"line\">527</div><div class=\"line\">528</div><div class=\"line\">529</div><div class=\"line\">530</div><div class=\"line\">531</div><div class=\"line\">532</div><div class=\"line\">533</div><div class=\"line\">534</div><div class=\"line\">535</div><div class=\"line\">536</div><div class=\"line\">537</div><div class=\"line\">538</div><div class=\"line\">539</div><div class=\"line\">540</div><div class=\"line\">541</div><div class=\"line\">542</div><div class=\"line\">543</div><div class=\"line\">544</div><div class=\"line\">545</div><div class=\"line\">546</div><div class=\"line\">547</div><div class=\"line\">548</div><div class=\"line\">549</div><div class=\"line\">550</div><div class=\"line\">551</div><div class=\"line\">552</div><div class=\"line\">553</div><div class=\"line\">554</div><div class=\"line\">555</div><div class=\"line\">556</div><div class=\"line\">557</div><div class=\"line\">558</div><div class=\"line\">559</div><div class=\"line\">560</div><div class=\"line\">561</div><div class=\"line\">562</div><div class=\"line\">563</div><div class=\"line\">564</div><div class=\"line\">565</div><div class=\"line\">566</div><div class=\"line\">567</div><div class=\"line\">568</div><div class=\"line\">569</div><div class=\"line\">570</div><div class=\"line\">571</div><div class=\"line\">572</div><div class=\"line\">573</div><div class=\"line\">574</div><div class=\"line\">575</div><div class=\"line\">576</div><div class=\"line\">577</div><div class=\"line\">578</div><div class=\"line\">579</div><div class=\"line\">580</div><div class=\"line\">581</div><div class=\"line\">582</div><div class=\"line\">583</div><div class=\"line\">584</div><div class=\"line\">585</div><div class=\"line\">586</div><div class=\"line\">587</div><div class=\"line\">588</div><div class=\"line\">589</div><div class=\"line\">590</div><div class=\"line\">591</div><div class=\"line\">592</div><div class=\"line\">593</div><div class=\"line\">594</div><div class=\"line\">595</div><div class=\"line\">596</div><div class=\"line\">597</div><div class=\"line\">598</div><div class=\"line\">599</div><div class=\"line\">600</div><div class=\"line\">601</div><div class=\"line\">602</div><div class=\"line\">603</div><div class=\"line\">604</div><div class=\"line\">605</div><div class=\"line\">606</div><div class=\"line\">607</div><div class=\"line\">608</div><div class=\"line\">609</div><div class=\"line\">610</div><div class=\"line\">611</div><div class=\"line\">612</div><div class=\"line\">613</div><div class=\"line\">614</div><div class=\"line\">615</div><div class=\"line\">616</div><div class=\"line\">617</div><div class=\"line\">618</div><div class=\"line\">619</div><div class=\"line\">620</div><div class=\"line\">621</div><div class=\"line\">622</div><div class=\"line\">623</div><div class=\"line\">624</div><div class=\"line\">625</div><div class=\"line\">626</div><div class=\"line\">627</div><div class=\"line\">628</div><div class=\"line\">629</div><div class=\"line\">630</div><div class=\"line\">631</div><div class=\"line\">632</div><div class=\"line\">633</div><div class=\"line\">634</div><div class=\"line\">635</div><div class=\"line\">636</div><div class=\"line\">637</div><div class=\"line\">638</div><div class=\"line\">639</div><div class=\"line\">640</div><div class=\"line\">641</div><div class=\"line\">642</div><div class=\"line\">643</div><div class=\"line\">644</div><div class=\"line\">645</div><div class=\"line\">646</div><div class=\"line\">647</div><div class=\"line\">648</div><div class=\"line\">649</div><div class=\"line\">650</div><div class=\"line\">651</div><div class=\"line\">652</div><div class=\"line\">653</div><div class=\"line\">654</div><div class=\"line\">655</div><div class=\"line\">656</div><div class=\"line\">657</div><div class=\"line\">658</div><div class=\"line\">659</div><div class=\"line\">660</div><div class=\"line\">661</div><div class=\"line\">662</div><div class=\"line\">663</div><div class=\"line\">664</div><div class=\"line\">665</div><div class=\"line\">666</div><div class=\"line\">667</div><div class=\"line\">668</div><div class=\"line\">669</div><div class=\"line\">670</div><div class=\"line\">671</div><div class=\"line\">672</div><div class=\"line\">673</div><div class=\"line\">674</div><div class=\"line\">675</div><div class=\"line\">676</div><div class=\"line\">677</div><div class=\"line\">678</div><div class=\"line\">679</div><div class=\"line\">680</div><div class=\"line\">681</div><div class=\"line\">682</div><div class=\"line\">683</div><div class=\"line\">684</div><div class=\"line\">685</div><div class=\"line\">686</div><div class=\"line\">687</div><div class=\"line\">688</div><div class=\"line\">689</div><div class=\"line\">690</div><div class=\"line\">691</div><div class=\"line\">692</div><div class=\"line\">693</div><div class=\"line\">694</div><div class=\"line\">695</div><div class=\"line\">696</div><div class=\"line\">697</div><div class=\"line\">698</div><div class=\"line\">699</div><div class=\"line\">700</div><div class=\"line\">701</div><div class=\"line\">702</div><div class=\"line\">703</div><div class=\"line\">704</div><div class=\"line\">705</div><div class=\"line\">706</div><div class=\"line\">707</div><div class=\"line\">708</div><div class=\"line\">709</div><div class=\"line\">710</div><div class=\"line\">711</div><div class=\"line\">712</div><div class=\"line\">713</div><div class=\"line\">714</div><div class=\"line\">715</div><div class=\"line\">716</div><div class=\"line\">717</div><div class=\"line\">718</div><div class=\"line\">719</div><div class=\"line\">720</div><div class=\"line\">721</div><div class=\"line\">722</div><div class=\"line\">723</div><div class=\"line\">724</div><div class=\"line\">725</div><div class=\"line\">726</div><div class=\"line\">727</div><div class=\"line\">728</div><div class=\"line\">729</div><div class=\"line\">730</div><div class=\"line\">731</div><div class=\"line\">732</div><div class=\"line\">733</div><div class=\"line\">734</div><div class=\"line\">735</div><div class=\"line\">736</div><div class=\"line\">737</div><div class=\"line\">738</div><div class=\"line\">739</div><div class=\"line\">740</div><div class=\"line\">741</div><div class=\"line\">742</div><div class=\"line\">743</div><div class=\"line\">744</div><div class=\"line\">745</div><div class=\"line\">746</div><div class=\"line\">747</div><div class=\"line\">748</div><div class=\"line\">749</div><div class=\"line\">750</div><div class=\"line\">751</div><div class=\"line\">752</div><div class=\"line\">753</div><div class=\"line\">754</div><div class=\"line\">755</div><div class=\"line\">756</div><div class=\"line\">757</div><div class=\"line\">758</div><div class=\"line\">759</div><div class=\"line\">760</div><div class=\"line\">761</div><div class=\"line\">762</div><div class=\"line\">763</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> CommonTools</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 文件操作夹</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> DirFileHelper</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"meta\">#region 检测指定目录是否存在</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定目录是否存在</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsExistDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> Directory.Exists(directoryPath);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 检测指定文件是否存在,如果存在返回true</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定文件是否存在,如果存在则返回true。</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsExistFile</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> File.Exists(filePath);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取指定目录中的文件列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取指定目录中所有文件列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>[] GetFileNames(<span class=\"built_in\">string</span> directoryPath)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//如果目录不存在，则抛出异常</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> FileNotFoundException();</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//获取文件列表</span></div><div class=\"line\">            <span class=\"keyword\">return</span> Directory.GetFiles(directoryPath);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取指定目录中所有子目录列表,若要搜索嵌套的子目录列表,请使用重载方法.</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>[] GetDirectories(<span class=\"built_in\">string</span> directoryPath)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> Directory.GetDirectories(directoryPath);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (IOException ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取指定目录及子目录中所有文件列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取指定目录及子目录中所有文件列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"searchPattern\"&gt;模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。</span></div><div class=\"line\">        <span class=\"comment\">/// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"isSearchChild\"&gt;是否搜索子目录&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>[] GetFileNames(<span class=\"built_in\">string</span> directoryPath, <span class=\"built_in\">string</span> searchPattern, <span class=\"keyword\">bool</span> isSearchChild)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//如果目录不存在，则抛出异常</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> FileNotFoundException();</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (isSearchChild)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> Directory.GetFiles(directoryPath, searchPattern, SearchOption.AllDirectories);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> Directory.GetFiles(directoryPath, searchPattern, SearchOption.TopDirectoryOnly);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (IOException ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 检测指定目录是否为空</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定目录是否为空</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsEmptyDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//判断是否存在文件</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] fileNames = GetFileNames(directoryPath);</div><div class=\"line\">                <span class=\"keyword\">if</span> (fileNames.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//判断是否存在文件夹</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] directoryNames = GetDirectories(directoryPath);</div><div class=\"line\">                <span class=\"keyword\">if</span> (directoryNames.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//这里记录日志</span></div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 检测指定目录中是否存在指定的文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定目录中是否存在指定的文件,若要搜索子目录请使用重载方法.</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"searchPattern\"&gt;模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。</span></div><div class=\"line\">        <span class=\"comment\">/// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">Contains</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath, <span class=\"built_in\">string</span> searchPattern)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//获取指定的文件列表</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] fileNames = GetFileNames(directoryPath, searchPattern, <span class=\"literal\">false</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//判断指定文件是否存在</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (fileNames.Length == <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.Message);</div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检测指定目录中是否存在指定的文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"searchPattern\"&gt;模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。</span></div><div class=\"line\">        <span class=\"comment\">/// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。&lt;/param&gt; </span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"isSearchChild\"&gt;是否搜索子目录&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">Contains</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath, <span class=\"built_in\">string</span> searchPattern, <span class=\"keyword\">bool</span> isSearchChild)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//获取指定的文件列表</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] fileNames = GetFileNames(directoryPath, searchPattern, <span class=\"literal\">true</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//判断指定文件是否存在</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (fileNames.Length == <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(ex.Message);</div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 创建目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir\"&gt;要创建的目录路径包括目录名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateDir</span><span class=\"params\">(<span class=\"built_in\">string</span> dir)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (dir.Length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (!Directory.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir))</div><div class=\"line\">                Directory.CreateDirectory(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 删除目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir\"&gt;要删除的目录路径和名称&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteDir</span><span class=\"params\">(<span class=\"built_in\">string</span> dir)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (dir.Length == <span class=\"number\">0</span>) <span class=\"keyword\">return</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (Directory.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir))</div><div class=\"line\">                Directory.Delete(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 删除文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"file\"&gt;要删除的文件路径和名称&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteFile</span><span class=\"params\">(<span class=\"built_in\">string</span> file)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + file))</div><div class=\"line\">                File.Delete(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + file);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 创建文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir\"&gt;带后缀的文件名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"pagestr\"&gt;文件内容&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateFile</span><span class=\"params\">(<span class=\"built_in\">string</span> dir, <span class=\"built_in\">string</span> pagestr)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            dir = dir.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (dir.IndexOf(<span class=\"string\">\"\\\\\"</span>) &gt; <span class=\"number\">-1</span>)</div><div class=\"line\">                CreateDir(dir.Substring(<span class=\"number\">0</span>, dir.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)));</div><div class=\"line\">            System.IO.StreamWriter sw = <span class=\"keyword\">new</span> System.IO.StreamWriter(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir, <span class=\"literal\">false</span>, System.Text.Encoding.GetEncoding(<span class=\"string\">\"GB2312\"</span>));</div><div class=\"line\">            sw.Write(pagestr);</div><div class=\"line\">            sw.Close();</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 移动文件(剪贴--粘贴)</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 移动文件(剪贴--粘贴)</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir1\"&gt;要移动的文件的路径及全名(包括后缀)&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir2\"&gt;文件移动到新的位置,并指定新的文件名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">MoveFile</span><span class=\"params\">(<span class=\"built_in\">string</span> dir1, <span class=\"built_in\">string</span> dir2)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            dir1 = dir1.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            dir2 = dir2.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir1))</div><div class=\"line\">                File.Move(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir1, System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir2);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 复制文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 复制文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir1\"&gt;要复制的文件的路径已经全名(包括后缀)&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"dir2\"&gt;目标位置,并指定新的文件名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CopyFile</span><span class=\"params\">(<span class=\"built_in\">string</span> dir1, <span class=\"built_in\">string</span> dir2)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            dir1 = dir1.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            dir2 = dir2.Replace(<span class=\"string\">\"/\"</span>, <span class=\"string\">\"\\\\\"</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span> (File.Exists(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir1))</div><div class=\"line\">            &#123;</div><div class=\"line\">                File.Copy(System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir1, System.Web.HttpContext.Current.Request.PhysicalApplicationPath + <span class=\"string\">\"\\\\\"</span> + dir2, <span class=\"literal\">true</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 根据时间得到目录名 / 格式:yyyyMMdd 或者 HHmmssff</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 根据时间得到目录名yyyyMMdd</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetDateDir</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> DateTime.Now.ToString(<span class=\"string\">\"yyyyMMdd\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 根据时间得到文件名HHmmssff</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetDateFile</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> DateTime.Now.ToString(<span class=\"string\">\"HHmmssff\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 复制文件夹</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 复制文件夹(递归)</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"varFromDirectory\"&gt;源文件夹路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"varToDirectory\"&gt;目标文件夹路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CopyFolder</span><span class=\"params\">(<span class=\"built_in\">string</span> varFromDirectory, <span class=\"built_in\">string</span> varToDirectory)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Directory.CreateDirectory(varToDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (!Directory.Exists(varFromDirectory)) <span class=\"keyword\">return</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span>[] directories = Directory.GetDirectories(varFromDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (directories.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                foreach (<span class=\"built_in\">string</span> d in directories)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    CopyFolder(d, varToDirectory + d.Substring(d.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)));</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"built_in\">string</span>[] files = Directory.GetFiles(varFromDirectory);</div><div class=\"line\">            <span class=\"keyword\">if</span> (files.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                foreach (<span class=\"built_in\">string</span> s in files)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    File.Copy(s, varToDirectory + s.Substring(s.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)), <span class=\"literal\">true</span>);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 检查文件,如果文件不存在则创建</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 检查文件,如果文件不存在则创建  </span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"FilePath\"&gt;路径,包括文件名&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ExistsFile</span><span class=\"params\">(<span class=\"built_in\">string</span> FilePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//if(!File.Exists(FilePath))    </span></div><div class=\"line\">            <span class=\"comment\">//File.Create(FilePath);    </span></div><div class=\"line\">            <span class=\"comment\">//以上写法会报错,详细解释请看下文.........   </span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!File.Exists(FilePath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                FileStream fs = File.Create(FilePath);</div><div class=\"line\">                fs.Close();</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 删除指定文件夹对应其他文件夹里的文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除指定文件夹对应其他文件夹里的文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"varFromDirectory\"&gt;指定文件夹路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"varToDirectory\"&gt;对应其他文件夹路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteFolderFiles</span><span class=\"params\">(<span class=\"built_in\">string</span> varFromDirectory, <span class=\"built_in\">string</span> varToDirectory)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Directory.CreateDirectory(varToDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (!Directory.Exists(varFromDirectory)) <span class=\"keyword\">return</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span>[] directories = Directory.GetDirectories(varFromDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (directories.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                foreach (<span class=\"built_in\">string</span> d in directories)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    DeleteFolderFiles(d, varToDirectory + d.Substring(d.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)));</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">            <span class=\"built_in\">string</span>[] files = Directory.GetFiles(varFromDirectory);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (files.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                foreach (<span class=\"built_in\">string</span> s in files)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    File.Delete(varToDirectory + s.Substring(s.LastIndexOf(<span class=\"string\">\"\\\\\"</span>)));</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 从文件的绝对路径中获取文件名( 包含扩展名 )</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 从文件的绝对路径中获取文件名( 包含扩展名 )</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetFileName</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//获取文件的名称</span></div><div class=\"line\">            FileInfo fi = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\">            <span class=\"keyword\">return</span> fi.Name;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 复制文件参考方法,页面中引用</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"cDir\"&gt;新路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"TempId\"&gt;模板引擎替换编号&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CopyFiles</span><span class=\"params\">(<span class=\"built_in\">string</span> cDir, <span class=\"built_in\">string</span> TempId)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//if (Directory.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\"))</span></div><div class=\"line\">            <span class=\"comment\">//&#123;</span></div><div class=\"line\">            <span class=\"comment\">//    string TempStr = string.Empty;</span></div><div class=\"line\">            <span class=\"comment\">//    StreamWriter sw;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Default.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Default.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Default.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Column.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Column.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\List.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Content.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Content.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\View.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\MoreDiss.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\MoreDiss.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\DissList.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\ShowDiss.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\ShowDiss.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Diss.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Review.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Review.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Review.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//    if (File.Exists(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Search.aspx\"))</span></div><div class=\"line\">            <span class=\"comment\">//    &#123;</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = File.ReadAllText(Request.PhysicalApplicationPath + \"\\\\Controls\\\\Search.aspx\");</span></div><div class=\"line\">            <span class=\"comment\">//        TempStr = TempStr.Replace(\"&#123;$ChannelId$&#125;\", TempId);</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//        sw = new StreamWriter(Request.PhysicalApplicationPath + \"\\\\\" + cDir + \"\\\\Search.aspx\", false, System.Text.Encoding.GetEncoding(\"GB2312\"));</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Write(TempStr);</span></div><div class=\"line\">            <span class=\"comment\">//        sw.Close();</span></div><div class=\"line\">            <span class=\"comment\">//    &#125;</span></div><div class=\"line\">            <span class=\"comment\">//&#125;</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 创建一个目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建一个目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//如果目录不存在则创建该目录</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (!IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                Directory.CreateDirectory(directoryPath);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 创建一个文件</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建一个文件。</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateFile</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//如果文件不存在则创建该文件</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (!IsExistFile(filePath))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"comment\">//创建一个FileInfo对象</span></div><div class=\"line\">                    FileInfo file = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//创建文件</span></div><div class=\"line\">                    FileStream fs = file.Create();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//关闭文件流</span></div><div class=\"line\">                    fs.Close();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 创建一个文件,并将字节流写入文件。</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"buffer\"&gt;二进制流数据&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateFile</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath, byte[] buffer)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//如果文件不存在则创建该文件</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (!IsExistFile(filePath))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"comment\">//创建一个FileInfo对象</span></div><div class=\"line\">                    FileInfo file = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//创建文件</span></div><div class=\"line\">                    FileStream fs = file.Create();</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//写入二进制流</span></div><div class=\"line\">                    fs.Write(buffer, <span class=\"number\">0</span>, buffer.Length);</div><div class=\"line\"></div><div class=\"line\">                    <span class=\"comment\">//关闭文件流</span></div><div class=\"line\">                    fs.Close();</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (Exception ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//LogHelper.WriteTraceLog(TraceLogLevel.Error, ex.Message);</span></div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取文本文件的行数</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取文本文件的行数</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">GetLineCount</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//将文本文件的各行读到一个字符串数组中</span></div><div class=\"line\">            <span class=\"built_in\">string</span>[] rows = File.ReadAllLines(filePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//返回行数</span></div><div class=\"line\">            <span class=\"keyword\">return</span> rows.Length;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取一个文件的长度</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取一个文件的长度,单位为Byte</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">GetFileSize</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//创建一个文件对象</span></div><div class=\"line\">            FileInfo fi = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//获取文件的大小</span></div><div class=\"line\">            <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>)fi.Length;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 获取指定目录中的子目录列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 获取指定目录及子目录中所有子目录列表</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"searchPattern\"&gt;模式字符串，\"*\"代表0或N个字符，\"?\"代表1个字符。</span></div><div class=\"line\">        <span class=\"comment\">/// 范例：\"Log*.xml\"表示搜索所有以Log开头的Xml文件。&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"isSearchChild\"&gt;是否搜索子目录&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span>[] GetDirectories(<span class=\"built_in\">string</span> directoryPath, <span class=\"built_in\">string</span> searchPattern, <span class=\"keyword\">bool</span> isSearchChild)</div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (isSearchChild)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> Directory.GetDirectories(directoryPath, searchPattern, SearchOption.AllDirectories);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"keyword\">else</span></div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">return</span> Directory.GetDirectories(directoryPath, searchPattern, SearchOption.TopDirectoryOnly);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span> (IOException ex)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">throw</span> ex;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 向文本文件写入内容</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 向文本文件中写入内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"text\"&gt;写入的内容&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"encoding\"&gt;编码&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">WriteText</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath, <span class=\"built_in\">string</span> text, Encoding encoding)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//向文件写入内容</span></div><div class=\"line\">            File.WriteAllText(filePath, text, encoding);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 向文本文件的尾部追加内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 向文本文件的尾部追加内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"content\"&gt;写入的内容&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AppendText</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath, <span class=\"built_in\">string</span> content)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            File.AppendAllText(filePath, content);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 将现有文件的内容复制到新文件中</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 将源文件的内容复制到目标文件中</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"sourceFilePath\"&gt;源文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"destFilePath\"&gt;目标文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Copy</span><span class=\"params\">(<span class=\"built_in\">string</span> sourceFilePath, <span class=\"built_in\">string</span> destFilePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            File.Copy(sourceFilePath, destFilePath, <span class=\"literal\">true</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 将文件移动到指定目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 将文件移动到指定目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"sourceFilePath\"&gt;需要移动的源文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"descDirectoryPath\"&gt;移动到的目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Move</span><span class=\"params\">(<span class=\"built_in\">string</span> sourceFilePath, <span class=\"built_in\">string</span> descDirectoryPath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//获取源文件的名称</span></div><div class=\"line\">            <span class=\"built_in\">string</span> sourceFileName = GetFileName(sourceFilePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (IsExistDirectory(descDirectoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//如果目标中存在同名文件,则删除</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (IsExistFile(descDirectoryPath + <span class=\"string\">\"\\\\\"</span> + sourceFileName))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    DeleteFile(descDirectoryPath + <span class=\"string\">\"\\\\\"</span> + sourceFileName);</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"comment\">//将文件移动到指定目录</span></div><div class=\"line\">                File.Move(sourceFilePath, descDirectoryPath + <span class=\"string\">\"\\\\\"</span> + sourceFileName);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 从文件的绝对路径中获取文件名( 不包含扩展名 )</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 从文件的绝对路径中获取文件名( 不包含扩展名 )</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetFileNameNoExtension</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//获取文件的名称</span></div><div class=\"line\">            FileInfo fi = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\">            <span class=\"keyword\">return</span> fi.Name.Split(<span class=\"string\">'.'</span>)[<span class=\"number\">0</span>];</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 从文件的绝对路径中获取扩展名</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 从文件的绝对路径中获取扩展名</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;        </span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetExtension</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//获取文件的名称</span></div><div class=\"line\">            FileInfo fi = <span class=\"keyword\">new</span> FileInfo(filePath);</div><div class=\"line\">            <span class=\"keyword\">return</span> fi.Extension;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 清空指定目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 清空指定目录下所有文件及子目录,但该目录依然保存.</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ClearDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//删除目录中所有的文件</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] fileNames = GetFileNames(directoryPath);</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; fileNames.Length; i++)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    DeleteFile(fileNames[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//删除目录中所有的子目录</span></div><div class=\"line\">                <span class=\"built_in\">string</span>[] directoryNames = GetDirectories(directoryPath);</div><div class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; directoryNames.Length; i++)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    DeleteDirectory(directoryNames[i]);</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 清空文件内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 清空文件内容</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"filePath\"&gt;文件的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ClearFile</span><span class=\"params\">(<span class=\"built_in\">string</span> filePath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//删除文件</span></div><div class=\"line\">            File.Delete(filePath);</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//重新创建该文件</span></div><div class=\"line\">            CreateFile(filePath);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"meta\">#region 删除指定目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 删除指定目录及其所有子目录</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"directoryPath\"&gt;指定目录的绝对路径&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">DeleteDirectory</span><span class=\"params\">(<span class=\"built_in\">string</span> directoryPath)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (IsExistDirectory(directoryPath))</div><div class=\"line\">            &#123;</div><div class=\"line\">                Directory.Delete(directoryPath, <span class=\"literal\">true</span>);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"meta\">#endregion</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"动态调用webservice","date":"2016-12-24T02:20:50.000Z","+description":"动态调用webservice demo","_content":" 关于webservice的调用方法\n 之前使用或了解的只是通过vs的操作界面直接引入web服务而调用的，现在才知道调用的方式也可以使用反射的机制来实现，\n 网上找到的代码本地测试可以使用，留存。\n\n<!--more-->\n```C\nusing System;\nusing System.Web.Services.Description;\nusing System.CodeDom;\nusing Microsoft.CSharp;\nusing System.CodeDom.Compiler;\nusing System.Net;\nusing System.IO;\n\nnamespace DirectInvoke\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string serviceUrl = \"http://www.webxml.com.cn/WebServices/ChinaZipSearchWebService.asmx\";\n            object o = Webservice.InvokeWebService(serviceUrl, \"getSupportProvince\", new object[] { });\n        }\n        //反射获得方法及成员\n        public void PrintInstanceInfor(Type t)\n        {\n            //获取所有方法 \n            System.Reflection.MethodInfo[] methods = t.GetMethods();\n\n            //获取所有成员 \n            System.Reflection.MemberInfo[] members = t.GetMembers();\n\n            //获取所有属性 \n            System.Reflection.PropertyInfo[] properties = t.GetProperties();\n        }\n    }\n    public class Webservice\n    {\n        /// <summary>\n        /// 实例化WebServices\n        /// </summary>\n        /// <param name=\"url\">WebServices地址</param>\n        /// <param name=\"methodname\">调用的方法</param>\n        /// <param name=\"args\">把webservices里需要的参数按顺序放到这个object[]里</param>\n        public static object InvokeWebService(string url, string methodname, object[] args)\n        {\n\n            //这里的namespace是需引用的webservices的命名空间，我没有改过，也可以使用。也可以加一个参数从外面传进来。\n            string @namespace = \"client\";\n            try\n            {\n                //获取WSDL\n                WebClient wc = new WebClient();\n                Stream stream = wc.OpenRead(url + \"?WSDL\");\n                ServiceDescription sd = ServiceDescription.Read(stream);\n                string classname = sd.Services[0].Name;\n                ServiceDescriptionImporter sdi = new ServiceDescriptionImporter();\n                sdi.AddServiceDescription(sd, \"\", \"\");\n                CodeNamespace cn = new CodeNamespace(@namespace);\n\n                //生成客户端代理类代码\n                CodeCompileUnit ccu = new CodeCompileUnit();\n                ccu.Namespaces.Add(cn);\n                sdi.Import(cn, ccu);\n                CSharpCodeProvider csc = new CSharpCodeProvider();\n                //ICodeCompiler icc = csc.CreateCompiler();\n\n                //设定编译参数\n                CompilerParameters cplist = new CompilerParameters();\n                cplist.GenerateExecutable = false;\n                cplist.GenerateInMemory = true;\n                cplist.ReferencedAssemblies.Add(\"System.dll\");\n                cplist.ReferencedAssemblies.Add(\"System.xml.dll\");\n                cplist.ReferencedAssemblies.Add(\"System.Web.Services.dll\");\n                cplist.ReferencedAssemblies.Add(\"System.Data.dll\");\n\n                //编译代理类\n                CompilerResults cr = csc.CompileAssemblyFromDom(cplist, ccu);\n                if (true == cr.Errors.HasErrors)\n                {\n                    System.Text.StringBuilder sb = new System.Text.StringBuilder();\n                    foreach (System.CodeDom.Compiler.CompilerError ce in cr.Errors)\n                    {\n                        sb.Append(ce.ToString());\n                        sb.Append(System.Environment.NewLine);\n                    }\n                    throw new Exception(sb.ToString());\n                }\n\n                //生成代理实例，并调用方法\n                System.Reflection.Assembly assembly = cr.CompiledAssembly;\n                Type t = assembly.GetType(@namespace + \".\" + classname, true, true);\n                object obj = Activator.CreateInstance(t);\n                System.Reflection.MethodInfo mi = t.GetMethod(methodname);\n\n                return mi.Invoke(obj, args);\n            }\n            catch\n            {\n                return null;\n            }\n        }\n    }\n\n\n}\n```\n[核心代码转自](http://www.knowsky.com/898239.html)","source":"_posts/动态调用webservice.md","raw":"---\ntitle: 动态调用webservice\ndate: 2016-12-24 10:20:50\ntags:\n- c#基础\ncategories:\n- 插件\n+description: \"动态调用webservice demo\"\n---\n 关于webservice的调用方法\n 之前使用或了解的只是通过vs的操作界面直接引入web服务而调用的，现在才知道调用的方式也可以使用反射的机制来实现，\n 网上找到的代码本地测试可以使用，留存。\n\n<!--more-->\n```C\nusing System;\nusing System.Web.Services.Description;\nusing System.CodeDom;\nusing Microsoft.CSharp;\nusing System.CodeDom.Compiler;\nusing System.Net;\nusing System.IO;\n\nnamespace DirectInvoke\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string serviceUrl = \"http://www.webxml.com.cn/WebServices/ChinaZipSearchWebService.asmx\";\n            object o = Webservice.InvokeWebService(serviceUrl, \"getSupportProvince\", new object[] { });\n        }\n        //反射获得方法及成员\n        public void PrintInstanceInfor(Type t)\n        {\n            //获取所有方法 \n            System.Reflection.MethodInfo[] methods = t.GetMethods();\n\n            //获取所有成员 \n            System.Reflection.MemberInfo[] members = t.GetMembers();\n\n            //获取所有属性 \n            System.Reflection.PropertyInfo[] properties = t.GetProperties();\n        }\n    }\n    public class Webservice\n    {\n        /// <summary>\n        /// 实例化WebServices\n        /// </summary>\n        /// <param name=\"url\">WebServices地址</param>\n        /// <param name=\"methodname\">调用的方法</param>\n        /// <param name=\"args\">把webservices里需要的参数按顺序放到这个object[]里</param>\n        public static object InvokeWebService(string url, string methodname, object[] args)\n        {\n\n            //这里的namespace是需引用的webservices的命名空间，我没有改过，也可以使用。也可以加一个参数从外面传进来。\n            string @namespace = \"client\";\n            try\n            {\n                //获取WSDL\n                WebClient wc = new WebClient();\n                Stream stream = wc.OpenRead(url + \"?WSDL\");\n                ServiceDescription sd = ServiceDescription.Read(stream);\n                string classname = sd.Services[0].Name;\n                ServiceDescriptionImporter sdi = new ServiceDescriptionImporter();\n                sdi.AddServiceDescription(sd, \"\", \"\");\n                CodeNamespace cn = new CodeNamespace(@namespace);\n\n                //生成客户端代理类代码\n                CodeCompileUnit ccu = new CodeCompileUnit();\n                ccu.Namespaces.Add(cn);\n                sdi.Import(cn, ccu);\n                CSharpCodeProvider csc = new CSharpCodeProvider();\n                //ICodeCompiler icc = csc.CreateCompiler();\n\n                //设定编译参数\n                CompilerParameters cplist = new CompilerParameters();\n                cplist.GenerateExecutable = false;\n                cplist.GenerateInMemory = true;\n                cplist.ReferencedAssemblies.Add(\"System.dll\");\n                cplist.ReferencedAssemblies.Add(\"System.xml.dll\");\n                cplist.ReferencedAssemblies.Add(\"System.Web.Services.dll\");\n                cplist.ReferencedAssemblies.Add(\"System.Data.dll\");\n\n                //编译代理类\n                CompilerResults cr = csc.CompileAssemblyFromDom(cplist, ccu);\n                if (true == cr.Errors.HasErrors)\n                {\n                    System.Text.StringBuilder sb = new System.Text.StringBuilder();\n                    foreach (System.CodeDom.Compiler.CompilerError ce in cr.Errors)\n                    {\n                        sb.Append(ce.ToString());\n                        sb.Append(System.Environment.NewLine);\n                    }\n                    throw new Exception(sb.ToString());\n                }\n\n                //生成代理实例，并调用方法\n                System.Reflection.Assembly assembly = cr.CompiledAssembly;\n                Type t = assembly.GetType(@namespace + \".\" + classname, true, true);\n                object obj = Activator.CreateInstance(t);\n                System.Reflection.MethodInfo mi = t.GetMethod(methodname);\n\n                return mi.Invoke(obj, args);\n            }\n            catch\n            {\n                return null;\n            }\n        }\n    }\n\n\n}\n```\n[核心代码转自](http://www.knowsky.com/898239.html)","slug":"动态调用webservice","published":1,"updated":"2018-01-11T01:55:38.849Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayy7001vocm7qi47imvu","content":"<p> 关于webservice的调用方法<br> 之前使用或了解的只是通过vs的操作界面直接引入web服务而调用的，现在才知道调用的方式也可以使用反射的机制来实现，<br> 网上找到的代码本地测试可以使用，留存。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Services.Description;</div><div class=\"line\"><span class=\"keyword\">using</span> System.CodeDom;</div><div class=\"line\"><span class=\"keyword\">using</span> Microsoft.CSharp;</div><div class=\"line\"><span class=\"keyword\">using</span> System.CodeDom.Compiler;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Net;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> DirectInvoke</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> serviceUrl = <span class=\"string\">\"http://www.webxml.com.cn/WebServices/ChinaZipSearchWebService.asmx\"</span>;</div><div class=\"line\">            object o = Webservice.InvokeWebService(serviceUrl, <span class=\"string\">\"getSupportProvince\"</span>, <span class=\"keyword\">new</span> object[] &#123; &#125;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//反射获得方法及成员</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">PrintInstanceInfor</span><span class=\"params\">(Type t)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//获取所有方法 </span></div><div class=\"line\">            System.Reflection.MethodInfo[] methods = t.GetMethods();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//获取所有成员 </span></div><div class=\"line\">            System.Reflection.MemberInfo[] members = t.GetMembers();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//获取所有属性 </span></div><div class=\"line\">            System.Reflection.PropertyInfo[] properties = t.GetProperties();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Webservice</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 实例化WebServices</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"url\"&gt;WebServices地址&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"methodname\"&gt;调用的方法&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"args\"&gt;把webservices里需要的参数按顺序放到这个object[]里&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> object <span class=\"title\">InvokeWebService</span><span class=\"params\">(<span class=\"built_in\">string</span> url, <span class=\"built_in\">string</span> methodname, object[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//这里的namespace是需引用的webservices的命名空间，我没有改过，也可以使用。也可以加一个参数从外面传进来。</span></div><div class=\"line\">            <span class=\"built_in\">string</span> @<span class=\"keyword\">namespace</span> = <span class=\"string\">\"client\"</span>;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//获取WSDL</span></div><div class=\"line\">                WebClient wc = <span class=\"keyword\">new</span> WebClient();</div><div class=\"line\">                Stream stream = wc.OpenRead(url + <span class=\"string\">\"?WSDL\"</span>);</div><div class=\"line\">                ServiceDescription sd = ServiceDescription.Read(stream);</div><div class=\"line\">                <span class=\"built_in\">string</span> classname = sd.Services[<span class=\"number\">0</span>].Name;</div><div class=\"line\">                ServiceDescriptionImporter sdi = <span class=\"keyword\">new</span> ServiceDescriptionImporter();</div><div class=\"line\">                sdi.AddServiceDescription(sd, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>);</div><div class=\"line\">                CodeNamespace cn = <span class=\"keyword\">new</span> CodeNamespace(@<span class=\"keyword\">namespace</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//生成客户端代理类代码</span></div><div class=\"line\">                CodeCompileUnit ccu = <span class=\"keyword\">new</span> CodeCompileUnit();</div><div class=\"line\">                ccu.Namespaces.Add(cn);</div><div class=\"line\">                sdi.Import(cn, ccu);</div><div class=\"line\">                CSharpCodeProvider csc = <span class=\"keyword\">new</span> CSharpCodeProvider();</div><div class=\"line\">                <span class=\"comment\">//ICodeCompiler icc = csc.CreateCompiler();</span></div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//设定编译参数</span></div><div class=\"line\">                CompilerParameters cplist = <span class=\"keyword\">new</span> CompilerParameters();</div><div class=\"line\">                cplist.GenerateExecutable = <span class=\"literal\">false</span>;</div><div class=\"line\">                cplist.GenerateInMemory = <span class=\"literal\">true</span>;</div><div class=\"line\">                cplist.ReferencedAssemblies.Add(<span class=\"string\">\"System.dll\"</span>);</div><div class=\"line\">                cplist.ReferencedAssemblies.Add(<span class=\"string\">\"System.xml.dll\"</span>);</div><div class=\"line\">                cplist.ReferencedAssemblies.Add(<span class=\"string\">\"System.Web.Services.dll\"</span>);</div><div class=\"line\">                cplist.ReferencedAssemblies.Add(<span class=\"string\">\"System.Data.dll\"</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//编译代理类</span></div><div class=\"line\">                CompilerResults cr = csc.CompileAssemblyFromDom(cplist, ccu);</div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == cr.Errors.HasErrors)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    System.Text.StringBuilder sb = <span class=\"keyword\">new</span> System.Text.StringBuilder();</div><div class=\"line\">                    foreach (System.CodeDom.Compiler.CompilerError ce in cr.Errors)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        sb.Append(ce.ToString());</div><div class=\"line\">                        sb.Append(System.Environment.NewLine);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(sb.ToString());</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//生成代理实例，并调用方法</span></div><div class=\"line\">                System.Reflection.Assembly assembly = cr.CompiledAssembly;</div><div class=\"line\">                Type t = assembly.GetType(@<span class=\"keyword\">namespace</span> + <span class=\"string\">\".\"</span> + classname, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</div><div class=\"line\">                object obj = Activator.CreateInstance(t);</div><div class=\"line\">                System.Reflection.MethodInfo mi = t.GetMethod(methodname);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">return</span> mi.Invoke(obj, args);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> null;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.knowsky.com/898239.html\" target=\"_blank\" rel=\"external\">核心代码转自</a></p>\n","excerpt":"<p> 关于webservice的调用方法<br> 之前使用或了解的只是通过vs的操作界面直接引入web服务而调用的，现在才知道调用的方式也可以使用反射的机制来实现，<br> 网上找到的代码本地测试可以使用，留存。</p>","more":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Web.Services.Description;</div><div class=\"line\"><span class=\"keyword\">using</span> System.CodeDom;</div><div class=\"line\"><span class=\"keyword\">using</span> Microsoft.CSharp;</div><div class=\"line\"><span class=\"keyword\">using</span> System.CodeDom.Compiler;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Net;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> DirectInvoke</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">string</span> serviceUrl = <span class=\"string\">\"http://www.webxml.com.cn/WebServices/ChinaZipSearchWebService.asmx\"</span>;</div><div class=\"line\">            object o = Webservice.InvokeWebService(serviceUrl, <span class=\"string\">\"getSupportProvince\"</span>, <span class=\"keyword\">new</span> object[] &#123; &#125;);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">//反射获得方法及成员</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">PrintInstanceInfor</span><span class=\"params\">(Type t)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//获取所有方法 </span></div><div class=\"line\">            System.Reflection.MethodInfo[] methods = t.GetMethods();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//获取所有成员 </span></div><div class=\"line\">            System.Reflection.MemberInfo[] members = t.GetMembers();</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//获取所有属性 </span></div><div class=\"line\">            System.Reflection.PropertyInfo[] properties = t.GetProperties();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Webservice</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 实例化WebServices</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"url\"&gt;WebServices地址&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"methodname\"&gt;调用的方法&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"args\"&gt;把webservices里需要的参数按顺序放到这个object[]里&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> object <span class=\"title\">InvokeWebService</span><span class=\"params\">(<span class=\"built_in\">string</span> url, <span class=\"built_in\">string</span> methodname, object[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//这里的namespace是需引用的webservices的命名空间，我没有改过，也可以使用。也可以加一个参数从外面传进来。</span></div><div class=\"line\">            <span class=\"built_in\">string</span> @<span class=\"keyword\">namespace</span> = <span class=\"string\">\"client\"</span>;</div><div class=\"line\">            <span class=\"keyword\">try</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//获取WSDL</span></div><div class=\"line\">                WebClient wc = <span class=\"keyword\">new</span> WebClient();</div><div class=\"line\">                Stream stream = wc.OpenRead(url + <span class=\"string\">\"?WSDL\"</span>);</div><div class=\"line\">                ServiceDescription sd = ServiceDescription.Read(stream);</div><div class=\"line\">                <span class=\"built_in\">string</span> classname = sd.Services[<span class=\"number\">0</span>].Name;</div><div class=\"line\">                ServiceDescriptionImporter sdi = <span class=\"keyword\">new</span> ServiceDescriptionImporter();</div><div class=\"line\">                sdi.AddServiceDescription(sd, <span class=\"string\">\"\"</span>, <span class=\"string\">\"\"</span>);</div><div class=\"line\">                CodeNamespace cn = <span class=\"keyword\">new</span> CodeNamespace(@<span class=\"keyword\">namespace</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//生成客户端代理类代码</span></div><div class=\"line\">                CodeCompileUnit ccu = <span class=\"keyword\">new</span> CodeCompileUnit();</div><div class=\"line\">                ccu.Namespaces.Add(cn);</div><div class=\"line\">                sdi.Import(cn, ccu);</div><div class=\"line\">                CSharpCodeProvider csc = <span class=\"keyword\">new</span> CSharpCodeProvider();</div><div class=\"line\">                <span class=\"comment\">//ICodeCompiler icc = csc.CreateCompiler();</span></div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//设定编译参数</span></div><div class=\"line\">                CompilerParameters cplist = <span class=\"keyword\">new</span> CompilerParameters();</div><div class=\"line\">                cplist.GenerateExecutable = <span class=\"literal\">false</span>;</div><div class=\"line\">                cplist.GenerateInMemory = <span class=\"literal\">true</span>;</div><div class=\"line\">                cplist.ReferencedAssemblies.Add(<span class=\"string\">\"System.dll\"</span>);</div><div class=\"line\">                cplist.ReferencedAssemblies.Add(<span class=\"string\">\"System.xml.dll\"</span>);</div><div class=\"line\">                cplist.ReferencedAssemblies.Add(<span class=\"string\">\"System.Web.Services.dll\"</span>);</div><div class=\"line\">                cplist.ReferencedAssemblies.Add(<span class=\"string\">\"System.Data.dll\"</span>);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//编译代理类</span></div><div class=\"line\">                CompilerResults cr = csc.CompileAssemblyFromDom(cplist, ccu);</div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"literal\">true</span> == cr.Errors.HasErrors)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    System.Text.StringBuilder sb = <span class=\"keyword\">new</span> System.Text.StringBuilder();</div><div class=\"line\">                    foreach (System.CodeDom.Compiler.CompilerError ce in cr.Errors)</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        sb.Append(ce.ToString());</div><div class=\"line\">                        sb.Append(System.Environment.NewLine);</div><div class=\"line\">                    &#125;</div><div class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Exception(sb.ToString());</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//生成代理实例，并调用方法</span></div><div class=\"line\">                System.Reflection.Assembly assembly = cr.CompiledAssembly;</div><div class=\"line\">                Type t = assembly.GetType(@<span class=\"keyword\">namespace</span> + <span class=\"string\">\".\"</span> + classname, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>);</div><div class=\"line\">                object obj = Activator.CreateInstance(t);</div><div class=\"line\">                System.Reflection.MethodInfo mi = t.GetMethod(methodname);</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">return</span> mi.Invoke(obj, args);</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">catch</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"keyword\">return</span> null;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><a href=\"http://www.knowsky.com/898239.html\">核心代码转自</a></p>"},{"title":"xml序列化","date":"2017-08-16T12:51:17.000Z","_content":"\n  可能目前系统之间接口多数以JSON或者XML形式进行数据的传输，\n项目中用到了XML，但是没有使用下面介绍的以序列化的形式将XML与对象\n进行互转，当时为了多个实现方案所以做了一些准备，\n先总结XML序列化与反序列化的使用基础，备用吧。\n\n\n\n> * 基础类及基础方法\n> * 代码实现\n> * 总结及出现的问题\n\n<!--more-->\n### 基础类及基础方法\n   基础类主要是：[System.Xml.Serialization.XmlSerializer][XmlSerializer]\nXmlSerializer类主要功能是将对象和XML文档之间进行序列化和发序列化。\nXmlSerializer可以方便将对象编码为XML。\n\n1、构造器创建XmlSerializer对象\n``` bash\n\t//创建新实例并指定改实例可以用来序列化和反序列化的类的类型\n\tXmlSerializer xmlSerializer=new XmlSerializer(Type);\n```\n2、XmlSerializer对象序列化对象\n``` bash\n\t//将对象Object序列化到TextWriter中\n\txmlSerializer.Serialize(TextWriter,Object);\n```\nTextWriter是一个有序序列字符的编写器，它是一个抽象类，常用的有\n两个子类即：StreamWriter（写入流） 和 StringWriter（写入字符串）.\n因此在实际使用时，这里选择[System.IO.StringWriter][StringWriter]。\n\n这里需要注意，如果要指定序列化后XML的编码类型，StringWriter有一个属性[Encoding][Encoding],\n但是该属性只读，无法进行设置，因此需要写一个子类来覆盖Encoding的属性。\n\n``` bash\n\tpublic sealed class Utf8StringWriter : StringWriter\n    {\n    \t//指定编码类型是UTF-8\n        public override Encoding Encoding { get { return Encoding.UTF8; } }\n    }\n\n\n    //将对象Object序列化到TextWriter的子类Utf8StringWriter中\n\txmlSerializer.Serialize(Utf8StringWriter,Object);\n```\n3、获得序列化后的结果\n``` bash\n\tstring XMLResult=Utf8StringWriter.ToString();\n```\n\n4、通过特性Attritube设置自定义类的序列化结果\n[System.Xml.Serialization][Serialization]命名空间中有一系列的特性类，用来控制复杂类型序列化的控制。例如XmlElementAttribute、XmlAttributeAttribute、XmlArrayAttribute、XmlArrayItemAttribute、XmlRootAttribute等等。\n[序列化帮助][序列化帮助]\n\n### 代码实现\n完整代码如下：\n```C\nusing System;\nusing System.IO;\nusing System.Reflection;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\n\nnamespace Test\n{\n    class Program\n    {\n       \n\n        static void Main(string[] args)\n        {\n            SERVICE service = new SERVICE();\n            HEAD head = service.HEAD;\n            head.nsrsbh = \"140115728183815\";\n            head.serviceversion = \"1.3\";\n            head.serviceid = \"jy.dzptfpkj\";\n            head.iszip = \"N\";\n            head.encryptcode = \"0\";\n            head.issyn = \"Y\";\n            service.Cmd = new Cmd[] {new Cmd(),new Cmd() };\n\n            //序列化这个对象\n            XmlSerializer serializer = new XmlSerializer(service.GetType());\n            \n            using (Utf8StringWriter writer = new Utf8StringWriter())\n            {\n                serializer.Serialize(writer, service);\n                Console.WriteLine(writer.ToString());\n            }  \n\n            Console.Read();\n        }\n    }\n\n\n    public class BaseObject\n    {\n        public BaseObject()\n        {\n            Type t = this.GetType();//构造器获得当前类型\n            PropertyInfo[] list=t.GetProperties();//获得所有属性\n\n            foreach (PropertyInfo item in list)\n            {\n                object[] objAttrs = item.GetCustomAttributes(typeof(XmlElementAttribute), true);//获得所有XmlElement特性\n                if (objAttrs != null && objAttrs.Length > 0)\n                {\n                    XmlElementAttribute attr = objAttrs[0] as XmlElementAttribute;\n                    //Console.WriteLine(attr.ElementName);\n                    attr.IsNullable = true;//将特性设置为可空\n                    \n                }\n\n                if (IsType(item.PropertyType, \"System.String\"))\n                {\n                    item.SetValue(this, string.Empty, null);//将字符串类型属性的值设置为空字符串\n                }\n            }\n        }\n        /// <summary>\n        /// 类型匹配\n        /// </summary>\n        /// <param name=\"type\"></param>\n        /// <param name=\"typeName\"></param>\n        /// <returns></returns>\n        public static bool IsType(Type type, string typeName)\n        {\n            if (type.ToString() == typeName)\n                return true;\n            if (type.ToString() == \"System.Object\")\n                return false;\n\n            return IsType(type.BaseType, typeName);\n        }\n    }\n\n    [XmlRoot(\"SERVICE\")]\n    public class SERVICE: BaseObject\n    {\n        public SERVICE() {\n            this.HEAD = new HEAD();\n        }\n        [XmlElement(\"HEAD\")]\n        public HEAD HEAD { get; set; }\n\n        [XmlArray(\"BODY\")]\n        [XmlArrayItem(\"cmd\")]\n        public Cmd[] Cmd { get; set; }\n\n       \n    }\n\n    public class HEAD : BaseObject\n    {\n        public HEAD()\n        {\n            this.RTNINF = new RTNINF();\n        }\n        [XmlElement(\"nsrsbh\")]\n        public string nsrsbh { get; set; }\n        [XmlElement(\"serviceversion\")]\n        public string serviceversion { get; set; }\n        [XmlElement(\"serviceid\")]\n        public string serviceid { get; set; }\n        [XmlElement(\"iszip\")]\n        public string iszip { get; set; }\n        [XmlElement(\"encryptcode\")]\n        public string encryptcode { get; set; }\n        [XmlElement(\"issyn\")]\n        public string issyn { get; set; }\n        [XmlElement(\"RTNINF\")]\n        public RTNINF RTNINF { get; set; }\n    }\n\n    public class RTNINF : BaseObject\n    {\n        [XmlElement(\"rtn_code\")]\n        public string rtn_code { get; set; }\n        [XmlElement(\"rtn_reason\")]\n        public string rtn_reason { get; set; }\n    }\n    public sealed class Utf8StringWriter : StringWriter\n    {\n        public override Encoding Encoding { get { return Encoding.UTF8; } }\n    }\n    \n    public class Cmd : BaseObject\n    {\n        [XmlElement(\"productid\")]\n        public string ProductId { get; set; }\n\n        [XmlElement(\"price\")]\n        public string Price { get; set; }\n\n        [XmlElement(\"date\")]\n        public string Date { get; set; }\n\n        [XmlElement(\"state\")]\n        public string State { get; set; }\n\n        [XmlElement(\"type\")]\n        public string Type { get; set; }\n    }\n   \n}\n\n```\n\n### 总结问题\n1、项目需要，所有的对象属性都要生成XML，即如果属性是空值，默认序列化XML后\n不会显示，所以把所有对象都继承自BaseObject类下，再使用BaseObject类的构造器\n通过反射子类中特性的方法，在初始化子类时，将空字符串写入，这样最后生成XML\n文件时，空字符串的属性也会显示了。\n\n反射时使用了的类及方法包括Object.GetType()根据对象获得类型,Type.GetProperties()根据类型获得说有属性,\nPropertyInfo.GetCustomAttributes根据属性获得所有特性，\n父类BaseObject 代码如下：\n\n```C\n\t    public class BaseObject\n    {\n        public BaseObject()\n        {\n            Type t = this.GetType();//构造器获得当前类型\n            PropertyInfo[] list=t.GetProperties();//反射获得所有属性\n\n            foreach (PropertyInfo item in list)\n            {\n                object[] objAttrs = item.GetCustomAttributes(typeof(XmlElementAttribute), true);//获得所有XmlElement特性\n                if (objAttrs != null && objAttrs.Length > 0)\n                {\n                    XmlElementAttribute attr = objAttrs[0] as XmlElementAttribute;\n                    //Console.WriteLine(attr.ElementName);\n                    attr.IsNullable = true;//将特性设置为可空\n                    \n                }\n\n                if (IsType(item.PropertyType, \"System.String\"))\n                {\n                    item.SetValue(this, string.Empty, null);//将字符串类型属性的值设置为空字符串\n                }\n            }\n        }\n        /// <summary>\n        /// 类型匹配\n        /// </summary>\n        /// <param name=\"type\"></param>\n        /// <param name=\"typeName\"></param>\n        /// <returns></returns>\n        public static bool IsType(Type type, string typeName)\n        {\n            if (type.ToString() == typeName)\n                return true;\n            if (type.ToString() == \"System.Object\")\n                return false;\n\n            return IsType(type.BaseType, typeName);\n        }\n    }\n\n\n```\n 2、SERVICE类下的Cmd属性比较特殊，它是一个数组，通过XmlArray特性和XmlArrayItem特性配合使用后，如下：\n    \t [XmlArray(\"BODY\")]\n        [XmlArrayItem(\"cmd\")]\n        public Cmd[] Cmd { get; set; }\n        序列化XML后生成的效果如下：\n\n\n``` bash\n\t<BODY>\n\t\t<cmd></cmd>\n\t\t<cmd></cmd>\n\t\t<cmd></cmd>\n\t\t<cmd></cmd>\n\t</BODY>\n```\n\n[XmlSerializer]:https://msdn.microsoft.com/zh-cn/library/system.xml.serialization.xmlserializer(v=vs.110).aspx\n[StringWriter]:https://msdn.microsoft.com/zh-cn/library/system.io.stringwriter(v=vs.110).aspx\n[Encoding]:https://msdn.microsoft.com/zh-cn/library/system.io.stringwriter.encoding(v=vs.110).aspx\n[Serialization]:https://msdn.microsoft.com/zh-cn/library/system.xml.serialization(v=vs.110).aspx\n[序列化帮助]:https://msdn.microsoft.com/zh-cn/library/2baksw0z(v=vs.110).aspx\n\n","source":"_posts/xml序列化.md","raw":"---\ntitle: xml序列化\ndate: 2017-08-16 20:51:17\ncategories:\n- C#基础\n---\n\n  可能目前系统之间接口多数以JSON或者XML形式进行数据的传输，\n项目中用到了XML，但是没有使用下面介绍的以序列化的形式将XML与对象\n进行互转，当时为了多个实现方案所以做了一些准备，\n先总结XML序列化与反序列化的使用基础，备用吧。\n\n\n\n> * 基础类及基础方法\n> * 代码实现\n> * 总结及出现的问题\n\n<!--more-->\n### 基础类及基础方法\n   基础类主要是：[System.Xml.Serialization.XmlSerializer][XmlSerializer]\nXmlSerializer类主要功能是将对象和XML文档之间进行序列化和发序列化。\nXmlSerializer可以方便将对象编码为XML。\n\n1、构造器创建XmlSerializer对象\n``` bash\n\t//创建新实例并指定改实例可以用来序列化和反序列化的类的类型\n\tXmlSerializer xmlSerializer=new XmlSerializer(Type);\n```\n2、XmlSerializer对象序列化对象\n``` bash\n\t//将对象Object序列化到TextWriter中\n\txmlSerializer.Serialize(TextWriter,Object);\n```\nTextWriter是一个有序序列字符的编写器，它是一个抽象类，常用的有\n两个子类即：StreamWriter（写入流） 和 StringWriter（写入字符串）.\n因此在实际使用时，这里选择[System.IO.StringWriter][StringWriter]。\n\n这里需要注意，如果要指定序列化后XML的编码类型，StringWriter有一个属性[Encoding][Encoding],\n但是该属性只读，无法进行设置，因此需要写一个子类来覆盖Encoding的属性。\n\n``` bash\n\tpublic sealed class Utf8StringWriter : StringWriter\n    {\n    \t//指定编码类型是UTF-8\n        public override Encoding Encoding { get { return Encoding.UTF8; } }\n    }\n\n\n    //将对象Object序列化到TextWriter的子类Utf8StringWriter中\n\txmlSerializer.Serialize(Utf8StringWriter,Object);\n```\n3、获得序列化后的结果\n``` bash\n\tstring XMLResult=Utf8StringWriter.ToString();\n```\n\n4、通过特性Attritube设置自定义类的序列化结果\n[System.Xml.Serialization][Serialization]命名空间中有一系列的特性类，用来控制复杂类型序列化的控制。例如XmlElementAttribute、XmlAttributeAttribute、XmlArrayAttribute、XmlArrayItemAttribute、XmlRootAttribute等等。\n[序列化帮助][序列化帮助]\n\n### 代码实现\n完整代码如下：\n```C\nusing System;\nusing System.IO;\nusing System.Reflection;\nusing System.Text;\nusing System.Xml;\nusing System.Xml.Serialization;\n\nnamespace Test\n{\n    class Program\n    {\n       \n\n        static void Main(string[] args)\n        {\n            SERVICE service = new SERVICE();\n            HEAD head = service.HEAD;\n            head.nsrsbh = \"140115728183815\";\n            head.serviceversion = \"1.3\";\n            head.serviceid = \"jy.dzptfpkj\";\n            head.iszip = \"N\";\n            head.encryptcode = \"0\";\n            head.issyn = \"Y\";\n            service.Cmd = new Cmd[] {new Cmd(),new Cmd() };\n\n            //序列化这个对象\n            XmlSerializer serializer = new XmlSerializer(service.GetType());\n            \n            using (Utf8StringWriter writer = new Utf8StringWriter())\n            {\n                serializer.Serialize(writer, service);\n                Console.WriteLine(writer.ToString());\n            }  \n\n            Console.Read();\n        }\n    }\n\n\n    public class BaseObject\n    {\n        public BaseObject()\n        {\n            Type t = this.GetType();//构造器获得当前类型\n            PropertyInfo[] list=t.GetProperties();//获得所有属性\n\n            foreach (PropertyInfo item in list)\n            {\n                object[] objAttrs = item.GetCustomAttributes(typeof(XmlElementAttribute), true);//获得所有XmlElement特性\n                if (objAttrs != null && objAttrs.Length > 0)\n                {\n                    XmlElementAttribute attr = objAttrs[0] as XmlElementAttribute;\n                    //Console.WriteLine(attr.ElementName);\n                    attr.IsNullable = true;//将特性设置为可空\n                    \n                }\n\n                if (IsType(item.PropertyType, \"System.String\"))\n                {\n                    item.SetValue(this, string.Empty, null);//将字符串类型属性的值设置为空字符串\n                }\n            }\n        }\n        /// <summary>\n        /// 类型匹配\n        /// </summary>\n        /// <param name=\"type\"></param>\n        /// <param name=\"typeName\"></param>\n        /// <returns></returns>\n        public static bool IsType(Type type, string typeName)\n        {\n            if (type.ToString() == typeName)\n                return true;\n            if (type.ToString() == \"System.Object\")\n                return false;\n\n            return IsType(type.BaseType, typeName);\n        }\n    }\n\n    [XmlRoot(\"SERVICE\")]\n    public class SERVICE: BaseObject\n    {\n        public SERVICE() {\n            this.HEAD = new HEAD();\n        }\n        [XmlElement(\"HEAD\")]\n        public HEAD HEAD { get; set; }\n\n        [XmlArray(\"BODY\")]\n        [XmlArrayItem(\"cmd\")]\n        public Cmd[] Cmd { get; set; }\n\n       \n    }\n\n    public class HEAD : BaseObject\n    {\n        public HEAD()\n        {\n            this.RTNINF = new RTNINF();\n        }\n        [XmlElement(\"nsrsbh\")]\n        public string nsrsbh { get; set; }\n        [XmlElement(\"serviceversion\")]\n        public string serviceversion { get; set; }\n        [XmlElement(\"serviceid\")]\n        public string serviceid { get; set; }\n        [XmlElement(\"iszip\")]\n        public string iszip { get; set; }\n        [XmlElement(\"encryptcode\")]\n        public string encryptcode { get; set; }\n        [XmlElement(\"issyn\")]\n        public string issyn { get; set; }\n        [XmlElement(\"RTNINF\")]\n        public RTNINF RTNINF { get; set; }\n    }\n\n    public class RTNINF : BaseObject\n    {\n        [XmlElement(\"rtn_code\")]\n        public string rtn_code { get; set; }\n        [XmlElement(\"rtn_reason\")]\n        public string rtn_reason { get; set; }\n    }\n    public sealed class Utf8StringWriter : StringWriter\n    {\n        public override Encoding Encoding { get { return Encoding.UTF8; } }\n    }\n    \n    public class Cmd : BaseObject\n    {\n        [XmlElement(\"productid\")]\n        public string ProductId { get; set; }\n\n        [XmlElement(\"price\")]\n        public string Price { get; set; }\n\n        [XmlElement(\"date\")]\n        public string Date { get; set; }\n\n        [XmlElement(\"state\")]\n        public string State { get; set; }\n\n        [XmlElement(\"type\")]\n        public string Type { get; set; }\n    }\n   \n}\n\n```\n\n### 总结问题\n1、项目需要，所有的对象属性都要生成XML，即如果属性是空值，默认序列化XML后\n不会显示，所以把所有对象都继承自BaseObject类下，再使用BaseObject类的构造器\n通过反射子类中特性的方法，在初始化子类时，将空字符串写入，这样最后生成XML\n文件时，空字符串的属性也会显示了。\n\n反射时使用了的类及方法包括Object.GetType()根据对象获得类型,Type.GetProperties()根据类型获得说有属性,\nPropertyInfo.GetCustomAttributes根据属性获得所有特性，\n父类BaseObject 代码如下：\n\n```C\n\t    public class BaseObject\n    {\n        public BaseObject()\n        {\n            Type t = this.GetType();//构造器获得当前类型\n            PropertyInfo[] list=t.GetProperties();//反射获得所有属性\n\n            foreach (PropertyInfo item in list)\n            {\n                object[] objAttrs = item.GetCustomAttributes(typeof(XmlElementAttribute), true);//获得所有XmlElement特性\n                if (objAttrs != null && objAttrs.Length > 0)\n                {\n                    XmlElementAttribute attr = objAttrs[0] as XmlElementAttribute;\n                    //Console.WriteLine(attr.ElementName);\n                    attr.IsNullable = true;//将特性设置为可空\n                    \n                }\n\n                if (IsType(item.PropertyType, \"System.String\"))\n                {\n                    item.SetValue(this, string.Empty, null);//将字符串类型属性的值设置为空字符串\n                }\n            }\n        }\n        /// <summary>\n        /// 类型匹配\n        /// </summary>\n        /// <param name=\"type\"></param>\n        /// <param name=\"typeName\"></param>\n        /// <returns></returns>\n        public static bool IsType(Type type, string typeName)\n        {\n            if (type.ToString() == typeName)\n                return true;\n            if (type.ToString() == \"System.Object\")\n                return false;\n\n            return IsType(type.BaseType, typeName);\n        }\n    }\n\n\n```\n 2、SERVICE类下的Cmd属性比较特殊，它是一个数组，通过XmlArray特性和XmlArrayItem特性配合使用后，如下：\n    \t [XmlArray(\"BODY\")]\n        [XmlArrayItem(\"cmd\")]\n        public Cmd[] Cmd { get; set; }\n        序列化XML后生成的效果如下：\n\n\n``` bash\n\t<BODY>\n\t\t<cmd></cmd>\n\t\t<cmd></cmd>\n\t\t<cmd></cmd>\n\t\t<cmd></cmd>\n\t</BODY>\n```\n\n[XmlSerializer]:https://msdn.microsoft.com/zh-cn/library/system.xml.serialization.xmlserializer(v=vs.110).aspx\n[StringWriter]:https://msdn.microsoft.com/zh-cn/library/system.io.stringwriter(v=vs.110).aspx\n[Encoding]:https://msdn.microsoft.com/zh-cn/library/system.io.stringwriter.encoding(v=vs.110).aspx\n[Serialization]:https://msdn.microsoft.com/zh-cn/library/system.xml.serialization(v=vs.110).aspx\n[序列化帮助]:https://msdn.microsoft.com/zh-cn/library/2baksw0z(v=vs.110).aspx\n\n","slug":"xml序列化","published":1,"updated":"2018-01-11T01:50:45.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayya001yocm7iodlgigr","content":"<p>  可能目前系统之间接口多数以JSON或者XML形式进行数据的传输，<br>项目中用到了XML，但是没有使用下面介绍的以序列化的形式将XML与对象<br>进行互转，当时为了多个实现方案所以做了一些准备，<br>先总结XML序列化与反序列化的使用基础，备用吧。</p>\n<blockquote>\n<ul>\n<li>基础类及基础方法</li>\n<li>代码实现</li>\n<li>总结及出现的问题</li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"基础类及基础方法\"><a href=\"#基础类及基础方法\" class=\"headerlink\" title=\"基础类及基础方法\"></a>基础类及基础方法</h3><p>   基础类主要是：<a href=\"https://msdn.microsoft.com/zh-cn/library/system.xml.serialization.xmlserializer(v=vs.110).aspx\" target=\"_blank\" rel=\"external\">System.Xml.Serialization.XmlSerializer</a><br>XmlSerializer类主要功能是将对象和XML文档之间进行序列化和发序列化。<br>XmlSerializer可以方便将对象编码为XML。</p>\n<p>1、构造器创建XmlSerializer对象<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//创建新实例并指定改实例可以用来序列化和反序列化的类的类型</div><div class=\"line\">XmlSerializer xmlSerializer=new XmlSerializer(Type);</div></pre></td></tr></table></figure></p>\n<p>2、XmlSerializer对象序列化对象<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//将对象Object序列化到TextWriter中</div><div class=\"line\">xmlSerializer.Serialize(TextWriter,Object);</div></pre></td></tr></table></figure></p>\n<p>TextWriter是一个有序序列字符的编写器，它是一个抽象类，常用的有<br>两个子类即：StreamWriter（写入流） 和 StringWriter（写入字符串）.<br>因此在实际使用时，这里选择<a href=\"https://msdn.microsoft.com/zh-cn/library/system.io.stringwriter(v=vs.110).aspx\" target=\"_blank\" rel=\"external\">System.IO.StringWriter</a>。</p>\n<p>这里需要注意，如果要指定序列化后XML的编码类型，StringWriter有一个属性<a href=\"https://msdn.microsoft.com/zh-cn/library/system.io.stringwriter.encoding(v=vs.110).aspx\" target=\"_blank\" rel=\"external\">Encoding</a>,<br>但是该属性只读，无法进行设置，因此需要写一个子类来覆盖Encoding的属性。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public sealed class Utf8StringWriter : StringWriter</div><div class=\"line\">   &#123;</div><div class=\"line\">   \t//指定编码类型是UTF-8</div><div class=\"line\">       public override Encoding Encoding &#123; get &#123; <span class=\"built_in\">return</span> Encoding.UTF8; &#125; &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">   //将对象Object序列化到TextWriter的子类Utf8StringWriter中</div><div class=\"line\">xmlSerializer.Serialize(Utf8StringWriter,Object);</div></pre></td></tr></table></figure>\n<p>3、获得序列化后的结果<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string XMLResult=Utf8StringWriter.ToString();</div></pre></td></tr></table></figure></p>\n<p>4、通过特性Attritube设置自定义类的序列化结果<br><a href=\"https://msdn.microsoft.com/zh-cn/library/system.xml.serialization(v=vs.110).aspx\" target=\"_blank\" rel=\"external\">System.Xml.Serialization</a>命名空间中有一系列的特性类，用来控制复杂类型序列化的控制。例如XmlElementAttribute、XmlAttributeAttribute、XmlArrayAttribute、XmlArrayItemAttribute、XmlRootAttribute等等。<br><a href=\"https://msdn.microsoft.com/zh-cn/library/2baksw0z(v=vs.110).aspx\" target=\"_blank\" rel=\"external\">序列化帮助</a></p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><p>完整代码如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Reflection;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Xml;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Xml.Serialization;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> Test</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">       </div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            SERVICE service = <span class=\"keyword\">new</span> SERVICE();</div><div class=\"line\">            HEAD head = service.HEAD;</div><div class=\"line\">            head.nsrsbh = <span class=\"string\">\"140115728183815\"</span>;</div><div class=\"line\">            head.serviceversion = <span class=\"string\">\"1.3\"</span>;</div><div class=\"line\">            head.serviceid = <span class=\"string\">\"jy.dzptfpkj\"</span>;</div><div class=\"line\">            head.iszip = <span class=\"string\">\"N\"</span>;</div><div class=\"line\">            head.encryptcode = <span class=\"string\">\"0\"</span>;</div><div class=\"line\">            head.issyn = <span class=\"string\">\"Y\"</span>;</div><div class=\"line\">            service.Cmd = <span class=\"keyword\">new</span> Cmd[] &#123;<span class=\"keyword\">new</span> Cmd(),<span class=\"keyword\">new</span> Cmd() &#125;;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//序列化这个对象</span></div><div class=\"line\">            XmlSerializer serializer = <span class=\"keyword\">new</span> XmlSerializer(service.GetType());</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"keyword\">using</span> (Utf8StringWriter writer = <span class=\"keyword\">new</span> Utf8StringWriter())</div><div class=\"line\">            &#123;</div><div class=\"line\">                serializer.Serialize(writer, service);</div><div class=\"line\">                Console.WriteLine(writer.ToString());</div><div class=\"line\">            &#125;  </div><div class=\"line\"></div><div class=\"line\">            Console.Read();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BaseObject</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Type t = <span class=\"keyword\">this</span>.GetType();<span class=\"comment\">//构造器获得当前类型</span></div><div class=\"line\">            PropertyInfo[] <span class=\"built_in\">list</span>=t.GetProperties();<span class=\"comment\">//获得所有属性</span></div><div class=\"line\"></div><div class=\"line\">            foreach (PropertyInfo item in <span class=\"built_in\">list</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                object[] objAttrs = item.GetCustomAttributes(typeof(XmlElementAttribute), <span class=\"literal\">true</span>);<span class=\"comment\">//获得所有XmlElement特性</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (objAttrs != null &amp;&amp; objAttrs.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    XmlElementAttribute attr = objAttrs[<span class=\"number\">0</span>] as XmlElementAttribute;</div><div class=\"line\">                    <span class=\"comment\">//Console.WriteLine(attr.ElementName);</span></div><div class=\"line\">                    attr.IsNullable = <span class=\"literal\">true</span>;<span class=\"comment\">//将特性设置为可空</span></div><div class=\"line\">                    </div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (IsType(item.PropertyType, <span class=\"string\">\"System.String\"</span>))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    item.SetValue(<span class=\"keyword\">this</span>, <span class=\"built_in\">string</span>.Empty, null);<span class=\"comment\">//将字符串类型属性的值设置为空字符串</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 类型匹配</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"type\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"typeName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsType</span><span class=\"params\">(Type type, <span class=\"built_in\">string</span> typeName)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (type.ToString() == typeName)</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (type.ToString() == <span class=\"string\">\"System.Object\"</span>)</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">return</span> IsType(type.BaseType, typeName);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    [XmlRoot(<span class=\"string\">\"SERVICE\"</span>)]</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> SERVICE: BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SERVICE</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.HEAD = <span class=\"keyword\">new</span> HEAD();</div><div class=\"line\">        &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"HEAD\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> HEAD HEAD &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlArray(<span class=\"string\">\"BODY\"</span>)]</div><div class=\"line\">        [XmlArrayItem(<span class=\"string\">\"cmd\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> Cmd[] Cmd &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">       </div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HEAD : BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HEAD</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.RTNINF = <span class=\"keyword\">new</span> RTNINF();</div><div class=\"line\">        &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"nsrsbh\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> nsrsbh &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"serviceversion\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> serviceversion &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"serviceid\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> serviceid &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"iszip\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> iszip &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"encryptcode\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> encryptcode &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"issyn\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> issyn &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"RTNINF\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> RTNINF RTNINF &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> RTNINF : BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"rtn_code\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> rtn_code &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"rtn_reason\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> rtn_reason &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> sealed <span class=\"keyword\">class</span> Utf8StringWriter : StringWriter</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> override Encoding Encoding &#123; get &#123; <span class=\"keyword\">return</span> Encoding.UTF8; &#125; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Cmd : BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"productid\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> ProductId &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlElement(<span class=\"string\">\"price\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Price &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlElement(<span class=\"string\">\"date\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Date &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlElement(<span class=\"string\">\"state\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> State &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlElement(<span class=\"string\">\"type\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Type &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"总结问题\"><a href=\"#总结问题\" class=\"headerlink\" title=\"总结问题\"></a>总结问题</h3><p>1、项目需要，所有的对象属性都要生成XML，即如果属性是空值，默认序列化XML后<br>不会显示，所以把所有对象都继承自BaseObject类下，再使用BaseObject类的构造器<br>通过反射子类中特性的方法，在初始化子类时，将空字符串写入，这样最后生成XML<br>文件时，空字符串的属性也会显示了。</p>\n<p>反射时使用了的类及方法包括Object.GetType()根据对象获得类型,Type.GetProperties()根据类型获得说有属性,<br>PropertyInfo.GetCustomAttributes根据属性获得所有特性，<br>父类BaseObject 代码如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> BaseObject</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BaseObject</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        Type t = <span class=\"keyword\">this</span>.GetType();<span class=\"comment\">//构造器获得当前类型</span></div><div class=\"line\">        PropertyInfo[] <span class=\"built_in\">list</span>=t.GetProperties();<span class=\"comment\">//反射获得所有属性</span></div><div class=\"line\"></div><div class=\"line\">        foreach (PropertyInfo item in <span class=\"built_in\">list</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            object[] objAttrs = item.GetCustomAttributes(typeof(XmlElementAttribute), <span class=\"literal\">true</span>);<span class=\"comment\">//获得所有XmlElement特性</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (objAttrs != null &amp;&amp; objAttrs.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                XmlElementAttribute attr = objAttrs[<span class=\"number\">0</span>] as XmlElementAttribute;</div><div class=\"line\">                <span class=\"comment\">//Console.WriteLine(attr.ElementName);</span></div><div class=\"line\">                attr.IsNullable = <span class=\"literal\">true</span>;<span class=\"comment\">//将特性设置为可空</span></div><div class=\"line\">                </div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (IsType(item.PropertyType, <span class=\"string\">\"System.String\"</span>))</div><div class=\"line\">            &#123;</div><div class=\"line\">                item.SetValue(<span class=\"keyword\">this</span>, <span class=\"built_in\">string</span>.Empty, null);<span class=\"comment\">//将字符串类型属性的值设置为空字符串</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 类型匹配</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;param name=\"type\"&gt;&lt;/param&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;param name=\"typeName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsType</span><span class=\"params\">(Type type, <span class=\"built_in\">string</span> typeName)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (type.ToString() == typeName)</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (type.ToString() == <span class=\"string\">\"System.Object\"</span>)</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> IsType(type.BaseType, typeName);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p> 2、SERVICE类下的Cmd属性比较特殊，它是一个数组，通过XmlArray特性和XmlArrayItem特性配合使用后，如下：<br>         [XmlArray(“BODY”)]<br>        [XmlArrayItem(“cmd”)]<br>        public Cmd[] Cmd { get; set; }<br>        序列化XML后生成的效果如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;BODY&gt;</div><div class=\"line\">\t&lt;cmd&gt;&lt;/cmd&gt;</div><div class=\"line\">\t&lt;cmd&gt;&lt;/cmd&gt;</div><div class=\"line\">\t&lt;cmd&gt;&lt;/cmd&gt;</div><div class=\"line\">\t&lt;cmd&gt;&lt;/cmd&gt;</div><div class=\"line\">&lt;/BODY&gt;</div></pre></td></tr></table></figure>\n","excerpt":"<p>  可能目前系统之间接口多数以JSON或者XML形式进行数据的传输，<br>项目中用到了XML，但是没有使用下面介绍的以序列化的形式将XML与对象<br>进行互转，当时为了多个实现方案所以做了一些准备，<br>先总结XML序列化与反序列化的使用基础，备用吧。</p>\n<blockquote>\n<ul>\n<li>基础类及基础方法</li>\n<li>代码实现</li>\n<li>总结及出现的问题</li>\n</ul>\n</blockquote>","more":"<h3 id=\"基础类及基础方法\"><a href=\"#基础类及基础方法\" class=\"headerlink\" title=\"基础类及基础方法\"></a>基础类及基础方法</h3><p>   基础类主要是：<a href=\"https://msdn.microsoft.com/zh-cn/library/system.xml.serialization.xmlserializer(v=vs.110).aspx\">System.Xml.Serialization.XmlSerializer</a><br>XmlSerializer类主要功能是将对象和XML文档之间进行序列化和发序列化。<br>XmlSerializer可以方便将对象编码为XML。</p>\n<p>1、构造器创建XmlSerializer对象<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//创建新实例并指定改实例可以用来序列化和反序列化的类的类型</div><div class=\"line\">XmlSerializer xmlSerializer=new XmlSerializer(Type);</div></pre></td></tr></table></figure></p>\n<p>2、XmlSerializer对象序列化对象<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//将对象Object序列化到TextWriter中</div><div class=\"line\">xmlSerializer.Serialize(TextWriter,Object);</div></pre></td></tr></table></figure></p>\n<p>TextWriter是一个有序序列字符的编写器，它是一个抽象类，常用的有<br>两个子类即：StreamWriter（写入流） 和 StringWriter（写入字符串）.<br>因此在实际使用时，这里选择<a href=\"https://msdn.microsoft.com/zh-cn/library/system.io.stringwriter(v=vs.110).aspx\">System.IO.StringWriter</a>。</p>\n<p>这里需要注意，如果要指定序列化后XML的编码类型，StringWriter有一个属性<a href=\"https://msdn.microsoft.com/zh-cn/library/system.io.stringwriter.encoding(v=vs.110).aspx\">Encoding</a>,<br>但是该属性只读，无法进行设置，因此需要写一个子类来覆盖Encoding的属性。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">public sealed class Utf8StringWriter : StringWriter</div><div class=\"line\">   &#123;</div><div class=\"line\">   \t//指定编码类型是UTF-8</div><div class=\"line\">       public override Encoding Encoding &#123; get &#123; <span class=\"built_in\">return</span> Encoding.UTF8; &#125; &#125;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">   //将对象Object序列化到TextWriter的子类Utf8StringWriter中</div><div class=\"line\">xmlSerializer.Serialize(Utf8StringWriter,Object);</div></pre></td></tr></table></figure>\n<p>3、获得序列化后的结果<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">string XMLResult=Utf8StringWriter.ToString();</div></pre></td></tr></table></figure></p>\n<p>4、通过特性Attritube设置自定义类的序列化结果<br><a href=\"https://msdn.microsoft.com/zh-cn/library/system.xml.serialization(v=vs.110).aspx\">System.Xml.Serialization</a>命名空间中有一系列的特性类，用来控制复杂类型序列化的控制。例如XmlElementAttribute、XmlAttributeAttribute、XmlArrayAttribute、XmlArrayItemAttribute、XmlRootAttribute等等。<br><a href=\"https://msdn.microsoft.com/zh-cn/library/2baksw0z(v=vs.110).aspx\">序列化帮助</a></p>\n<h3 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h3><p>完整代码如下：<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Reflection;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Xml;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Xml.Serialization;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> Test</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">       </div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            SERVICE service = <span class=\"keyword\">new</span> SERVICE();</div><div class=\"line\">            HEAD head = service.HEAD;</div><div class=\"line\">            head.nsrsbh = <span class=\"string\">\"140115728183815\"</span>;</div><div class=\"line\">            head.serviceversion = <span class=\"string\">\"1.3\"</span>;</div><div class=\"line\">            head.serviceid = <span class=\"string\">\"jy.dzptfpkj\"</span>;</div><div class=\"line\">            head.iszip = <span class=\"string\">\"N\"</span>;</div><div class=\"line\">            head.encryptcode = <span class=\"string\">\"0\"</span>;</div><div class=\"line\">            head.issyn = <span class=\"string\">\"Y\"</span>;</div><div class=\"line\">            service.Cmd = <span class=\"keyword\">new</span> Cmd[] &#123;<span class=\"keyword\">new</span> Cmd(),<span class=\"keyword\">new</span> Cmd() &#125;;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"comment\">//序列化这个对象</span></div><div class=\"line\">            XmlSerializer serializer = <span class=\"keyword\">new</span> XmlSerializer(service.GetType());</div><div class=\"line\">            </div><div class=\"line\">            <span class=\"keyword\">using</span> (Utf8StringWriter writer = <span class=\"keyword\">new</span> Utf8StringWriter())</div><div class=\"line\">            &#123;</div><div class=\"line\">                serializer.Serialize(writer, service);</div><div class=\"line\">                Console.WriteLine(writer.ToString());</div><div class=\"line\">            &#125;  </div><div class=\"line\"></div><div class=\"line\">            Console.Read();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BaseObject</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Type t = <span class=\"keyword\">this</span>.GetType();<span class=\"comment\">//构造器获得当前类型</span></div><div class=\"line\">            PropertyInfo[] <span class=\"built_in\">list</span>=t.GetProperties();<span class=\"comment\">//获得所有属性</span></div><div class=\"line\"></div><div class=\"line\">            foreach (PropertyInfo item in <span class=\"built_in\">list</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                object[] objAttrs = item.GetCustomAttributes(typeof(XmlElementAttribute), <span class=\"literal\">true</span>);<span class=\"comment\">//获得所有XmlElement特性</span></div><div class=\"line\">                <span class=\"keyword\">if</span> (objAttrs != null &amp;&amp; objAttrs.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    XmlElementAttribute attr = objAttrs[<span class=\"number\">0</span>] as XmlElementAttribute;</div><div class=\"line\">                    <span class=\"comment\">//Console.WriteLine(attr.ElementName);</span></div><div class=\"line\">                    attr.IsNullable = <span class=\"literal\">true</span>;<span class=\"comment\">//将特性设置为可空</span></div><div class=\"line\">                    </div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (IsType(item.PropertyType, <span class=\"string\">\"System.String\"</span>))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    item.SetValue(<span class=\"keyword\">this</span>, <span class=\"built_in\">string</span>.Empty, null);<span class=\"comment\">//将字符串类型属性的值设置为空字符串</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 类型匹配</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"type\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;param name=\"typeName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsType</span><span class=\"params\">(Type type, <span class=\"built_in\">string</span> typeName)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> (type.ToString() == typeName)</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span> (type.ToString() == <span class=\"string\">\"System.Object\"</span>)</div><div class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">return</span> IsType(type.BaseType, typeName);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    [XmlRoot(<span class=\"string\">\"SERVICE\"</span>)]</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> SERVICE: BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SERVICE</span><span class=\"params\">()</span> </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.HEAD = <span class=\"keyword\">new</span> HEAD();</div><div class=\"line\">        &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"HEAD\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> HEAD HEAD &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlArray(<span class=\"string\">\"BODY\"</span>)]</div><div class=\"line\">        [XmlArrayItem(<span class=\"string\">\"cmd\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> Cmd[] Cmd &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">       </div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> HEAD : BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">HEAD</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"keyword\">this</span>.RTNINF = <span class=\"keyword\">new</span> RTNINF();</div><div class=\"line\">        &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"nsrsbh\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> nsrsbh &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"serviceversion\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> serviceversion &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"serviceid\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> serviceid &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"iszip\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> iszip &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"encryptcode\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> encryptcode &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"issyn\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> issyn &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"RTNINF\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> RTNINF RTNINF &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> RTNINF : BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"rtn_code\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> rtn_code &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"rtn_reason\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> rtn_reason &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">public</span> sealed <span class=\"keyword\">class</span> Utf8StringWriter : StringWriter</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">public</span> override Encoding Encoding &#123; get &#123; <span class=\"keyword\">return</span> Encoding.UTF8; &#125; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> Cmd : BaseObject</div><div class=\"line\">    &#123;</div><div class=\"line\">        [XmlElement(<span class=\"string\">\"productid\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> ProductId &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlElement(<span class=\"string\">\"price\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Price &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlElement(<span class=\"string\">\"date\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Date &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlElement(<span class=\"string\">\"state\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> State &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">        [XmlElement(<span class=\"string\">\"type\"</span>)]</div><div class=\"line\">        <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Type &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">   </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"总结问题\"><a href=\"#总结问题\" class=\"headerlink\" title=\"总结问题\"></a>总结问题</h3><p>1、项目需要，所有的对象属性都要生成XML，即如果属性是空值，默认序列化XML后<br>不会显示，所以把所有对象都继承自BaseObject类下，再使用BaseObject类的构造器<br>通过反射子类中特性的方法，在初始化子类时，将空字符串写入，这样最后生成XML<br>文件时，空字符串的属性也会显示了。</p>\n<p>反射时使用了的类及方法包括Object.GetType()根据对象获得类型,Type.GetProperties()根据类型获得说有属性,<br>PropertyInfo.GetCustomAttributes根据属性获得所有特性，<br>父类BaseObject 代码如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> BaseObject</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">BaseObject</span><span class=\"params\">()</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        Type t = <span class=\"keyword\">this</span>.GetType();<span class=\"comment\">//构造器获得当前类型</span></div><div class=\"line\">        PropertyInfo[] <span class=\"built_in\">list</span>=t.GetProperties();<span class=\"comment\">//反射获得所有属性</span></div><div class=\"line\"></div><div class=\"line\">        foreach (PropertyInfo item in <span class=\"built_in\">list</span>)</div><div class=\"line\">        &#123;</div><div class=\"line\">            object[] objAttrs = item.GetCustomAttributes(typeof(XmlElementAttribute), <span class=\"literal\">true</span>);<span class=\"comment\">//获得所有XmlElement特性</span></div><div class=\"line\">            <span class=\"keyword\">if</span> (objAttrs != null &amp;&amp; objAttrs.Length &gt; <span class=\"number\">0</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                XmlElementAttribute attr = objAttrs[<span class=\"number\">0</span>] as XmlElementAttribute;</div><div class=\"line\">                <span class=\"comment\">//Console.WriteLine(attr.ElementName);</span></div><div class=\"line\">                attr.IsNullable = <span class=\"literal\">true</span>;<span class=\"comment\">//将特性设置为可空</span></div><div class=\"line\">                </div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (IsType(item.PropertyType, <span class=\"string\">\"System.String\"</span>))</div><div class=\"line\">            &#123;</div><div class=\"line\">                item.SetValue(<span class=\"keyword\">this</span>, <span class=\"built_in\">string</span>.Empty, null);<span class=\"comment\">//将字符串类型属性的值设置为空字符串</span></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// 类型匹配</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;param name=\"type\"&gt;&lt;/param&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;param name=\"typeName\"&gt;&lt;/param&gt;</span></div><div class=\"line\">    <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">IsType</span><span class=\"params\">(Type type, <span class=\"built_in\">string</span> typeName)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (type.ToString() == typeName)</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> (type.ToString() == <span class=\"string\">\"System.Object\"</span>)</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> IsType(type.BaseType, typeName);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p> 2、SERVICE类下的Cmd属性比较特殊，它是一个数组，通过XmlArray特性和XmlArrayItem特性配合使用后，如下：<br>         [XmlArray(“BODY”)]<br>        [XmlArrayItem(“cmd”)]<br>        public Cmd[] Cmd { get; set; }<br>        序列化XML后生成的效果如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;BODY&gt;</div><div class=\"line\">\t&lt;cmd&gt;&lt;/cmd&gt;</div><div class=\"line\">\t&lt;cmd&gt;&lt;/cmd&gt;</div><div class=\"line\">\t&lt;cmd&gt;&lt;/cmd&gt;</div><div class=\"line\">\t&lt;cmd&gt;&lt;/cmd&gt;</div><div class=\"line\">&lt;/BODY&gt;</div></pre></td></tr></table></figure>"},{"title":"周日历实现","date":"2017-01-16T00:55:54.000Z","_content":"要实现的功能：通过点击或拖动选择在日历中根据时间段列出的课程单元格。\n该Table可用的功能包括：\n1、按周来显示的日历；\n2、可拖动、点击选择表格；\n3、可用来设置日程、课程相关table原型；\n<!--more-->\n遇到的坑：\n1、js对象使用地址引用来传递，导致循环获得moment时间对象的值放到数组\n中后，全部相同且是最后一个，最后使用new moment()，重新再创建一个对象来解决。\n```html\nvar today=new moment();\nvar array=new Array();\nfor(var i=0;i<3;i++){\n\tarray.push(new moment(today.add(1,\"days\")));//添加一天 解决地址传递\t\n}\n\n\n```\n### [源码及演示](http://runjs.cn/code/g2krqzka)\n","source":"_posts/周日历实现.md","raw":"---\ntitle: 周日历实现\ndate: 2017-01-16 08:55:54\ntags:\n---\n要实现的功能：通过点击或拖动选择在日历中根据时间段列出的课程单元格。\n该Table可用的功能包括：\n1、按周来显示的日历；\n2、可拖动、点击选择表格；\n3、可用来设置日程、课程相关table原型；\n<!--more-->\n遇到的坑：\n1、js对象使用地址引用来传递，导致循环获得moment时间对象的值放到数组\n中后，全部相同且是最后一个，最后使用new moment()，重新再创建一个对象来解决。\n```html\nvar today=new moment();\nvar array=new Array();\nfor(var i=0;i<3;i++){\n\tarray.push(new moment(today.add(1,\"days\")));//添加一天 解决地址传递\t\n}\n\n\n```\n### [源码及演示](http://runjs.cn/code/g2krqzka)\n","slug":"周日历实现","published":1,"updated":"2018-01-11T01:56:17.656Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayyd0020ocm7i0nhskyu","content":"<p>要实现的功能：通过点击或拖动选择在日历中根据时间段列出的课程单元格。<br>该Table可用的功能包括：<br>1、按周来显示的日历；<br>2、可拖动、点击选择表格；<br>3、可用来设置日程、课程相关table原型；<br><a id=\"more\"></a><br>遇到的坑：<br>1、js对象使用地址引用来传递，导致循环获得moment时间对象的值放到数组<br>中后，全部相同且是最后一个，最后使用new moment()，重新再创建一个对象来解决。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var today=new moment();</div><div class=\"line\">var array=new Array();</div><div class=\"line\">for(var i=0;i<span class=\"tag\">&lt;<span class=\"name\">3;i++)&#123;</span></span></div><div class=\"line\">\t<span class=\"attr\">array.push</span>(<span class=\"attr\">new</span> <span class=\"attr\">moment</span>(<span class=\"attr\">today.add</span>(<span class=\"attr\">1</span>,\"<span class=\"attr\">days</span>\")));//添加一天 解决地址传递\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h3 id=\"源码及演示\"><a href=\"#源码及演示\" class=\"headerlink\" title=\"源码及演示\"></a><a href=\"http://runjs.cn/code/g2krqzka\" target=\"_blank\" rel=\"external\">源码及演示</a></h3>","excerpt":"<p>要实现的功能：通过点击或拖动选择在日历中根据时间段列出的课程单元格。<br>该Table可用的功能包括：<br>1、按周来显示的日历；<br>2、可拖动、点击选择表格；<br>3、可用来设置日程、课程相关table原型；<br>","more":"<br>遇到的坑：<br>1、js对象使用地址引用来传递，导致循环获得moment时间对象的值放到数组<br>中后，全部相同且是最后一个，最后使用new moment()，重新再创建一个对象来解决。<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">var today=new moment();</div><div class=\"line\">var array=new Array();</div><div class=\"line\">for(var i=0;i<span class=\"tag\">&lt;<span class=\"name\">3;i++)&#123;</span></div><div class=\"line\">\t<span class=\"attr\">array.push</span>(<span class=\"attr\">new</span> <span class=\"attr\">moment</span>(<span class=\"attr\">today.add</span>(<span class=\"attr\">1</span>,\"<span class=\"attr\">days</span>\")));//添加一天 解决地址传递\t</div><div class=\"line\">&#125;</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"源码及演示\"><a href=\"#源码及演示\" class=\"headerlink\" title=\"源码及演示\"></a><a href=\"http://runjs.cn/code/g2krqzka\">源码及演示</a></h3>"},{"title":"去除微信昵称中emoji字符","date":"2017-12-18T09:30:27.000Z","_content":"问题描述\n1、微信公众号获得用户基础信息时，用户的昵称nickname中可能包含emoji表情，而该表情在保存数据库之后在前台页面中\n使用（导出excel）会导致异常，因此需要该emoji表情去掉。\n解决方法：替换所有表情字符。\n\n### [参考地址](http://www.howtobuildsoftware.com/index.php/how-do/bouX/c-mysql-unicode-emoji-how-do-i-remove-emoji-characters-from-a-string)\n{% asset_img 20171218174151.png 来源 %}\n```C\nclass Program\n    {\n        static void Main(string[] args)\n        {\n\n             string nickName = \"特殊字符串\";\n             nickName = Regex.Replace(nickName, @\"\\p{Cs}\", \"*\").Replace(\"\\\"\", \"*\");\n             Console.WriteLine(nickName);\n             Console.ReadKey();\n        }\n    }\n```","source":"_posts/去除微信昵称中emoji字符.md","raw":"---\ntitle: 去除微信昵称中emoji字符\ndate: 2017-12-18 17:30:27\ncategories:\n- 微信公众号\n---\n问题描述\n1、微信公众号获得用户基础信息时，用户的昵称nickname中可能包含emoji表情，而该表情在保存数据库之后在前台页面中\n使用（导出excel）会导致异常，因此需要该emoji表情去掉。\n解决方法：替换所有表情字符。\n\n### [参考地址](http://www.howtobuildsoftware.com/index.php/how-do/bouX/c-mysql-unicode-emoji-how-do-i-remove-emoji-characters-from-a-string)\n{% asset_img 20171218174151.png 来源 %}\n```C\nclass Program\n    {\n        static void Main(string[] args)\n        {\n\n             string nickName = \"特殊字符串\";\n             nickName = Regex.Replace(nickName, @\"\\p{Cs}\", \"*\").Replace(\"\\\"\", \"*\");\n             Console.WriteLine(nickName);\n             Console.ReadKey();\n        }\n    }\n```","slug":"去除微信昵称中emoji字符","published":1,"updated":"2018-05-30T08:54:51.321Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayyi0024ocm7kvyokz6l","content":"<p>问题描述<br>1、微信公众号获得用户基础信息时，用户的昵称nickname中可能包含emoji表情，而该表情在保存数据库之后在前台页面中<br>使用（导出excel）会导致异常，因此需要该emoji表情去掉。<br>解决方法：替换所有表情字符。</p>\n<h3 id=\"参考地址\"><a href=\"#参考地址\" class=\"headerlink\" title=\"参考地址\"></a><a href=\"http://www.howtobuildsoftware.com/index.php/how-do/bouX/c-mysql-unicode-emoji-how-do-i-remove-emoji-characters-from-a-string\" target=\"_blank\" rel=\"external\">参考地址</a></h3><img src=\"/2017/12/18/去除微信昵称中emoji字符/20171218174151.png\" alt=\"来源\" title=\"来源\">\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\"></div><div class=\"line\">             <span class=\"built_in\">string</span> nickName = <span class=\"string\">\"特殊字符串\"</span>;</div><div class=\"line\">             nickName = Regex.Replace(nickName, @<span class=\"string\">\"\\p&#123;Cs&#125;\"</span>, <span class=\"string\">\"*\"</span>).Replace(<span class=\"string\">\"\\\"\"</span>, <span class=\"string\">\"*\"</span>);</div><div class=\"line\">             Console.WriteLine(nickName);</div><div class=\"line\">             Console.ReadKey();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>","excerpt":"","more":"<p>问题描述<br>1、微信公众号获得用户基础信息时，用户的昵称nickname中可能包含emoji表情，而该表情在保存数据库之后在前台页面中<br>使用（导出excel）会导致异常，因此需要该emoji表情去掉。<br>解决方法：替换所有表情字符。</p>\n<h3 id=\"参考地址\"><a href=\"#参考地址\" class=\"headerlink\" title=\"参考地址\"></a><a href=\"http://www.howtobuildsoftware.com/index.php/how-do/bouX/c-mysql-unicode-emoji-how-do-i-remove-emoji-characters-from-a-string\">参考地址</a></h3><img src=\"/2017/12/18/去除微信昵称中emoji字符/20171218174151.png\" alt=\"来源\" title=\"来源\">\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\"></div><div class=\"line\">             <span class=\"built_in\">string</span> nickName = <span class=\"string\">\"特殊字符串\"</span>;</div><div class=\"line\">             nickName = Regex.Replace(nickName, @<span class=\"string\">\"\\p&#123;Cs&#125;\"</span>, <span class=\"string\">\"*\"</span>).Replace(<span class=\"string\">\"\\\"\"</span>, <span class=\"string\">\"*\"</span>);</div><div class=\"line\">             Console.WriteLine(nickName);</div><div class=\"line\">             Console.ReadKey();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>"},{"title":"定时任务组件FluentScheduler","date":"2017-12-19T08:38:52.000Z","+description":"定时任务组件FluentScheduler","_content":"\n> * 定时任务组件FluentScheduler的基础使用方法\n> * 动态修改任务调用的间隔时间\n\n### [FluentScheduler Github地址](https://github.com/fluentscheduler/FluentScheduler)\n一般常用的方法，在它的github上面就可以找到api，这篇文章的demo主要实现的功能是通过修改appconfig文件内的配置信息，达到修改正在运行的任务时间，当然也可以增加自己的配置代码，如启动，暂停等等。\n\n\n> 有一处要注意，修改appconfig文件后，读取时必须调用\nConfigurationManager.RefreshSection(\"appSettings\");\n否则会出现读取的值是缓存的情况，导致出错。\n\n\n\n\n<!--more-->\n\n### AppConfig文件如下\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<configuration>\n  <startup>\n    <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5.2\" />\n  </startup>\n  <appSettings>   \n    <add key=\"ChangeStatus\" value=\"1\"/>  <!--修改状态-->\n    <add key=\"Interval\" value=\"5\"/>  <!--间隔值-->\n    <add key=\"IntervalType\" value=\"Seconds\"/>  <!--间隔类型年、月、日、时、分、秒-->\n    <add key=\"HoursOfDay\" value=\"23\"/>  <!--间隔类型是天时的小时 取值0-23-->\n    <add key=\"MinutesOfDay\" value=\"59\"/>  <!--间隔类型是天时的分钟 取值0-59-->\n  </appSettings>\n</configuration>\n```\n### 控制台应用程序源码\n```C\nusing System;\nusing FluentScheduler;\nusing System.Configuration;\n\nnamespace FluentSchedulerDemo\n{\n    class Program\n    {\n\n        static void Main(string[] args)\n        {\n            //首次允许业务逻辑\n            JobManager.AddJob(ServiceLogic, t =>\n            {\n                t.WithName(\"ServiceLogic\").ToRunEvery(1).Seconds();\n            });\n            //允许检查\n            JobManager.AddJob(CheckSchedule, t =>\n            {\n                t.WithName(\"CheckSchedule\").ToRunEvery(10).Seconds();\n            });\n            Console.ReadLine();\n        }\n\n        /// <summary>\n        /// 定时检查配置文件，动态修改当前工作安排\n        /// </summary>\n        static void CheckSchedule()\n        {\n            #region 读取appconfig配置文件\n            ConfigurationManager.RefreshSection(\"appSettings\");//非常重要！！！刷新后才能读取到更改后的配置信息\n            int changeStatus = Convert.ToInt32(ConfigurationManager.AppSettings[\"ChangeStatus\"]);\n            int interval = Convert.ToInt32(ConfigurationManager.AppSettings[\"Interval\"]);\n            int hoursOfDay = Convert.ToInt32(ConfigurationManager.AppSettings[\"HoursOfDay\"]);\n            int minutesOfDay = Convert.ToInt32(ConfigurationManager.AppSettings[\"MinutesOfDay\"]);\n            string intervalType = ConfigurationManager.AppSettings[\"IntervalType\"]; \n            #endregion\n\n            if (changeStatus == 1)\n            {\n                //修改业务逻辑定时任务\n                JobManager.RemoveJob(\"ServiceLogic\");\n                Console.WriteLine(\"CheckSchedule：\" + DateTime.Now);\n                #region 根据间隔的类型，修改任务计划时间\n                switch (intervalType)\n                {\n                    case \"Seconds\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Seconds();\n                        });\n                        break;\n                    case \"Minutes\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Minutes();\n                        });\n                        break;\n                    case \"Hours\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Hours();\n                        });\n                        break;\n                    case \"Days\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Days().At(hoursOfDay, minutesOfDay);\n                        });\n                        break;\n                    case \"Months\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Months();\n                        });\n                        break;\n                    case \"Years\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Years();\n                        });\n                        break;\n                }\n                #endregion\n\n                //更新修改状态\n                Configuration configuration = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);\n                configuration.AppSettings.Settings[\"ChangeStatus\"].Value = \"0\";\n                configuration.Save();\n\n            }\n        }\n        /// <summary>\n        /// 业务逻辑\n        /// </summary>\n        static void ServiceLogic()\n        {\n            Console.WriteLine(\"ServiceLogic：\" + DateTime.Now);\n            //TODO: 实际的业务逻辑\n        }\n    }\n\n}\n\n\n```\n### 程序运行截图\n{% asset_img 20171219164453.png demo运行图 %}\n\n总的来说一句话：使用两个任务计划，一个用来检查配置文件的状态，随时进行更改另一个业务任务计划的运行状态。","source":"_posts/定时任务组件FluentScheduler.md","raw":"---\ntitle: 定时任务组件FluentScheduler\ndate: 2017-12-19 16:38:52\ntags:\n- ASP.NET\ncategories:\n- 插件\n+description: \"定时任务组件FluentScheduler\"\n---\n\n> * 定时任务组件FluentScheduler的基础使用方法\n> * 动态修改任务调用的间隔时间\n\n### [FluentScheduler Github地址](https://github.com/fluentscheduler/FluentScheduler)\n一般常用的方法，在它的github上面就可以找到api，这篇文章的demo主要实现的功能是通过修改appconfig文件内的配置信息，达到修改正在运行的任务时间，当然也可以增加自己的配置代码，如启动，暂停等等。\n\n\n> 有一处要注意，修改appconfig文件后，读取时必须调用\nConfigurationManager.RefreshSection(\"appSettings\");\n否则会出现读取的值是缓存的情况，导致出错。\n\n\n\n\n<!--more-->\n\n### AppConfig文件如下\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\" ?>\n<configuration>\n  <startup>\n    <supportedRuntime version=\"v4.0\" sku=\".NETFramework,Version=v4.5.2\" />\n  </startup>\n  <appSettings>   \n    <add key=\"ChangeStatus\" value=\"1\"/>  <!--修改状态-->\n    <add key=\"Interval\" value=\"5\"/>  <!--间隔值-->\n    <add key=\"IntervalType\" value=\"Seconds\"/>  <!--间隔类型年、月、日、时、分、秒-->\n    <add key=\"HoursOfDay\" value=\"23\"/>  <!--间隔类型是天时的小时 取值0-23-->\n    <add key=\"MinutesOfDay\" value=\"59\"/>  <!--间隔类型是天时的分钟 取值0-59-->\n  </appSettings>\n</configuration>\n```\n### 控制台应用程序源码\n```C\nusing System;\nusing FluentScheduler;\nusing System.Configuration;\n\nnamespace FluentSchedulerDemo\n{\n    class Program\n    {\n\n        static void Main(string[] args)\n        {\n            //首次允许业务逻辑\n            JobManager.AddJob(ServiceLogic, t =>\n            {\n                t.WithName(\"ServiceLogic\").ToRunEvery(1).Seconds();\n            });\n            //允许检查\n            JobManager.AddJob(CheckSchedule, t =>\n            {\n                t.WithName(\"CheckSchedule\").ToRunEvery(10).Seconds();\n            });\n            Console.ReadLine();\n        }\n\n        /// <summary>\n        /// 定时检查配置文件，动态修改当前工作安排\n        /// </summary>\n        static void CheckSchedule()\n        {\n            #region 读取appconfig配置文件\n            ConfigurationManager.RefreshSection(\"appSettings\");//非常重要！！！刷新后才能读取到更改后的配置信息\n            int changeStatus = Convert.ToInt32(ConfigurationManager.AppSettings[\"ChangeStatus\"]);\n            int interval = Convert.ToInt32(ConfigurationManager.AppSettings[\"Interval\"]);\n            int hoursOfDay = Convert.ToInt32(ConfigurationManager.AppSettings[\"HoursOfDay\"]);\n            int minutesOfDay = Convert.ToInt32(ConfigurationManager.AppSettings[\"MinutesOfDay\"]);\n            string intervalType = ConfigurationManager.AppSettings[\"IntervalType\"]; \n            #endregion\n\n            if (changeStatus == 1)\n            {\n                //修改业务逻辑定时任务\n                JobManager.RemoveJob(\"ServiceLogic\");\n                Console.WriteLine(\"CheckSchedule：\" + DateTime.Now);\n                #region 根据间隔的类型，修改任务计划时间\n                switch (intervalType)\n                {\n                    case \"Seconds\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Seconds();\n                        });\n                        break;\n                    case \"Minutes\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Minutes();\n                        });\n                        break;\n                    case \"Hours\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Hours();\n                        });\n                        break;\n                    case \"Days\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Days().At(hoursOfDay, minutesOfDay);\n                        });\n                        break;\n                    case \"Months\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Months();\n                        });\n                        break;\n                    case \"Years\":\n                        JobManager.AddJob(ServiceLogic, t =>\n                        {\n                            t.WithName(\"ServiceLogic\").ToRunEvery(interval).Years();\n                        });\n                        break;\n                }\n                #endregion\n\n                //更新修改状态\n                Configuration configuration = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);\n                configuration.AppSettings.Settings[\"ChangeStatus\"].Value = \"0\";\n                configuration.Save();\n\n            }\n        }\n        /// <summary>\n        /// 业务逻辑\n        /// </summary>\n        static void ServiceLogic()\n        {\n            Console.WriteLine(\"ServiceLogic：\" + DateTime.Now);\n            //TODO: 实际的业务逻辑\n        }\n    }\n\n}\n\n\n```\n### 程序运行截图\n{% asset_img 20171219164453.png demo运行图 %}\n\n总的来说一句话：使用两个任务计划，一个用来检查配置文件的状态，随时进行更改另一个业务任务计划的运行状态。","slug":"定时任务组件FluentScheduler","published":1,"updated":"2018-01-11T01:50:06.363Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayyk0026ocm7wt741u8x","content":"<blockquote>\n<ul>\n<li>定时任务组件FluentScheduler的基础使用方法</li>\n<li>动态修改任务调用的间隔时间</li>\n</ul>\n</blockquote>\n<h3 id=\"FluentScheduler-Github地址\"><a href=\"#FluentScheduler-Github地址\" class=\"headerlink\" title=\"FluentScheduler Github地址\"></a><a href=\"https://github.com/fluentscheduler/FluentScheduler\" target=\"_blank\" rel=\"external\">FluentScheduler Github地址</a></h3><p>一般常用的方法，在它的github上面就可以找到api，这篇文章的demo主要实现的功能是通过修改appconfig文件内的配置信息，达到修改正在运行的任务时间，当然也可以增加自己的配置代码，如启动，暂停等等。</p>\n<blockquote>\n<p>有一处要注意，修改appconfig文件后，读取时必须调用<br>ConfigurationManager.RefreshSection(“appSettings”);<br>否则会出现读取的值是缓存的情况，导致出错。</p>\n</blockquote>\n<a id=\"more\"></a>\n<h3 id=\"AppConfig文件如下\"><a href=\"#AppConfig文件如下\" class=\"headerlink\" title=\"AppConfig文件如下\"></a>AppConfig文件如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</div><div class=\"line\">&lt;configuration&gt;</div><div class=\"line\">  &lt;startup&gt;</div><div class=\"line\">    &lt;supportedRuntime version=&quot;v4.0&quot; sku=&quot;.NETFramework,Version=v4.5.2&quot; /&gt;</div><div class=\"line\">  &lt;/startup&gt;</div><div class=\"line\">  &lt;appSettings&gt;   </div><div class=\"line\">    &lt;add key=&quot;ChangeStatus&quot; value=&quot;1&quot;/&gt;  &lt;!--修改状态--&gt;</div><div class=\"line\">    &lt;add key=&quot;Interval&quot; value=&quot;5&quot;/&gt;  &lt;!--间隔值--&gt;</div><div class=\"line\">    &lt;add key=&quot;IntervalType&quot; value=&quot;Seconds&quot;/&gt;  &lt;!--间隔类型年、月、日、时、分、秒--&gt;</div><div class=\"line\">    &lt;add key=&quot;HoursOfDay&quot; value=&quot;23&quot;/&gt;  &lt;!--间隔类型是天时的小时 取值0-23--&gt;</div><div class=\"line\">    &lt;add key=&quot;MinutesOfDay&quot; value=&quot;59&quot;/&gt;  &lt;!--间隔类型是天时的分钟 取值0-59--&gt;</div><div class=\"line\">  &lt;/appSettings&gt;</div><div class=\"line\">&lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"控制台应用程序源码\"><a href=\"#控制台应用程序源码\" class=\"headerlink\" title=\"控制台应用程序源码\"></a>控制台应用程序源码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> FluentScheduler;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> FluentSchedulerDemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//首次允许业务逻辑</span></div><div class=\"line\">            JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">            &#123;</div><div class=\"line\">                t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(<span class=\"number\">1</span>).Seconds();</div><div class=\"line\">            &#125;);</div><div class=\"line\">            <span class=\"comment\">//允许检查</span></div><div class=\"line\">            JobManager.AddJob(CheckSchedule, t =&gt;</div><div class=\"line\">            &#123;</div><div class=\"line\">                t.WithName(<span class=\"string\">\"CheckSchedule\"</span>).ToRunEvery(<span class=\"number\">10</span>).Seconds();</div><div class=\"line\">            &#125;);</div><div class=\"line\">            Console.ReadLine();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 定时检查配置文件，动态修改当前工作安排</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CheckSchedule</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"meta\">#region 读取appconfig配置文件</span></div><div class=\"line\">            ConfigurationManager.RefreshSection(<span class=\"string\">\"appSettings\"</span>);<span class=\"comment\">//非常重要！！！刷新后才能读取到更改后的配置信息</span></div><div class=\"line\">            <span class=\"keyword\">int</span> changeStatus = Convert.ToInt32(ConfigurationManager.AppSettings[<span class=\"string\">\"ChangeStatus\"</span>]);</div><div class=\"line\">            <span class=\"keyword\">int</span> interval = Convert.ToInt32(ConfigurationManager.AppSettings[<span class=\"string\">\"Interval\"</span>]);</div><div class=\"line\">            <span class=\"keyword\">int</span> hoursOfDay = Convert.ToInt32(ConfigurationManager.AppSettings[<span class=\"string\">\"HoursOfDay\"</span>]);</div><div class=\"line\">            <span class=\"keyword\">int</span> minutesOfDay = Convert.ToInt32(ConfigurationManager.AppSettings[<span class=\"string\">\"MinutesOfDay\"</span>]);</div><div class=\"line\">            <span class=\"built_in\">string</span> intervalType = ConfigurationManager.AppSettings[<span class=\"string\">\"IntervalType\"</span>]; </div><div class=\"line\">            <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (changeStatus == <span class=\"number\">1</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//修改业务逻辑定时任务</span></div><div class=\"line\">                JobManager.RemoveJob(<span class=\"string\">\"ServiceLogic\"</span>);</div><div class=\"line\">                Console.WriteLine(<span class=\"string\">\"CheckSchedule：\"</span> + DateTime.Now);</div><div class=\"line\">                <span class=\"meta\">#region 根据间隔的类型，修改任务计划时间</span></div><div class=\"line\">                <span class=\"keyword\">switch</span> (intervalType)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Seconds\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Seconds();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Minutes\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Minutes();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Hours\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Hours();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Days\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Days().At(hoursOfDay, minutesOfDay);</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Months\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Months();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Years\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Years();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//更新修改状态</span></div><div class=\"line\">                Configuration configuration = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);</div><div class=\"line\">                configuration.AppSettings.Settings[<span class=\"string\">\"ChangeStatus\"</span>].Value = <span class=\"string\">\"0\"</span>;</div><div class=\"line\">                configuration.Save();</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 业务逻辑</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ServiceLogic</span><span class=\"params\">()</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"ServiceLogic：\"</span> + DateTime.Now);</div><div class=\"line\">            <span class=\"comment\">//<span class=\"doctag\">TODO:</span> 实际的业务逻辑</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"程序运行截图\"><a href=\"#程序运行截图\" class=\"headerlink\" title=\"程序运行截图\"></a>程序运行截图</h3><img src=\"/2017/12/19/定时任务组件FluentScheduler/20171219164453.png\" alt=\"demo运行图\" title=\"demo运行图\">\n<p>总的来说一句话：使用两个任务计划，一个用来检查配置文件的状态，随时进行更改另一个业务任务计划的运行状态。</p>\n","excerpt":"<blockquote>\n<ul>\n<li>定时任务组件FluentScheduler的基础使用方法</li>\n<li>动态修改任务调用的间隔时间</li>\n</ul>\n</blockquote>\n<h3 id=\"FluentScheduler-Github地址\"><a href=\"#FluentScheduler-Github地址\" class=\"headerlink\" title=\"FluentScheduler Github地址\"></a><a href=\"https://github.com/fluentscheduler/FluentScheduler\">FluentScheduler Github地址</a></h3><p>一般常用的方法，在它的github上面就可以找到api，这篇文章的demo主要实现的功能是通过修改appconfig文件内的配置信息，达到修改正在运行的任务时间，当然也可以增加自己的配置代码，如启动，暂停等等。</p>\n<blockquote>\n<p>有一处要注意，修改appconfig文件后，读取时必须调用<br>ConfigurationManager.RefreshSection(“appSettings”);<br>否则会出现读取的值是缓存的情况，导致出错。</p>\n</blockquote>","more":"<h3 id=\"AppConfig文件如下\"><a href=\"#AppConfig文件如下\" class=\"headerlink\" title=\"AppConfig文件如下\"></a>AppConfig文件如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</div><div class=\"line\">&lt;configuration&gt;</div><div class=\"line\">  &lt;startup&gt;</div><div class=\"line\">    &lt;supportedRuntime version=&quot;v4.0&quot; sku=&quot;.NETFramework,Version=v4.5.2&quot; /&gt;</div><div class=\"line\">  &lt;/startup&gt;</div><div class=\"line\">  &lt;appSettings&gt;   </div><div class=\"line\">    &lt;add key=&quot;ChangeStatus&quot; value=&quot;1&quot;/&gt;  &lt;!--修改状态--&gt;</div><div class=\"line\">    &lt;add key=&quot;Interval&quot; value=&quot;5&quot;/&gt;  &lt;!--间隔值--&gt;</div><div class=\"line\">    &lt;add key=&quot;IntervalType&quot; value=&quot;Seconds&quot;/&gt;  &lt;!--间隔类型年、月、日、时、分、秒--&gt;</div><div class=\"line\">    &lt;add key=&quot;HoursOfDay&quot; value=&quot;23&quot;/&gt;  &lt;!--间隔类型是天时的小时 取值0-23--&gt;</div><div class=\"line\">    &lt;add key=&quot;MinutesOfDay&quot; value=&quot;59&quot;/&gt;  &lt;!--间隔类型是天时的分钟 取值0-59--&gt;</div><div class=\"line\">  &lt;/appSettings&gt;</div><div class=\"line\">&lt;/configuration&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"控制台应用程序源码\"><a href=\"#控制台应用程序源码\" class=\"headerlink\" title=\"控制台应用程序源码\"></a>控制台应用程序源码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> FluentScheduler;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Configuration;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> FluentSchedulerDemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//首次允许业务逻辑</span></div><div class=\"line\">            JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">            &#123;</div><div class=\"line\">                t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(<span class=\"number\">1</span>).Seconds();</div><div class=\"line\">            &#125;);</div><div class=\"line\">            <span class=\"comment\">//允许检查</span></div><div class=\"line\">            JobManager.AddJob(CheckSchedule, t =&gt;</div><div class=\"line\">            &#123;</div><div class=\"line\">                t.WithName(<span class=\"string\">\"CheckSchedule\"</span>).ToRunEvery(<span class=\"number\">10</span>).Seconds();</div><div class=\"line\">            &#125;);</div><div class=\"line\">            Console.ReadLine();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 定时检查配置文件，动态修改当前工作安排</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">CheckSchedule</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"meta\">#region 读取appconfig配置文件</span></div><div class=\"line\">            ConfigurationManager.RefreshSection(<span class=\"string\">\"appSettings\"</span>);<span class=\"comment\">//非常重要！！！刷新后才能读取到更改后的配置信息</span></div><div class=\"line\">            <span class=\"keyword\">int</span> changeStatus = Convert.ToInt32(ConfigurationManager.AppSettings[<span class=\"string\">\"ChangeStatus\"</span>]);</div><div class=\"line\">            <span class=\"keyword\">int</span> interval = Convert.ToInt32(ConfigurationManager.AppSettings[<span class=\"string\">\"Interval\"</span>]);</div><div class=\"line\">            <span class=\"keyword\">int</span> hoursOfDay = Convert.ToInt32(ConfigurationManager.AppSettings[<span class=\"string\">\"HoursOfDay\"</span>]);</div><div class=\"line\">            <span class=\"keyword\">int</span> minutesOfDay = Convert.ToInt32(ConfigurationManager.AppSettings[<span class=\"string\">\"MinutesOfDay\"</span>]);</div><div class=\"line\">            <span class=\"built_in\">string</span> intervalType = ConfigurationManager.AppSettings[<span class=\"string\">\"IntervalType\"</span>]; </div><div class=\"line\">            <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">if</span> (changeStatus == <span class=\"number\">1</span>)</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//修改业务逻辑定时任务</span></div><div class=\"line\">                JobManager.RemoveJob(<span class=\"string\">\"ServiceLogic\"</span>);</div><div class=\"line\">                Console.WriteLine(<span class=\"string\">\"CheckSchedule：\"</span> + DateTime.Now);</div><div class=\"line\">                <span class=\"meta\">#region 根据间隔的类型，修改任务计划时间</span></div><div class=\"line\">                <span class=\"keyword\">switch</span> (intervalType)</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Seconds\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Seconds();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Minutes\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Minutes();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Hours\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Hours();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Days\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Days().At(hoursOfDay, minutesOfDay);</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Months\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Months();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                    <span class=\"keyword\">case</span> <span class=\"string\">\"Years\"</span>:</div><div class=\"line\">                        JobManager.AddJob(ServiceLogic, t =&gt;</div><div class=\"line\">                        &#123;</div><div class=\"line\">                            t.WithName(<span class=\"string\">\"ServiceLogic\"</span>).ToRunEvery(interval).Years();</div><div class=\"line\">                        &#125;);</div><div class=\"line\">                        <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">                <span class=\"meta\">#endregion</span></div><div class=\"line\"></div><div class=\"line\">                <span class=\"comment\">//更新修改状态</span></div><div class=\"line\">                Configuration configuration = ConfigurationManager.OpenExeConfiguration(ConfigurationUserLevel.None);</div><div class=\"line\">                configuration.AppSettings.Settings[<span class=\"string\">\"ChangeStatus\"</span>].Value = <span class=\"string\">\"0\"</span>;</div><div class=\"line\">                configuration.Save();</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">        <span class=\"comment\">/// 业务逻辑</span></div><div class=\"line\">        <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">ServiceLogic</span><span class=\"params\">()</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            Console.WriteLine(<span class=\"string\">\"ServiceLogic：\"</span> + DateTime.Now);</div><div class=\"line\">            <span class=\"comment\">//<span class=\"doctag\">TODO:</span> 实际的业务逻辑</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"程序运行截图\"><a href=\"#程序运行截图\" class=\"headerlink\" title=\"程序运行截图\"></a>程序运行截图</h3><img src=\"/2017/12/19/定时任务组件FluentScheduler/20171219164453.png\" alt=\"demo运行图\" title=\"demo运行图\">\n<p>总的来说一句话：使用两个任务计划，一个用来检查配置文件的状态，随时进行更改另一个业务任务计划的运行状态。</p>"},{"title":"微信公众号-发送文本消息","date":"2017-12-07T05:48:19.000Z","_content":"\n使用微信公众号，发送文本消息\n\n<!--more-->\n```C\n \t\tpublic void SendNews(List<dt_Mem> memList,string appID,string appSecret,string message)\n        {\n  \n\t\t\topenIDList = memList.Select(i => i.Fields[\"openid\"].Value).ToList<string>();\n\n            var  result = SendNews(appID, appSecret, message, openIDList);\n            \n        }\n\n        /// <summary>\n        ///公众号发送文本信息\n        /// </summary>\n        /// <param name=\"appID\"></param>\n        /// <param name=\"appSecret\"></param>\n        /// <param name=\"message\"></param>\n        /// <param name=\"openIDList\"></param>\n        /// <returns></returns>\n        public static string SendMessage(string appID, string appSecret, string message, List<string> openIDList)\n        {\n            if (openIDList.Count == 1)\n            {\n                openIDList.Add(\" \");\n            }\n            string requestURL = \"https://api.weixin.qq.com/cgi-bin/message/mass/send?access_token={0}\";\n            string openIDString = string.Join(\",\", openIDList.Select(i => \"\\\"\" + i + \"\\\"\"));\n            string temp = \"{\\\"touser\\\": [\" + openIDString + \"],\" +\n                      \"\\\"msgtype\\\": \\\"text\\\", \" +\n                      \"\\\"text\\\": {\\\"content\\\":\\\"\" + message + \"\\\"} \" +\n                      \"}\";\n\n            //预览接口开发用\n            string urlName = \"您好，这里是为您推荐的链接地址\" + message.Substring(message.LastIndexOf(\"/\") + 1);\n            message = \"<a href='\" + message + \"'>\" + urlName + \"</a>\";\n            requestURL = \" https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token={0}\";\n            temp = \"{\\\"touser\\\": \\\"oEWyxv6y7JEuHISt50hQCjrLGHrk\\\",\" +\n               \"\\\"msgtype\\\": \\\"text\\\", \" +\n               \"\\\"text\\\": {\\\"content\\\":\\\"\" + message + \"\\\"} \" +\n               \"}\";\n            string strJson = HttpRequestUtil.RequestUrl(string.Format(requestURL,\n           GetAccess_token(appID, appSecret)), \"POST\", temp);\n            return strJson;\n        }\n\n\n        /// <summary>\n        /// 获得基础接口的access_token\n        /// </summary>\n        /// <param name=\"appID\"></param>\n        /// <param name=\"appSecret\"></param>\n        /// <returns></returns>\n        public static string GetAccess_token(string appID, string appSecret)\n        {\n            string access_token = \"\";\n            CacheManage cache = CacheManage.Instance;\n            if (cache.Contains(\"access_token\" + appID))\n            {\n                access_token = cache.Get(\"access_token\" + appID) as string;\n            }\n            else\n            {\n                string strJson = \"\";\n                string requestURL = \"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={0}&secret={1}\";\n                strJson = HttpRequestUtil.RequestUrl(string.Format(requestURL,\n                  appID, appSecret));\n                access_token = Tools.GetJsonValue(strJson, \"access_token\");\n\n                double cacheMinutes = (double)(Convert.ToInt32(Tools.GetJsonValue(strJson, \"expires_in\")) / 60);//将秒转换为分钟\n                cache.Set(\"access_token\" + appID, access_token, cacheMinutes);\n            }\n            return access_token;\n        }\n```","source":"_posts/微信公众号-发送文本消息.md","raw":"---\ntitle: 微信公众号-发送文本消息\ndate: 2017-12-07 13:48:19\ntags:\n- 发送消息\ncategories:\n- 微信公众号\n---\n\n使用微信公众号，发送文本消息\n\n<!--more-->\n```C\n \t\tpublic void SendNews(List<dt_Mem> memList,string appID,string appSecret,string message)\n        {\n  \n\t\t\topenIDList = memList.Select(i => i.Fields[\"openid\"].Value).ToList<string>();\n\n            var  result = SendNews(appID, appSecret, message, openIDList);\n            \n        }\n\n        /// <summary>\n        ///公众号发送文本信息\n        /// </summary>\n        /// <param name=\"appID\"></param>\n        /// <param name=\"appSecret\"></param>\n        /// <param name=\"message\"></param>\n        /// <param name=\"openIDList\"></param>\n        /// <returns></returns>\n        public static string SendMessage(string appID, string appSecret, string message, List<string> openIDList)\n        {\n            if (openIDList.Count == 1)\n            {\n                openIDList.Add(\" \");\n            }\n            string requestURL = \"https://api.weixin.qq.com/cgi-bin/message/mass/send?access_token={0}\";\n            string openIDString = string.Join(\",\", openIDList.Select(i => \"\\\"\" + i + \"\\\"\"));\n            string temp = \"{\\\"touser\\\": [\" + openIDString + \"],\" +\n                      \"\\\"msgtype\\\": \\\"text\\\", \" +\n                      \"\\\"text\\\": {\\\"content\\\":\\\"\" + message + \"\\\"} \" +\n                      \"}\";\n\n            //预览接口开发用\n            string urlName = \"您好，这里是为您推荐的链接地址\" + message.Substring(message.LastIndexOf(\"/\") + 1);\n            message = \"<a href='\" + message + \"'>\" + urlName + \"</a>\";\n            requestURL = \" https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token={0}\";\n            temp = \"{\\\"touser\\\": \\\"oEWyxv6y7JEuHISt50hQCjrLGHrk\\\",\" +\n               \"\\\"msgtype\\\": \\\"text\\\", \" +\n               \"\\\"text\\\": {\\\"content\\\":\\\"\" + message + \"\\\"} \" +\n               \"}\";\n            string strJson = HttpRequestUtil.RequestUrl(string.Format(requestURL,\n           GetAccess_token(appID, appSecret)), \"POST\", temp);\n            return strJson;\n        }\n\n\n        /// <summary>\n        /// 获得基础接口的access_token\n        /// </summary>\n        /// <param name=\"appID\"></param>\n        /// <param name=\"appSecret\"></param>\n        /// <returns></returns>\n        public static string GetAccess_token(string appID, string appSecret)\n        {\n            string access_token = \"\";\n            CacheManage cache = CacheManage.Instance;\n            if (cache.Contains(\"access_token\" + appID))\n            {\n                access_token = cache.Get(\"access_token\" + appID) as string;\n            }\n            else\n            {\n                string strJson = \"\";\n                string requestURL = \"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid={0}&secret={1}\";\n                strJson = HttpRequestUtil.RequestUrl(string.Format(requestURL,\n                  appID, appSecret));\n                access_token = Tools.GetJsonValue(strJson, \"access_token\");\n\n                double cacheMinutes = (double)(Convert.ToInt32(Tools.GetJsonValue(strJson, \"expires_in\")) / 60);//将秒转换为分钟\n                cache.Set(\"access_token\" + appID, access_token, cacheMinutes);\n            }\n            return access_token;\n        }\n```","slug":"微信公众号-发送文本消息","published":1,"updated":"2018-01-11T01:48:15.583Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayym0029ocm74tm333m8","content":"<p>使用微信公众号，发送文本消息</p>\n<a id=\"more\"></a>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">SendNews</span><span class=\"params\">(List&lt;dt_Mem&gt; memList,<span class=\"built_in\">string</span> appID,<span class=\"built_in\">string</span> appSecret,<span class=\"built_in\">string</span> message)</span></span></div><div class=\"line\">     &#123;</div><div class=\"line\">  </div><div class=\"line\">openIDList = memList.Select(i =&gt; i.Fields[<span class=\"string\">\"openid\"</span>].Value).ToList&lt;<span class=\"built_in\">string</span>&gt;();</div><div class=\"line\"></div><div class=\"line\">         var  result = SendNews(appID, appSecret, message, openIDList);</div><div class=\"line\">         </div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">///公众号发送文本信息</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"appID\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"appSecret\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"message\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"openIDList\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">SendMessage</span><span class=\"params\">(<span class=\"built_in\">string</span> appID, <span class=\"built_in\">string</span> appSecret, <span class=\"built_in\">string</span> message, List&lt;<span class=\"built_in\">string</span>&gt; openIDList)</span></span></div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"keyword\">if</span> (openIDList.Count == <span class=\"number\">1</span>)</div><div class=\"line\">         &#123;</div><div class=\"line\">             openIDList.Add(<span class=\"string\">\" \"</span>);</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"built_in\">string</span> requestURL = <span class=\"string\">\"https://api.weixin.qq.com/cgi-bin/message/mass/send?access_token=&#123;0&#125;\"</span>;</div><div class=\"line\">         <span class=\"built_in\">string</span> openIDString = <span class=\"built_in\">string</span>.Join(<span class=\"string\">\",\"</span>, openIDList.Select(i =&gt; <span class=\"string\">\"\\\"\"</span> + i + <span class=\"string\">\"\\\"\"</span>));</div><div class=\"line\">         <span class=\"built_in\">string</span> temp = <span class=\"string\">\"&#123;\\\"touser\\\": [\"</span> + openIDString + <span class=\"string\">\"],\"</span> +</div><div class=\"line\">                   <span class=\"string\">\"\\\"msgtype\\\": \\\"text\\\", \"</span> +</div><div class=\"line\">                   <span class=\"string\">\"\\\"text\\\": &#123;\\\"content\\\":\\\"\"</span> + message + <span class=\"string\">\"\\\"&#125; \"</span> +</div><div class=\"line\">                   <span class=\"string\">\"&#125;\"</span>;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"comment\">//预览接口开发用</span></div><div class=\"line\">         <span class=\"built_in\">string</span> urlName = <span class=\"string\">\"您好，这里是为您推荐的链接地址\"</span> + message.Substring(message.LastIndexOf(<span class=\"string\">\"/\"</span>) + <span class=\"number\">1</span>);</div><div class=\"line\">         message = <span class=\"string\">\"&lt;a href='\"</span> + message + <span class=\"string\">\"'&gt;\"</span> + urlName + <span class=\"string\">\"&lt;/a&gt;\"</span>;</div><div class=\"line\">         requestURL = <span class=\"string\">\" https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token=&#123;0&#125;\"</span>;</div><div class=\"line\">         temp = <span class=\"string\">\"&#123;\\\"touser\\\": \\\"oEWyxv6y7JEuHISt50hQCjrLGHrk\\\",\"</span> +</div><div class=\"line\">            <span class=\"string\">\"\\\"msgtype\\\": \\\"text\\\", \"</span> +</div><div class=\"line\">            <span class=\"string\">\"\\\"text\\\": &#123;\\\"content\\\":\\\"\"</span> + message + <span class=\"string\">\"\\\"&#125; \"</span> +</div><div class=\"line\">            <span class=\"string\">\"&#125;\"</span>;</div><div class=\"line\">         <span class=\"built_in\">string</span> strJson = HttpRequestUtil.RequestUrl(<span class=\"built_in\">string</span>.Format(requestURL,</div><div class=\"line\">        GetAccess_token(appID, appSecret)), <span class=\"string\">\"POST\"</span>, temp);</div><div class=\"line\">         <span class=\"keyword\">return</span> strJson;</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// 获得基础接口的access_token</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"appID\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"appSecret\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAccess_token</span><span class=\"params\">(<span class=\"built_in\">string</span> appID, <span class=\"built_in\">string</span> appSecret)</span></span></div><div class=\"line\">     &#123;</div><div class=\"line\">         <span class=\"built_in\">string</span> access_token = <span class=\"string\">\"\"</span>;</div><div class=\"line\">         CacheManage cache = CacheManage.Instance;</div><div class=\"line\">         <span class=\"keyword\">if</span> (cache.Contains(<span class=\"string\">\"access_token\"</span> + appID))</div><div class=\"line\">         &#123;</div><div class=\"line\">             access_token = cache.Get(<span class=\"string\">\"access_token\"</span> + appID) as <span class=\"built_in\">string</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"keyword\">else</span></div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"built_in\">string</span> strJson = <span class=\"string\">\"\"</span>;</div><div class=\"line\">             <span class=\"built_in\">string</span> requestURL = <span class=\"string\">\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&#123;0&#125;&amp;secret=&#123;1&#125;\"</span>;</div><div class=\"line\">             strJson = HttpRequestUtil.RequestUrl(<span class=\"built_in\">string</span>.Format(requestURL,</div><div class=\"line\">               appID, appSecret));</div><div class=\"line\">             access_token = Tools.GetJsonValue(strJson, <span class=\"string\">\"access_token\"</span>);</div><div class=\"line\"></div><div class=\"line\">             <span class=\"keyword\">double</span> cacheMinutes = (<span class=\"keyword\">double</span>)(Convert.ToInt32(Tools.GetJsonValue(strJson, <span class=\"string\">\"expires_in\"</span>)) / <span class=\"number\">60</span>);<span class=\"comment\">//将秒转换为分钟</span></div><div class=\"line\">             cache.Set(<span class=\"string\">\"access_token\"</span> + appID, access_token, cacheMinutes);</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"keyword\">return</span> access_token;</div><div class=\"line\">     &#125;</div></pre></td></tr></table></figure>","excerpt":"<p>使用微信公众号，发送文本消息</p>","more":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">SendNews</span><span class=\"params\">(List&lt;dt_Mem&gt; memList,<span class=\"built_in\">string</span> appID,<span class=\"built_in\">string</span> appSecret,<span class=\"built_in\">string</span> message)</span></div><div class=\"line\">     </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">openIDList = memList.Select(i =&gt; i.Fields[<span class=\"string\">\"openid\"</span>].Value).ToList&lt;<span class=\"built_in\">string</span>&gt;();</div><div class=\"line\"></div><div class=\"line\">         var  result = SendNews(appID, appSecret, message, openIDList);</div><div class=\"line\">         </div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">///公众号发送文本信息</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"appID\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"appSecret\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"message\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"openIDList\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">SendMessage</span><span class=\"params\">(<span class=\"built_in\">string</span> appID, <span class=\"built_in\">string</span> appSecret, <span class=\"built_in\">string</span> message, List&lt;<span class=\"built_in\">string</span>&gt; openIDList)</span></div><div class=\"line\">     </span>&#123;</div><div class=\"line\">         <span class=\"keyword\">if</span> (openIDList.Count == <span class=\"number\">1</span>)</div><div class=\"line\">         &#123;</div><div class=\"line\">             openIDList.Add(<span class=\"string\">\" \"</span>);</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"built_in\">string</span> requestURL = <span class=\"string\">\"https://api.weixin.qq.com/cgi-bin/message/mass/send?access_token=&#123;0&#125;\"</span>;</div><div class=\"line\">         <span class=\"built_in\">string</span> openIDString = <span class=\"built_in\">string</span>.Join(<span class=\"string\">\",\"</span>, openIDList.Select(i =&gt; <span class=\"string\">\"\\\"\"</span> + i + <span class=\"string\">\"\\\"\"</span>));</div><div class=\"line\">         <span class=\"built_in\">string</span> temp = <span class=\"string\">\"&#123;\\\"touser\\\": [\"</span> + openIDString + <span class=\"string\">\"],\"</span> +</div><div class=\"line\">                   <span class=\"string\">\"\\\"msgtype\\\": \\\"text\\\", \"</span> +</div><div class=\"line\">                   <span class=\"string\">\"\\\"text\\\": &#123;\\\"content\\\":\\\"\"</span> + message + <span class=\"string\">\"\\\"&#125; \"</span> +</div><div class=\"line\">                   <span class=\"string\">\"&#125;\"</span>;</div><div class=\"line\"></div><div class=\"line\">         <span class=\"comment\">//预览接口开发用</span></div><div class=\"line\">         <span class=\"built_in\">string</span> urlName = <span class=\"string\">\"您好，这里是为您推荐的链接地址\"</span> + message.Substring(message.LastIndexOf(<span class=\"string\">\"/\"</span>) + <span class=\"number\">1</span>);</div><div class=\"line\">         message = <span class=\"string\">\"&lt;a href='\"</span> + message + <span class=\"string\">\"'&gt;\"</span> + urlName + <span class=\"string\">\"&lt;/a&gt;\"</span>;</div><div class=\"line\">         requestURL = <span class=\"string\">\" https://api.weixin.qq.com/cgi-bin/message/mass/preview?access_token=&#123;0&#125;\"</span>;</div><div class=\"line\">         temp = <span class=\"string\">\"&#123;\\\"touser\\\": \\\"oEWyxv6y7JEuHISt50hQCjrLGHrk\\\",\"</span> +</div><div class=\"line\">            <span class=\"string\">\"\\\"msgtype\\\": \\\"text\\\", \"</span> +</div><div class=\"line\">            <span class=\"string\">\"\\\"text\\\": &#123;\\\"content\\\":\\\"\"</span> + message + <span class=\"string\">\"\\\"&#125; \"</span> +</div><div class=\"line\">            <span class=\"string\">\"&#125;\"</span>;</div><div class=\"line\">         <span class=\"built_in\">string</span> strJson = HttpRequestUtil.RequestUrl(<span class=\"built_in\">string</span>.Format(requestURL,</div><div class=\"line\">        GetAccess_token(appID, appSecret)), <span class=\"string\">\"POST\"</span>, temp);</div><div class=\"line\">         <span class=\"keyword\">return</span> strJson;</div><div class=\"line\">     &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">     <span class=\"comment\">/// &lt;summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// 获得基础接口的access_token</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;/summary&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"appID\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;param name=\"appSecret\"&gt;&lt;/param&gt;</span></div><div class=\"line\">     <span class=\"comment\">/// &lt;returns&gt;&lt;/returns&gt;</span></div><div class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetAccess_token</span><span class=\"params\">(<span class=\"built_in\">string</span> appID, <span class=\"built_in\">string</span> appSecret)</span></div><div class=\"line\">     </span>&#123;</div><div class=\"line\">         <span class=\"built_in\">string</span> access_token = <span class=\"string\">\"\"</span>;</div><div class=\"line\">         CacheManage cache = CacheManage.Instance;</div><div class=\"line\">         <span class=\"keyword\">if</span> (cache.Contains(<span class=\"string\">\"access_token\"</span> + appID))</div><div class=\"line\">         &#123;</div><div class=\"line\">             access_token = cache.Get(<span class=\"string\">\"access_token\"</span> + appID) as <span class=\"built_in\">string</span>;</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"keyword\">else</span></div><div class=\"line\">         &#123;</div><div class=\"line\">             <span class=\"built_in\">string</span> strJson = <span class=\"string\">\"\"</span>;</div><div class=\"line\">             <span class=\"built_in\">string</span> requestURL = <span class=\"string\">\"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=&#123;0&#125;&amp;secret=&#123;1&#125;\"</span>;</div><div class=\"line\">             strJson = HttpRequestUtil.RequestUrl(<span class=\"built_in\">string</span>.Format(requestURL,</div><div class=\"line\">               appID, appSecret));</div><div class=\"line\">             access_token = Tools.GetJsonValue(strJson, <span class=\"string\">\"access_token\"</span>);</div><div class=\"line\"></div><div class=\"line\">             <span class=\"keyword\">double</span> cacheMinutes = (<span class=\"keyword\">double</span>)(Convert.ToInt32(Tools.GetJsonValue(strJson, <span class=\"string\">\"expires_in\"</span>)) / <span class=\"number\">60</span>);<span class=\"comment\">//将秒转换为分钟</span></div><div class=\"line\">             cache.Set(<span class=\"string\">\"access_token\"</span> + appID, access_token, cacheMinutes);</div><div class=\"line\">         &#125;</div><div class=\"line\">         <span class=\"keyword\">return</span> access_token;</div><div class=\"line\">     &#125;</div></pre></td></tr></table></figure>"},{"title":"微信公众号集合支付宝支付","date":"2017-07-04T12:21:41.000Z","_content":"\n# 微信公众号集合支付宝支付\n\n------\n\n支付宝支付有多种方式，其中手机网站支付满足微信公众号内集成的要求，所以这篇文章即同时描述支付宝手机网站支付。\n\n\n\n> * 配置基础信息\n> * API及业务逻辑\n> * 代码实现\n> * 总结及出现的问题\n\n<!--more-->\n\n## 配置基础信息\n- [x] 给企业注册支付宝账号\n- [x] 创建自用型应用\n- [x] 添加并签约手机网站支付\n需要首先在网站内签约开通手机网站支付的权限。\n![cmd-markdown-logo](https://user-images.githubusercontent.com/20961472/27821257-357d8c52-60d4-11e7-8e79-927b910370d3.png)\n\n\n\n\n## API及业务逻辑\n手机网站支付API可以前往以下网址查看及下载sdk：\n目前手机网站支付demo有： JAVA和PHP版本\nSDK则有：JAVA、.NET和PHP版本\n### [手机支付API](https://docs.open.alipay.com/203/)\n### [SDK下载](https://docs.open.alipay.com/54/103419)\n### [微信公众号集成帮助包](http://p.tb.cn/rmsportal_6680_alipay_in_weixin_demo.zip?spm=a219a.7629140.0.0.XfIWmS&file=rmsportal_6680_alipay_in_weixin_demo.zip)\n### [签名sign生成规则](https://doc.open.alipay.com/docs/doc.htm?docType=1&articleId=106118)\n## 代码实现\n\n###普通手机网站用户进行确认下单页面\n\n```C\n namespace AliPayDemo\n{\n    public partial class Pay : System.Web.UI.Page\n    {\n        //不是真实数据\n        string APPID = \"2017090907474487\";//应用ID\n       //应用私钥\n        string APP_PRIVATE_KEY = @\"****JEwKBgQCIFY+12QuI3gI478vsixJiYOWJb2T7MRr0Zlg2n3fnQWnVB2gOkSgls/CHM3y+d/GQRJRE5aFWa2Xt\";\n        //支付宝公钥\n        string ALIPAY_PUBLIC_KEY = @\"***PXZOf8eQx+qWGky6LJZWie4IF2oqY7El1nps2qVg1IbQkDdIMNSr2a2nQF5GwSpVcF7bRZeNG2qgs3EjHu4hGqXMWbg6Fvs1iigiBYfkzQIDAQAB\";\n        string CHARSET = \"utf-8\";//编码格式\n        \n        \n        \n        protected void Page_Load(object sender, EventArgs e)\n        {\n            //SDK已经封装掉了公共参数，只需要初始化一次\n            IAopClient client = new DefaultAopClient(\"https://openapi.alipay.com/gateway.do\", APPID, APP_PRIVATE_KEY, \"json\", \"1.0\", \"RSA2\", ALIPAY_PUBLIC_KEY, CHARSET, false);\n            \n            \n            //实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称如：alipay.trade.wap.pay.request \n            AlipayTradeWapPayRequest request = new AlipayTradeWapPayRequest();\n          \n            //SDK已经封装掉了公共参数，这里只需要传入业务参数\n            //此次只是参数展示，未进行字符串转义，实际情况下请转义\n            //注意value类型，如金额没有引号，\n            request.BizContent = \"{\" +\n            \"    \\\"subject\\\":\\\"大乐透\\\",\" +\n            \"    \\\"out_trade_no\\\":\\\"70501111111S0011111191\\\",\" +\n            \"    \\\"total_amount\\\":0.01,\" +\n            \"    \\\"product_code\\\":\\\"QUICK_WAP_WAY\\\"\" +\n            \"  }\";\n            \n            AlipayTradeWapPayResponse response = client.pageExecute(request);\n            divBody.InnerHtml = response.Body;\n            ////调用成功，则处理业务逻辑\n            //if (response.IsError)\n            //{\n            //    //.....\n            //}\n        }\n    }\n}\n```\n###微信公众号内用户进行确认下单页面\n1、下载集成微信公众号的帮助包并将文件放入项目文件夹中\n    ap.js  跳转到自带浏览器js\n    pay.htm 提示用户跳转htm页面\n1、使用**pageExecute**方法，以GET方式获得url字符串；\n```c#\n    AlipayTradeWapPayResponse response = client.pageExecute(request,null,\"GET\");\n        test = response.Body;\n```\n2、将Url传入前台页面<a>标签，待用户点击确定\n```html\n     <a id=\"test\" href=\"<%=test%>\" class=\"button button-big button-fill\">支付宝结算</a>\n```\n3、用户点击页面后跳转到提示页，提示用户使用手机自带浏览器打开连接\n\n4、完成支付\n\n5、整体的代码\n\n前端\n```html\n\n  <%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"JsApiPayPage1.aspx.cs\" Inherits=\"JsApiPayPage1\" %>\n<!DOCTYPE html>\n<html>\n<head runat=\"server\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n    <title>微信支付</title>\n</head>\n<body  style=\"background-color: #efeff4;\">\n    <form runat=\"server\" id=\"calculator\" v-cloak>\n        <div class=\"content-block\">\n            <a id=\"test\" href=\"<%=test%>\" class=\"button\">支付宝结算</a>\n        </div>\n    </form>\n</body>\n\n</html>\n<script>\n//绑定单击事件\n var btn = document.querySelector(\"#test\");\n       btn.addEventListener(\"click\", function (e) {\n           e.preventDefault();\n           e.stopPropagation();\n           e.stopImmediatePropagation();\n           //ele.href 是GET到支付宝收银台的URL\n           _AP.pay(e.target.href);\n           return false;\n       }, false);\n</script>\n\n```\n   \n   \n```C\nusing System;\nusing System.Collections.Generic;\nusing CYQ.Data;\nusing Web.Lianmengban_2016;\nusing CYQ.Data.Table;\nusing Aop.Api.Util;\nusing Aop.Api;\nusing Aop.Api.Request;\nusing Aop.Api.Response;\n\npublic partial class JsApiPayPage1 : System.Web.UI.Page\n{\n    public static string test { get; set; }\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        CreateAliPayPramaters();\n    }\n\n    private void CreateAliPayPramaters()\n    {\n         //pageExecute<T>(IAopRequest<T> request, string accessToken, string reqMethod) where T : AopResponse\n        IAopClient client = new DefaultAopClient(\"https://openapi.alipay.com/gateway.do\", AliConfig.APP_ID, AliConfig.APP_PRIVATE_KEY, \"json\", \"1.0\", \"RSA2\", AliConfig.ALIPAY_PUBLIC_KEY, AliConfig.CHARSET, false);\n        //实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称如：alipay.open.public.template.message.industry.modify \n        AlipayTradeWapPayRequest request = new AlipayTradeWapPayRequest();\n        //AlipayOpenPublicTemplateMessageIndustryModifyRequest request = new AlipayOpenPublicTemplateMessageIndustryModifyRequest();\n        //SDK已经封装掉了公共参数，这里只需要传入业务参数\n        //此次只是参数展示，未进行字符串转义，实际情况下请转义\n        request.BizContent = \"{\" +\n        \"    \\\"subject\\\":\\\"大乐透\\\",\" +\n        \"    \\\"out_trade_no\\\":\\\"70501111111S0011111191\\\",\" +\n        \"    \\\"total_amount\\\":0.01,\" +\n        \"    \\\"product_code\\\":\\\"QUICK_WAP_WAY\\\"\" +\n        \"  }\";\n\n        AlipayTradeWapPayResponse response = client.pageExecute(request,null,\"GET\");\n        test = response.Body;\n    }\n\n    \n    \n}\n\n```\n\n```C\npublic class AliConfig\n{\n    //=======【基本信息设置】=====================================\n    /* 支付宝手机网页支付信息配置\n    public const string URL = \"https://openapi.alipay.com/gateway.do\";\n    public const string APP_ID = \"20170111111144\";\n    public const string APP_PRIVATE_KEY = @\"MIIEowIBAAKCAQEA31kawX3d***t\";\n    public const string FORMAT = \"json\";\n    public const string CHARSET = \"utf-8\";\n    public const string ALIPAY_PUBLIC_KEY = @\"MIIBIjANBgkqhkiG9***\";\n    public const string SIGN_TYPE = \"RSA2\";\n    public const string SELLER_EMAIL = \"1234@123.com\";\n    public const string NOTIFY_URL = \"http://www.222.net/ResultNotifyAliPay.aspx\";\n    public const string RETURN_URL = \"http://www.222.net/AliReturnPage.aspx\";\n\n}\n```\n\n----------\n\n\n## 总结及出现的问题\n\n1、参数的内容\n按照api提供的列表把必填项的key及value一定要写全，写对；\n2、BizContent的业务参数内多个参数之间用“，”号隔开，之前忘记写全，报错；\n3、签名错误\nsign_valid\n\nAPI里面生成签名，包括sign_type\n接收支付宝的异步通知时，验签之前不包括sign 和 sign_type\n### [签名sign生成规则](https://doc.open.alipay.com/docs/doc.htm?docType=1&articleId=106118)\n\n支付宝官方sdk有个bug，Aop.Api.Util.AlipaySignature类中方法没有去掉sign_type就进行验证，导致出错；\n\n```C\n        public static bool RSACheckV2(IDictionary<string, string> parameters, string publicKeyPem)\n        {\n            string sign = parameters[\"sign\"];\n\n            parameters.Remove(\"sign\");\n            parameters.Remove(\"sign_type\");//新增修改bug\n            string signContent = GetSignContent(parameters);\n\n            return RSACheckContent(signContent, sign, publicKeyPem, DEFAULT_CHARSET, \"RSA\");\n        }\n\n        public static bool RSACheckV2(IDictionary<string, string> parameters, string publicKeyPem, string charset)\n        {\n            string sign = parameters[\"sign\"];\n\n            parameters.Remove(\"sign\");\n            parameters.Remove(\"sign_type\");//新增修改bug\n            string signContent = GetSignContent(parameters);\n\n            return RSACheckContent(signContent, sign, publicKeyPem, charset, \"RSA\");\n        }\n\n\tpublic static bool RSACheckV2(IDictionary<string, string> parameters, string publicKeyPem, string charset, string signType, bool keyFromFile)\n        {\n            string sign = parameters[\"sign\"];\n\n            parameters.Remove(\"sign\");\n            parameters.Remove(\"sign_type\");//新增修改bug\n            string signContent = GetSignContent(parameters);\n\n            return RSACheckContent(signContent, sign, publicKeyPem, charset, signType, keyFromFile);\n        } \n```\n\n4、交易订单处理失败 请稍后再试 ali38173\n转到支付宝时，弹出这个错误，找了很久，才发现是由于Bizcontent的最后一个}括号内包含一个全角的空格，很坑啊；\n\n\n\n\n\n------\n\n","source":"_posts/微信公众号集合支付宝支付.md","raw":"---\ntitle: 微信公众号集合支付宝支付\ndate: 2017-07-04 20:21:41\ntags: \n- 支付宝\ncategories:\n- 微信公众号\n---\n\n# 微信公众号集合支付宝支付\n\n------\n\n支付宝支付有多种方式，其中手机网站支付满足微信公众号内集成的要求，所以这篇文章即同时描述支付宝手机网站支付。\n\n\n\n> * 配置基础信息\n> * API及业务逻辑\n> * 代码实现\n> * 总结及出现的问题\n\n<!--more-->\n\n## 配置基础信息\n- [x] 给企业注册支付宝账号\n- [x] 创建自用型应用\n- [x] 添加并签约手机网站支付\n需要首先在网站内签约开通手机网站支付的权限。\n![cmd-markdown-logo](https://user-images.githubusercontent.com/20961472/27821257-357d8c52-60d4-11e7-8e79-927b910370d3.png)\n\n\n\n\n## API及业务逻辑\n手机网站支付API可以前往以下网址查看及下载sdk：\n目前手机网站支付demo有： JAVA和PHP版本\nSDK则有：JAVA、.NET和PHP版本\n### [手机支付API](https://docs.open.alipay.com/203/)\n### [SDK下载](https://docs.open.alipay.com/54/103419)\n### [微信公众号集成帮助包](http://p.tb.cn/rmsportal_6680_alipay_in_weixin_demo.zip?spm=a219a.7629140.0.0.XfIWmS&file=rmsportal_6680_alipay_in_weixin_demo.zip)\n### [签名sign生成规则](https://doc.open.alipay.com/docs/doc.htm?docType=1&articleId=106118)\n## 代码实现\n\n###普通手机网站用户进行确认下单页面\n\n```C\n namespace AliPayDemo\n{\n    public partial class Pay : System.Web.UI.Page\n    {\n        //不是真实数据\n        string APPID = \"2017090907474487\";//应用ID\n       //应用私钥\n        string APP_PRIVATE_KEY = @\"****JEwKBgQCIFY+12QuI3gI478vsixJiYOWJb2T7MRr0Zlg2n3fnQWnVB2gOkSgls/CHM3y+d/GQRJRE5aFWa2Xt\";\n        //支付宝公钥\n        string ALIPAY_PUBLIC_KEY = @\"***PXZOf8eQx+qWGky6LJZWie4IF2oqY7El1nps2qVg1IbQkDdIMNSr2a2nQF5GwSpVcF7bRZeNG2qgs3EjHu4hGqXMWbg6Fvs1iigiBYfkzQIDAQAB\";\n        string CHARSET = \"utf-8\";//编码格式\n        \n        \n        \n        protected void Page_Load(object sender, EventArgs e)\n        {\n            //SDK已经封装掉了公共参数，只需要初始化一次\n            IAopClient client = new DefaultAopClient(\"https://openapi.alipay.com/gateway.do\", APPID, APP_PRIVATE_KEY, \"json\", \"1.0\", \"RSA2\", ALIPAY_PUBLIC_KEY, CHARSET, false);\n            \n            \n            //实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称如：alipay.trade.wap.pay.request \n            AlipayTradeWapPayRequest request = new AlipayTradeWapPayRequest();\n          \n            //SDK已经封装掉了公共参数，这里只需要传入业务参数\n            //此次只是参数展示，未进行字符串转义，实际情况下请转义\n            //注意value类型，如金额没有引号，\n            request.BizContent = \"{\" +\n            \"    \\\"subject\\\":\\\"大乐透\\\",\" +\n            \"    \\\"out_trade_no\\\":\\\"70501111111S0011111191\\\",\" +\n            \"    \\\"total_amount\\\":0.01,\" +\n            \"    \\\"product_code\\\":\\\"QUICK_WAP_WAY\\\"\" +\n            \"  }\";\n            \n            AlipayTradeWapPayResponse response = client.pageExecute(request);\n            divBody.InnerHtml = response.Body;\n            ////调用成功，则处理业务逻辑\n            //if (response.IsError)\n            //{\n            //    //.....\n            //}\n        }\n    }\n}\n```\n###微信公众号内用户进行确认下单页面\n1、下载集成微信公众号的帮助包并将文件放入项目文件夹中\n    ap.js  跳转到自带浏览器js\n    pay.htm 提示用户跳转htm页面\n1、使用**pageExecute**方法，以GET方式获得url字符串；\n```c#\n    AlipayTradeWapPayResponse response = client.pageExecute(request,null,\"GET\");\n        test = response.Body;\n```\n2、将Url传入前台页面<a>标签，待用户点击确定\n```html\n     <a id=\"test\" href=\"<%=test%>\" class=\"button button-big button-fill\">支付宝结算</a>\n```\n3、用户点击页面后跳转到提示页，提示用户使用手机自带浏览器打开连接\n\n4、完成支付\n\n5、整体的代码\n\n前端\n```html\n\n  <%@ Page Language=\"C#\" AutoEventWireup=\"true\" CodeFile=\"JsApiPayPage1.aspx.cs\" Inherits=\"JsApiPayPage1\" %>\n<!DOCTYPE html>\n<html>\n<head runat=\"server\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n    <title>微信支付</title>\n</head>\n<body  style=\"background-color: #efeff4;\">\n    <form runat=\"server\" id=\"calculator\" v-cloak>\n        <div class=\"content-block\">\n            <a id=\"test\" href=\"<%=test%>\" class=\"button\">支付宝结算</a>\n        </div>\n    </form>\n</body>\n\n</html>\n<script>\n//绑定单击事件\n var btn = document.querySelector(\"#test\");\n       btn.addEventListener(\"click\", function (e) {\n           e.preventDefault();\n           e.stopPropagation();\n           e.stopImmediatePropagation();\n           //ele.href 是GET到支付宝收银台的URL\n           _AP.pay(e.target.href);\n           return false;\n       }, false);\n</script>\n\n```\n   \n   \n```C\nusing System;\nusing System.Collections.Generic;\nusing CYQ.Data;\nusing Web.Lianmengban_2016;\nusing CYQ.Data.Table;\nusing Aop.Api.Util;\nusing Aop.Api;\nusing Aop.Api.Request;\nusing Aop.Api.Response;\n\npublic partial class JsApiPayPage1 : System.Web.UI.Page\n{\n    public static string test { get; set; }\n\n    protected void Page_Load(object sender, EventArgs e)\n    {\n        CreateAliPayPramaters();\n    }\n\n    private void CreateAliPayPramaters()\n    {\n         //pageExecute<T>(IAopRequest<T> request, string accessToken, string reqMethod) where T : AopResponse\n        IAopClient client = new DefaultAopClient(\"https://openapi.alipay.com/gateway.do\", AliConfig.APP_ID, AliConfig.APP_PRIVATE_KEY, \"json\", \"1.0\", \"RSA2\", AliConfig.ALIPAY_PUBLIC_KEY, AliConfig.CHARSET, false);\n        //实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称如：alipay.open.public.template.message.industry.modify \n        AlipayTradeWapPayRequest request = new AlipayTradeWapPayRequest();\n        //AlipayOpenPublicTemplateMessageIndustryModifyRequest request = new AlipayOpenPublicTemplateMessageIndustryModifyRequest();\n        //SDK已经封装掉了公共参数，这里只需要传入业务参数\n        //此次只是参数展示，未进行字符串转义，实际情况下请转义\n        request.BizContent = \"{\" +\n        \"    \\\"subject\\\":\\\"大乐透\\\",\" +\n        \"    \\\"out_trade_no\\\":\\\"70501111111S0011111191\\\",\" +\n        \"    \\\"total_amount\\\":0.01,\" +\n        \"    \\\"product_code\\\":\\\"QUICK_WAP_WAY\\\"\" +\n        \"  }\";\n\n        AlipayTradeWapPayResponse response = client.pageExecute(request,null,\"GET\");\n        test = response.Body;\n    }\n\n    \n    \n}\n\n```\n\n```C\npublic class AliConfig\n{\n    //=======【基本信息设置】=====================================\n    /* 支付宝手机网页支付信息配置\n    public const string URL = \"https://openapi.alipay.com/gateway.do\";\n    public const string APP_ID = \"20170111111144\";\n    public const string APP_PRIVATE_KEY = @\"MIIEowIBAAKCAQEA31kawX3d***t\";\n    public const string FORMAT = \"json\";\n    public const string CHARSET = \"utf-8\";\n    public const string ALIPAY_PUBLIC_KEY = @\"MIIBIjANBgkqhkiG9***\";\n    public const string SIGN_TYPE = \"RSA2\";\n    public const string SELLER_EMAIL = \"1234@123.com\";\n    public const string NOTIFY_URL = \"http://www.222.net/ResultNotifyAliPay.aspx\";\n    public const string RETURN_URL = \"http://www.222.net/AliReturnPage.aspx\";\n\n}\n```\n\n----------\n\n\n## 总结及出现的问题\n\n1、参数的内容\n按照api提供的列表把必填项的key及value一定要写全，写对；\n2、BizContent的业务参数内多个参数之间用“，”号隔开，之前忘记写全，报错；\n3、签名错误\nsign_valid\n\nAPI里面生成签名，包括sign_type\n接收支付宝的异步通知时，验签之前不包括sign 和 sign_type\n### [签名sign生成规则](https://doc.open.alipay.com/docs/doc.htm?docType=1&articleId=106118)\n\n支付宝官方sdk有个bug，Aop.Api.Util.AlipaySignature类中方法没有去掉sign_type就进行验证，导致出错；\n\n```C\n        public static bool RSACheckV2(IDictionary<string, string> parameters, string publicKeyPem)\n        {\n            string sign = parameters[\"sign\"];\n\n            parameters.Remove(\"sign\");\n            parameters.Remove(\"sign_type\");//新增修改bug\n            string signContent = GetSignContent(parameters);\n\n            return RSACheckContent(signContent, sign, publicKeyPem, DEFAULT_CHARSET, \"RSA\");\n        }\n\n        public static bool RSACheckV2(IDictionary<string, string> parameters, string publicKeyPem, string charset)\n        {\n            string sign = parameters[\"sign\"];\n\n            parameters.Remove(\"sign\");\n            parameters.Remove(\"sign_type\");//新增修改bug\n            string signContent = GetSignContent(parameters);\n\n            return RSACheckContent(signContent, sign, publicKeyPem, charset, \"RSA\");\n        }\n\n\tpublic static bool RSACheckV2(IDictionary<string, string> parameters, string publicKeyPem, string charset, string signType, bool keyFromFile)\n        {\n            string sign = parameters[\"sign\"];\n\n            parameters.Remove(\"sign\");\n            parameters.Remove(\"sign_type\");//新增修改bug\n            string signContent = GetSignContent(parameters);\n\n            return RSACheckContent(signContent, sign, publicKeyPem, charset, signType, keyFromFile);\n        } \n```\n\n4、交易订单处理失败 请稍后再试 ali38173\n转到支付宝时，弹出这个错误，找了很久，才发现是由于Bizcontent的最后一个}括号内包含一个全角的空格，很坑啊；\n\n\n\n\n\n------\n\n","slug":"微信公众号集合支付宝支付","published":1,"updated":"2018-01-11T01:49:33.595Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayyp002cocm7wnnseu3a","content":"<h1 id=\"微信公众号集合支付宝支付\"><a href=\"#微信公众号集合支付宝支付\" class=\"headerlink\" title=\"微信公众号集合支付宝支付\"></a>微信公众号集合支付宝支付</h1><hr>\n<p>支付宝支付有多种方式，其中手机网站支付满足微信公众号内集成的要求，所以这篇文章即同时描述支付宝手机网站支付。</p>\n<blockquote>\n<ul>\n<li>配置基础信息</li>\n<li>API及业务逻辑</li>\n<li>代码实现</li>\n<li>总结及出现的问题</li>\n</ul>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"配置基础信息\"><a href=\"#配置基础信息\" class=\"headerlink\" title=\"配置基础信息\"></a>配置基础信息</h2><ul>\n<li>[x] 给企业注册支付宝账号</li>\n<li>[x] 创建自用型应用</li>\n<li>[x] 添加并签约手机网站支付<br>需要首先在网站内签约开通手机网站支付的权限。<br><img src=\"https://user-images.githubusercontent.com/20961472/27821257-357d8c52-60d4-11e7-8e79-927b910370d3.png\" alt=\"cmd-markdown-logo\"></li>\n</ul>\n<h2 id=\"API及业务逻辑\"><a href=\"#API及业务逻辑\" class=\"headerlink\" title=\"API及业务逻辑\"></a>API及业务逻辑</h2><p>手机网站支付API可以前往以下网址查看及下载sdk：<br>目前手机网站支付demo有： JAVA和PHP版本<br>SDK则有：JAVA、.NET和PHP版本</p>\n<h3 id=\"手机支付API\"><a href=\"#手机支付API\" class=\"headerlink\" title=\"手机支付API\"></a><a href=\"https://docs.open.alipay.com/203/\" target=\"_blank\" rel=\"external\">手机支付API</a></h3><h3 id=\"SDK下载\"><a href=\"#SDK下载\" class=\"headerlink\" title=\"SDK下载\"></a><a href=\"https://docs.open.alipay.com/54/103419\" target=\"_blank\" rel=\"external\">SDK下载</a></h3><h3 id=\"微信公众号集成帮助包\"><a href=\"#微信公众号集成帮助包\" class=\"headerlink\" title=\"微信公众号集成帮助包\"></a><a href=\"http://p.tb.cn/rmsportal_6680_alipay_in_weixin_demo.zip?spm=a219a.7629140.0.0.XfIWmS&amp;file=rmsportal_6680_alipay_in_weixin_demo.zip\" target=\"_blank\" rel=\"external\">微信公众号集成帮助包</a></h3><h3 id=\"签名sign生成规则\"><a href=\"#签名sign生成规则\" class=\"headerlink\" title=\"签名sign生成规则\"></a><a href=\"https://doc.open.alipay.com/docs/doc.htm?docType=1&amp;articleId=106118\" target=\"_blank\" rel=\"external\">签名sign生成规则</a></h3><h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p>###普通手机网站用户进行确认下单页面</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"keyword\">namespace</span> AliPayDemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> Pay : System.Web.UI.Page</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//不是真实数据</span></div><div class=\"line\">        <span class=\"built_in\">string</span> APPID = <span class=\"string\">\"2017090907474487\"</span>;<span class=\"comment\">//应用ID</span></div><div class=\"line\">       <span class=\"comment\">//应用私钥</span></div><div class=\"line\">        <span class=\"built_in\">string</span> APP_PRIVATE_KEY = @<span class=\"string\">\"****JEwKBgQCIFY+12QuI3gI478vsixJiYOWJb2T7MRr0Zlg2n3fnQWnVB2gOkSgls/CHM3y+d/GQRJRE5aFWa2Xt\"</span>;</div><div class=\"line\">        <span class=\"comment\">//支付宝公钥</span></div><div class=\"line\">        <span class=\"built_in\">string</span> ALIPAY_PUBLIC_KEY = @<span class=\"string\">\"***PXZOf8eQx+qWGky6LJZWie4IF2oqY7El1nps2qVg1IbQkDdIMNSr2a2nQF5GwSpVcF7bRZeNG2qgs3EjHu4hGqXMWbg6Fvs1iigiBYfkzQIDAQAB\"</span>;</div><div class=\"line\">        <span class=\"built_in\">string</span> CHARSET = <span class=\"string\">\"utf-8\"</span>;<span class=\"comment\">//编码格式</span></div><div class=\"line\">        </div><div class=\"line\">        </div><div class=\"line\">        </div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">//SDK已经封装掉了公共参数，只需要初始化一次</span></div><div class=\"line\">            IAopClient client = <span class=\"keyword\">new</span> DefaultAopClient(<span class=\"string\">\"https://openapi.alipay.com/gateway.do\"</span>, APPID, APP_PRIVATE_KEY, <span class=\"string\">\"json\"</span>, <span class=\"string\">\"1.0\"</span>, <span class=\"string\">\"RSA2\"</span>, ALIPAY_PUBLIC_KEY, CHARSET, <span class=\"literal\">false</span>);</div><div class=\"line\">            </div><div class=\"line\">            </div><div class=\"line\">            <span class=\"comment\">//实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称如：alipay.trade.wap.pay.request </span></div><div class=\"line\">            AlipayTradeWapPayRequest request = <span class=\"keyword\">new</span> AlipayTradeWapPayRequest();</div><div class=\"line\">          </div><div class=\"line\">            <span class=\"comment\">//SDK已经封装掉了公共参数，这里只需要传入业务参数</span></div><div class=\"line\">            <span class=\"comment\">//此次只是参数展示，未进行字符串转义，实际情况下请转义</span></div><div class=\"line\">            <span class=\"comment\">//注意value类型，如金额没有引号，</span></div><div class=\"line\">            request.BizContent = <span class=\"string\">\"&#123;\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"subject\\\":\\\"大乐透\\\",\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"out_trade_no\\\":\\\"70501111111S0011111191\\\",\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"total_amount\\\":0.01,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"product_code\\\":\\\"QUICK_WAP_WAY\\\"\"</span> +</div><div class=\"line\">            <span class=\"string\">\"  &#125;\"</span>;</div><div class=\"line\">            </div><div class=\"line\">            AlipayTradeWapPayResponse response = client.pageExecute(request);</div><div class=\"line\">            divBody.InnerHtml = response.Body;</div><div class=\"line\">            <span class=\"comment\">////调用成功，则处理业务逻辑</span></div><div class=\"line\">            <span class=\"comment\">//if (response.IsError)</span></div><div class=\"line\">            <span class=\"comment\">//&#123;</span></div><div class=\"line\">            <span class=\"comment\">//    //.....</span></div><div class=\"line\">            <span class=\"comment\">//&#125;</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>###微信公众号内用户进行确认下单页面<br>1、下载集成微信公众号的帮助包并将文件放入项目文件夹中<br>    ap.js  跳转到自带浏览器js<br>    pay.htm 提示用户跳转htm页面<br>1、使用<strong>pageExecute</strong>方法，以GET方式获得url字符串；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">AlipayTradeWapPayResponse response = client.pageExecute(request,null,&quot;GET&quot;);</div><div class=\"line\">    test = response.Body;</div></pre></td></tr></table></figure></p>\n<p>2、将Url传入前台页面<a>标签，待用户点击确定<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&lt;%=test%&gt;\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button button-big button-fill\"</span>&gt;</span>支付宝结算<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure></a></p>\n<p>3、用户点击页面后跳转到提示页，提示用户使用手机自带浏览器打开连接</p>\n<p>4、完成支付</p>\n<p>5、整体的代码</p>\n<p>前端<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">Page</span> <span class=\"attr\">Language</span>=<span class=\"string\">\"C#\"</span> <span class=\"attr\">AutoEventWireup</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">CodeFile</span>=<span class=\"string\">\"JsApiPayPage1.aspx.cs\"</span> <span class=\"attr\">Inherits</span>=<span class=\"string\">\"JsApiPayPage1\"</span> %&gt;</span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"content-type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html;charset=utf-8\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>微信支付<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>  <span class=\"attr\">style</span>=<span class=\"string\">\"background-color: #efeff4;\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"calculator\"</span> <span class=\"attr\">v-cloak</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-block\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&lt;%=test%&gt;\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span>&gt;</span>支付宝结算<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\"><span class=\"comment\">//绑定单击事件</span></div><div class=\"line\"> <span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#test\"</span>);</div><div class=\"line\">       btn.addEventListener(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">           e.preventDefault();</div><div class=\"line\">           e.stopPropagation();</div><div class=\"line\">           e.stopImmediatePropagation();</div><div class=\"line\">           <span class=\"comment\">//ele.href 是GET到支付宝收银台的URL</span></div><div class=\"line\">           _AP.pay(e.target.href);</div><div class=\"line\">           <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">       &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> CYQ.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> Web.Lianmengban_2016;</div><div class=\"line\"><span class=\"keyword\">using</span> CYQ.Data.Table;</div><div class=\"line\"><span class=\"keyword\">using</span> Aop.Api.Util;</div><div class=\"line\"><span class=\"keyword\">using</span> Aop.Api;</div><div class=\"line\"><span class=\"keyword\">using</span> Aop.Api.Request;</div><div class=\"line\"><span class=\"keyword\">using</span> Aop.Api.Response;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> JsApiPayPage1 : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> test &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        CreateAliPayPramaters();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateAliPayPramaters</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">         <span class=\"comment\">//pageExecute&lt;T&gt;(IAopRequest&lt;T&gt; request, string accessToken, string reqMethod) where T : AopResponse</span></div><div class=\"line\">        IAopClient client = <span class=\"keyword\">new</span> DefaultAopClient(<span class=\"string\">\"https://openapi.alipay.com/gateway.do\"</span>, AliConfig.APP_ID, AliConfig.APP_PRIVATE_KEY, <span class=\"string\">\"json\"</span>, <span class=\"string\">\"1.0\"</span>, <span class=\"string\">\"RSA2\"</span>, AliConfig.ALIPAY_PUBLIC_KEY, AliConfig.CHARSET, <span class=\"literal\">false</span>);</div><div class=\"line\">        <span class=\"comment\">//实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称如：alipay.open.public.template.message.industry.modify </span></div><div class=\"line\">        AlipayTradeWapPayRequest request = <span class=\"keyword\">new</span> AlipayTradeWapPayRequest();</div><div class=\"line\">        <span class=\"comment\">//AlipayOpenPublicTemplateMessageIndustryModifyRequest request = new AlipayOpenPublicTemplateMessageIndustryModifyRequest();</span></div><div class=\"line\">        <span class=\"comment\">//SDK已经封装掉了公共参数，这里只需要传入业务参数</span></div><div class=\"line\">        <span class=\"comment\">//此次只是参数展示，未进行字符串转义，实际情况下请转义</span></div><div class=\"line\">        request.BizContent = <span class=\"string\">\"&#123;\"</span> +</div><div class=\"line\">        <span class=\"string\">\"    \\\"subject\\\":\\\"大乐透\\\",\"</span> +</div><div class=\"line\">        <span class=\"string\">\"    \\\"out_trade_no\\\":\\\"70501111111S0011111191\\\",\"</span> +</div><div class=\"line\">        <span class=\"string\">\"    \\\"total_amount\\\":0.01,\"</span> +</div><div class=\"line\">        <span class=\"string\">\"    \\\"product_code\\\":\\\"QUICK_WAP_WAY\\\"\"</span> +</div><div class=\"line\">        <span class=\"string\">\"  &#125;\"</span>;</div><div class=\"line\"></div><div class=\"line\">        AlipayTradeWapPayResponse response = client.pageExecute(request,null,<span class=\"string\">\"GET\"</span>);</div><div class=\"line\">        test = response.Body;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> AliConfig</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">//=======【基本信息设置】=====================================</span></div><div class=\"line\">    <span class=\"comment\">/* 支付宝手机网页支付信息配置</span></div><div class=\"line\">    public const string URL = \"https://openapi.alipay.com/gateway.do\";</div><div class=\"line\">    public const string APP_ID = \"20170111111144\";</div><div class=\"line\">    public const string APP_PRIVATE_KEY = @\"MIIEowIBAAKCAQEA31kawX3d***t\";</div><div class=\"line\">    public const string FORMAT = \"json\";</div><div class=\"line\">    public const string CHARSET = \"utf-8\";</div><div class=\"line\">    public const string ALIPAY_PUBLIC_KEY = @\"MIIBIjANBgkqhkiG9***\";</div><div class=\"line\">    public const string SIGN_TYPE = \"RSA2\";</div><div class=\"line\">    public const string SELLER_EMAIL = \"1234@123.com\";</div><div class=\"line\">    public const string NOTIFY_URL = \"http://www.222.net/ResultNotifyAliPay.aspx\";</div><div class=\"line\">    public const string RETURN_URL = \"http://www.222.net/AliReturnPage.aspx\";</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"总结及出现的问题\"><a href=\"#总结及出现的问题\" class=\"headerlink\" title=\"总结及出现的问题\"></a>总结及出现的问题</h2><p>1、参数的内容<br>按照api提供的列表把必填项的key及value一定要写全，写对；<br>2、BizContent的业务参数内多个参数之间用“，”号隔开，之前忘记写全，报错；<br>3、签名错误<br>sign_valid</p>\n<p>API里面生成签名，包括sign_type<br>接收支付宝的异步通知时，验签之前不包括sign 和 sign_type</p>\n<h3 id=\"签名sign生成规则-1\"><a href=\"#签名sign生成规则-1\" class=\"headerlink\" title=\"签名sign生成规则\"></a><a href=\"https://doc.open.alipay.com/docs/doc.htm?docType=1&amp;articleId=106118\" target=\"_blank\" rel=\"external\">签名sign生成规则</a></h3><p>支付宝官方sdk有个bug，Aop.Api.Util.AlipaySignature类中方法没有去掉sign_type就进行验证，导致出错；</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">RSACheckV2</span><span class=\"params\">(IDictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; parameters, <span class=\"built_in\">string</span> publicKeyPem)</span></span></div><div class=\"line\">       &#123;</div><div class=\"line\">           <span class=\"built_in\">string</span> sign = parameters[<span class=\"string\">\"sign\"</span>];</div><div class=\"line\"></div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign\"</span>);</div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign_type\"</span>);<span class=\"comment\">//新增修改bug</span></div><div class=\"line\">           <span class=\"built_in\">string</span> signContent = GetSignContent(parameters);</div><div class=\"line\"></div><div class=\"line\">           <span class=\"keyword\">return</span> RSACheckContent(signContent, sign, publicKeyPem, DEFAULT_CHARSET, <span class=\"string\">\"RSA\"</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\"></div><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">RSACheckV2</span><span class=\"params\">(IDictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; parameters, <span class=\"built_in\">string</span> publicKeyPem, <span class=\"built_in\">string</span> charset)</span></span></div><div class=\"line\">       &#123;</div><div class=\"line\">           <span class=\"built_in\">string</span> sign = parameters[<span class=\"string\">\"sign\"</span>];</div><div class=\"line\"></div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign\"</span>);</div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign_type\"</span>);<span class=\"comment\">//新增修改bug</span></div><div class=\"line\">           <span class=\"built_in\">string</span> signContent = GetSignContent(parameters);</div><div class=\"line\"></div><div class=\"line\">           <span class=\"keyword\">return</span> RSACheckContent(signContent, sign, publicKeyPem, charset, <span class=\"string\">\"RSA\"</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">RSACheckV2</span><span class=\"params\">(IDictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; parameters, <span class=\"built_in\">string</span> publicKeyPem, <span class=\"built_in\">string</span> charset, <span class=\"built_in\">string</span> signType, <span class=\"keyword\">bool</span> keyFromFile)</span></span></div><div class=\"line\">       &#123;</div><div class=\"line\">           <span class=\"built_in\">string</span> sign = parameters[<span class=\"string\">\"sign\"</span>];</div><div class=\"line\"></div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign\"</span>);</div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign_type\"</span>);<span class=\"comment\">//新增修改bug</span></div><div class=\"line\">           <span class=\"built_in\">string</span> signContent = GetSignContent(parameters);</div><div class=\"line\"></div><div class=\"line\">           <span class=\"keyword\">return</span> RSACheckContent(signContent, sign, publicKeyPem, charset, signType, keyFromFile);</div><div class=\"line\">       &#125;</div></pre></td></tr></table></figure>\n<p>4、交易订单处理失败 请稍后再试 ali38173<br>转到支付宝时，弹出这个错误，找了很久，才发现是由于Bizcontent的最后一个}括号内包含一个全角的空格，很坑啊；</p>\n<hr>\n","excerpt":"<h1 id=\"微信公众号集合支付宝支付\"><a href=\"#微信公众号集合支付宝支付\" class=\"headerlink\" title=\"微信公众号集合支付宝支付\"></a>微信公众号集合支付宝支付</h1><hr>\n<p>支付宝支付有多种方式，其中手机网站支付满足微信公众号内集成的要求，所以这篇文章即同时描述支付宝手机网站支付。</p>\n<blockquote>\n<ul>\n<li>配置基础信息</li>\n<li>API及业务逻辑</li>\n<li>代码实现</li>\n<li>总结及出现的问题</li>\n</ul>\n</blockquote>","more":"<h2 id=\"配置基础信息\"><a href=\"#配置基础信息\" class=\"headerlink\" title=\"配置基础信息\"></a>配置基础信息</h2><ul>\n<li>[x] 给企业注册支付宝账号</li>\n<li>[x] 创建自用型应用</li>\n<li>[x] 添加并签约手机网站支付<br>需要首先在网站内签约开通手机网站支付的权限。<br><img src=\"https://user-images.githubusercontent.com/20961472/27821257-357d8c52-60d4-11e7-8e79-927b910370d3.png\" alt=\"cmd-markdown-logo\"></li>\n</ul>\n<h2 id=\"API及业务逻辑\"><a href=\"#API及业务逻辑\" class=\"headerlink\" title=\"API及业务逻辑\"></a>API及业务逻辑</h2><p>手机网站支付API可以前往以下网址查看及下载sdk：<br>目前手机网站支付demo有： JAVA和PHP版本<br>SDK则有：JAVA、.NET和PHP版本</p>\n<h3 id=\"手机支付API\"><a href=\"#手机支付API\" class=\"headerlink\" title=\"手机支付API\"></a><a href=\"https://docs.open.alipay.com/203/\">手机支付API</a></h3><h3 id=\"SDK下载\"><a href=\"#SDK下载\" class=\"headerlink\" title=\"SDK下载\"></a><a href=\"https://docs.open.alipay.com/54/103419\">SDK下载</a></h3><h3 id=\"微信公众号集成帮助包\"><a href=\"#微信公众号集成帮助包\" class=\"headerlink\" title=\"微信公众号集成帮助包\"></a><a href=\"http://p.tb.cn/rmsportal_6680_alipay_in_weixin_demo.zip?spm=a219a.7629140.0.0.XfIWmS&amp;file=rmsportal_6680_alipay_in_weixin_demo.zip\">微信公众号集成帮助包</a></h3><h3 id=\"签名sign生成规则\"><a href=\"#签名sign生成规则\" class=\"headerlink\" title=\"签名sign生成规则\"></a><a href=\"https://doc.open.alipay.com/docs/doc.htm?docType=1&amp;articleId=106118\">签名sign生成规则</a></h3><h2 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h2><p>###普通手机网站用户进行确认下单页面</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\"> <span class=\"keyword\">namespace</span> AliPayDemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> Pay : System.Web.UI.Page</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//不是真实数据</span></div><div class=\"line\">        <span class=\"built_in\">string</span> APPID = <span class=\"string\">\"2017090907474487\"</span>;<span class=\"comment\">//应用ID</span></div><div class=\"line\">       <span class=\"comment\">//应用私钥</span></div><div class=\"line\">        <span class=\"built_in\">string</span> APP_PRIVATE_KEY = @<span class=\"string\">\"****JEwKBgQCIFY+12QuI3gI478vsixJiYOWJb2T7MRr0Zlg2n3fnQWnVB2gOkSgls/CHM3y+d/GQRJRE5aFWa2Xt\"</span>;</div><div class=\"line\">        <span class=\"comment\">//支付宝公钥</span></div><div class=\"line\">        <span class=\"built_in\">string</span> ALIPAY_PUBLIC_KEY = @<span class=\"string\">\"***PXZOf8eQx+qWGky6LJZWie4IF2oqY7El1nps2qVg1IbQkDdIMNSr2a2nQF5GwSpVcF7bRZeNG2qgs3EjHu4hGqXMWbg6Fvs1iigiBYfkzQIDAQAB\"</span>;</div><div class=\"line\">        <span class=\"built_in\">string</span> CHARSET = <span class=\"string\">\"utf-8\"</span>;<span class=\"comment\">//编码格式</span></div><div class=\"line\">        </div><div class=\"line\">        </div><div class=\"line\">        </div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">//SDK已经封装掉了公共参数，只需要初始化一次</span></div><div class=\"line\">            IAopClient client = <span class=\"keyword\">new</span> DefaultAopClient(<span class=\"string\">\"https://openapi.alipay.com/gateway.do\"</span>, APPID, APP_PRIVATE_KEY, <span class=\"string\">\"json\"</span>, <span class=\"string\">\"1.0\"</span>, <span class=\"string\">\"RSA2\"</span>, ALIPAY_PUBLIC_KEY, CHARSET, <span class=\"literal\">false</span>);</div><div class=\"line\">            </div><div class=\"line\">            </div><div class=\"line\">            <span class=\"comment\">//实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称如：alipay.trade.wap.pay.request </span></div><div class=\"line\">            AlipayTradeWapPayRequest request = <span class=\"keyword\">new</span> AlipayTradeWapPayRequest();</div><div class=\"line\">          </div><div class=\"line\">            <span class=\"comment\">//SDK已经封装掉了公共参数，这里只需要传入业务参数</span></div><div class=\"line\">            <span class=\"comment\">//此次只是参数展示，未进行字符串转义，实际情况下请转义</span></div><div class=\"line\">            <span class=\"comment\">//注意value类型，如金额没有引号，</span></div><div class=\"line\">            request.BizContent = <span class=\"string\">\"&#123;\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"subject\\\":\\\"大乐透\\\",\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"out_trade_no\\\":\\\"70501111111S0011111191\\\",\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"total_amount\\\":0.01,\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"product_code\\\":\\\"QUICK_WAP_WAY\\\"\"</span> +</div><div class=\"line\">            <span class=\"string\">\"  &#125;\"</span>;</div><div class=\"line\">            </div><div class=\"line\">            AlipayTradeWapPayResponse response = client.pageExecute(request);</div><div class=\"line\">            divBody.InnerHtml = response.Body;</div><div class=\"line\">            <span class=\"comment\">////调用成功，则处理业务逻辑</span></div><div class=\"line\">            <span class=\"comment\">//if (response.IsError)</span></div><div class=\"line\">            <span class=\"comment\">//&#123;</span></div><div class=\"line\">            <span class=\"comment\">//    //.....</span></div><div class=\"line\">            <span class=\"comment\">//&#125;</span></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>###微信公众号内用户进行确认下单页面<br>1、下载集成微信公众号的帮助包并将文件放入项目文件夹中<br>    ap.js  跳转到自带浏览器js<br>    pay.htm 提示用户跳转htm页面<br>1、使用<strong>pageExecute</strong>方法，以GET方式获得url字符串；<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">AlipayTradeWapPayResponse response = client.pageExecute(request,null,&quot;GET&quot;);</div><div class=\"line\">    test = response.Body;</div></pre></td></tr></table></figure></p>\n<p>2、将Url传入前台页面<a>标签，待用户点击确定<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&lt;%=test%&gt;\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button button-big button-fill\"</span>&gt;</span>支付宝结算<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<p>3、用户点击页面后跳转到提示页，提示用户使用手机自带浏览器打开连接</p>\n<p>4、完成支付</p>\n<p>5、整体的代码</p>\n<p>前端<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%@</span> <span class=\"attr\">Page</span> <span class=\"attr\">Language</span>=<span class=\"string\">\"C#\"</span> <span class=\"attr\">AutoEventWireup</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">CodeFile</span>=<span class=\"string\">\"JsApiPayPage1.aspx.cs\"</span> <span class=\"attr\">Inherits</span>=<span class=\"string\">\"JsApiPayPage1\"</span> %&gt;</span></div><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"content-type\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"text/html;charset=utf-8\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, initial-scale=1\"</span> /&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"IE=edge\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-capable\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"yes\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"apple-mobile-web-app-status-bar-style\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"black\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>微信支付<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>  <span class=\"attr\">style</span>=<span class=\"string\">\"background-color: #efeff4;\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">runat</span>=<span class=\"string\">\"server\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"calculator\"</span> <span class=\"attr\">v-cloak</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"content-block\"</span>&gt;</span></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">id</span>=<span class=\"string\">\"test\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"&lt;%=test%&gt;\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"button\"</span>&gt;</span>支付宝结算<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\"><span class=\"comment\">//绑定单击事件</span></div><div class=\"line\"> <span class=\"keyword\">var</span> btn = <span class=\"built_in\">document</span>.querySelector(<span class=\"string\">\"#test\"</span>);</div><div class=\"line\">       btn.addEventListener(<span class=\"string\">\"click\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">e</span>) </span>&#123;</div><div class=\"line\">           e.preventDefault();</div><div class=\"line\">           e.stopPropagation();</div><div class=\"line\">           e.stopImmediatePropagation();</div><div class=\"line\">           <span class=\"comment\">//ele.href 是GET到支付宝收银台的URL</span></div><div class=\"line\">           _AP.pay(e.target.href);</div><div class=\"line\">           <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">       &#125;, <span class=\"literal\">false</span>);</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> CYQ.Data;</div><div class=\"line\"><span class=\"keyword\">using</span> Web.Lianmengban_2016;</div><div class=\"line\"><span class=\"keyword\">using</span> CYQ.Data.Table;</div><div class=\"line\"><span class=\"keyword\">using</span> Aop.Api.Util;</div><div class=\"line\"><span class=\"keyword\">using</span> Aop.Api;</div><div class=\"line\"><span class=\"keyword\">using</span> Aop.Api.Request;</div><div class=\"line\"><span class=\"keyword\">using</span> Aop.Api.Response;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> partial <span class=\"keyword\">class</span> JsApiPayPage1 : System.Web.UI.Page</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> test &#123; get; <span class=\"built_in\">set</span>; &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">Page_Load</span><span class=\"params\">(object sender, EventArgs e)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        CreateAliPayPramaters();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">CreateAliPayPramaters</span><span class=\"params\">()</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">         <span class=\"comment\">//pageExecute&lt;T&gt;(IAopRequest&lt;T&gt; request, string accessToken, string reqMethod) where T : AopResponse</span></div><div class=\"line\">        IAopClient client = <span class=\"keyword\">new</span> DefaultAopClient(<span class=\"string\">\"https://openapi.alipay.com/gateway.do\"</span>, AliConfig.APP_ID, AliConfig.APP_PRIVATE_KEY, <span class=\"string\">\"json\"</span>, <span class=\"string\">\"1.0\"</span>, <span class=\"string\">\"RSA2\"</span>, AliConfig.ALIPAY_PUBLIC_KEY, AliConfig.CHARSET, <span class=\"literal\">false</span>);</div><div class=\"line\">        <span class=\"comment\">//实例化具体API对应的request类,类名称和接口名称对应,当前调用接口名称如：alipay.open.public.template.message.industry.modify </span></div><div class=\"line\">        AlipayTradeWapPayRequest request = <span class=\"keyword\">new</span> AlipayTradeWapPayRequest();</div><div class=\"line\">        <span class=\"comment\">//AlipayOpenPublicTemplateMessageIndustryModifyRequest request = new AlipayOpenPublicTemplateMessageIndustryModifyRequest();</span></div><div class=\"line\">        <span class=\"comment\">//SDK已经封装掉了公共参数，这里只需要传入业务参数</span></div><div class=\"line\">        <span class=\"comment\">//此次只是参数展示，未进行字符串转义，实际情况下请转义</span></div><div class=\"line\">        request.BizContent = <span class=\"string\">\"&#123;\"</span> +</div><div class=\"line\">        <span class=\"string\">\"    \\\"subject\\\":\\\"大乐透\\\",\"</span> +</div><div class=\"line\">        <span class=\"string\">\"    \\\"out_trade_no\\\":\\\"70501111111S0011111191\\\",\"</span> +</div><div class=\"line\">        <span class=\"string\">\"    \\\"total_amount\\\":0.01,\"</span> +</div><div class=\"line\">        <span class=\"string\">\"    \\\"product_code\\\":\\\"QUICK_WAP_WAY\\\"\"</span> +</div><div class=\"line\">        <span class=\"string\">\"  &#125;\"</span>;</div><div class=\"line\"></div><div class=\"line\">        AlipayTradeWapPayResponse response = client.pageExecute(request,null,<span class=\"string\">\"GET\"</span>);</div><div class=\"line\">        test = response.Body;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    </div><div class=\"line\">    </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> AliConfig</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"comment\">//=======【基本信息设置】=====================================</span></div><div class=\"line\">    <span class=\"comment\">/* 支付宝手机网页支付信息配置</div><div class=\"line\">    public const string URL = \"https://openapi.alipay.com/gateway.do\";</div><div class=\"line\">    public const string APP_ID = \"20170111111144\";</div><div class=\"line\">    public const string APP_PRIVATE_KEY = @\"MIIEowIBAAKCAQEA31kawX3d***t\";</div><div class=\"line\">    public const string FORMAT = \"json\";</div><div class=\"line\">    public const string CHARSET = \"utf-8\";</div><div class=\"line\">    public const string ALIPAY_PUBLIC_KEY = @\"MIIBIjANBgkqhkiG9***\";</div><div class=\"line\">    public const string SIGN_TYPE = \"RSA2\";</div><div class=\"line\">    public const string SELLER_EMAIL = \"1234@123.com\";</div><div class=\"line\">    public const string NOTIFY_URL = \"http://www.222.net/ResultNotifyAliPay.aspx\";</div><div class=\"line\">    public const string RETURN_URL = \"http://www.222.net/AliReturnPage.aspx\";</div><div class=\"line\"></div><div class=\"line\">&#125;</span></div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"总结及出现的问题\"><a href=\"#总结及出现的问题\" class=\"headerlink\" title=\"总结及出现的问题\"></a>总结及出现的问题</h2><p>1、参数的内容<br>按照api提供的列表把必填项的key及value一定要写全，写对；<br>2、BizContent的业务参数内多个参数之间用“，”号隔开，之前忘记写全，报错；<br>3、签名错误<br>sign_valid</p>\n<p>API里面生成签名，包括sign_type<br>接收支付宝的异步通知时，验签之前不包括sign 和 sign_type</p>\n<h3 id=\"签名sign生成规则-1\"><a href=\"#签名sign生成规则-1\" class=\"headerlink\" title=\"签名sign生成规则\"></a><a href=\"https://doc.open.alipay.com/docs/doc.htm?docType=1&amp;articleId=106118\">签名sign生成规则</a></h3><p>支付宝官方sdk有个bug，Aop.Api.Util.AlipaySignature类中方法没有去掉sign_type就进行验证，导致出错；</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">RSACheckV2</span><span class=\"params\">(IDictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; parameters, <span class=\"built_in\">string</span> publicKeyPem)</span></div><div class=\"line\">       </span>&#123;</div><div class=\"line\">           <span class=\"built_in\">string</span> sign = parameters[<span class=\"string\">\"sign\"</span>];</div><div class=\"line\"></div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign\"</span>);</div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign_type\"</span>);<span class=\"comment\">//新增修改bug</span></div><div class=\"line\">           <span class=\"built_in\">string</span> signContent = GetSignContent(parameters);</div><div class=\"line\"></div><div class=\"line\">           <span class=\"keyword\">return</span> RSACheckContent(signContent, sign, publicKeyPem, DEFAULT_CHARSET, <span class=\"string\">\"RSA\"</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\"></div><div class=\"line\">       <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">RSACheckV2</span><span class=\"params\">(IDictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; parameters, <span class=\"built_in\">string</span> publicKeyPem, <span class=\"built_in\">string</span> charset)</span></div><div class=\"line\">       </span>&#123;</div><div class=\"line\">           <span class=\"built_in\">string</span> sign = parameters[<span class=\"string\">\"sign\"</span>];</div><div class=\"line\"></div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign\"</span>);</div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign_type\"</span>);<span class=\"comment\">//新增修改bug</span></div><div class=\"line\">           <span class=\"built_in\">string</span> signContent = GetSignContent(parameters);</div><div class=\"line\"></div><div class=\"line\">           <span class=\"keyword\">return</span> RSACheckContent(signContent, sign, publicKeyPem, charset, <span class=\"string\">\"RSA\"</span>);</div><div class=\"line\">       &#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">bool</span> <span class=\"title\">RSACheckV2</span><span class=\"params\">(IDictionary&lt;<span class=\"built_in\">string</span>, <span class=\"built_in\">string</span>&gt; parameters, <span class=\"built_in\">string</span> publicKeyPem, <span class=\"built_in\">string</span> charset, <span class=\"built_in\">string</span> signType, <span class=\"keyword\">bool</span> keyFromFile)</span></div><div class=\"line\">       </span>&#123;</div><div class=\"line\">           <span class=\"built_in\">string</span> sign = parameters[<span class=\"string\">\"sign\"</span>];</div><div class=\"line\"></div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign\"</span>);</div><div class=\"line\">           parameters.Remove(<span class=\"string\">\"sign_type\"</span>);<span class=\"comment\">//新增修改bug</span></div><div class=\"line\">           <span class=\"built_in\">string</span> signContent = GetSignContent(parameters);</div><div class=\"line\"></div><div class=\"line\">           <span class=\"keyword\">return</span> RSACheckContent(signContent, sign, publicKeyPem, charset, signType, keyFromFile);</div><div class=\"line\">       &#125;</div></pre></td></tr></table></figure>\n<p>4、交易订单处理失败 请稍后再试 ali38173<br>转到支付宝时，弹出这个错误，找了很久，才发现是由于Bizcontent的最后一个}括号内包含一个全角的空格，很坑啊；</p>\n<hr>"},{"title":"枚举使用备忘","date":"2018-05-30T06:38:28.000Z","_content":"\n<!--more-->\n\n简介\n======\nEnum为枚举提供基类，其基础类型可以是除 Char 外的任何整型。如果没有显式声明基础类型，则使用Int32。编程语言通常提供语法来声明由一组已命名的常数和它们的值组成的枚举。\n注意：枚举类型的基类型是除 Char 外的任何整型，所以枚举类型的值是整型值。\n\nEnum 提供一些实用的静态方法：\n\n(1)比较枚举类的实例的方法\n\n(2)将实例的值转换为其字符串表示形式的方法\n\n(3)将数字的字符串表示形式转换为此类的实例的方法\n\n(4)创建指定枚举和值的实例的方法。\n\n\n\n## 示例代码 ##\n\n**常用的就是将枚举按照字符串输出展示与枚举值（整形）保存到数据库。**\n```C \nusing System;\n\nnamespace EnumDemo\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] temp = System.Enum.GetNames(new MyColor().GetType());//获得枚举数组\n            //Enum->string\n            Console.WriteLine(MyColor.兰.ToString());//输出：兰\n            Console.WriteLine(Enum.GetName(typeof(MyColor), 2));//按照下标获得指定枚举，输出：兰\n            Console.WriteLine(temp[2]);//输出：兰\n            //Enum->int\n            int intValue = Convert.ToInt32(MyColor.兰);\n            Console.WriteLine(intValue);//输出：2\n            Console.Read();\n\n        }\n    }\n\n    public enum MyColor\n    {\n        红, 黄, 兰, 黑, 白, 橙, 紫\n    }\n}\n\n\n```","source":"_posts/枚举使用备忘.md","raw":"---\ntitle: 枚举使用备忘\ndate: 2018-05-30 14:38:28\ncategories:\n- C#基础\n---\n\n<!--more-->\n\n简介\n======\nEnum为枚举提供基类，其基础类型可以是除 Char 外的任何整型。如果没有显式声明基础类型，则使用Int32。编程语言通常提供语法来声明由一组已命名的常数和它们的值组成的枚举。\n注意：枚举类型的基类型是除 Char 外的任何整型，所以枚举类型的值是整型值。\n\nEnum 提供一些实用的静态方法：\n\n(1)比较枚举类的实例的方法\n\n(2)将实例的值转换为其字符串表示形式的方法\n\n(3)将数字的字符串表示形式转换为此类的实例的方法\n\n(4)创建指定枚举和值的实例的方法。\n\n\n\n## 示例代码 ##\n\n**常用的就是将枚举按照字符串输出展示与枚举值（整形）保存到数据库。**\n```C \nusing System;\n\nnamespace EnumDemo\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] temp = System.Enum.GetNames(new MyColor().GetType());//获得枚举数组\n            //Enum->string\n            Console.WriteLine(MyColor.兰.ToString());//输出：兰\n            Console.WriteLine(Enum.GetName(typeof(MyColor), 2));//按照下标获得指定枚举，输出：兰\n            Console.WriteLine(temp[2]);//输出：兰\n            //Enum->int\n            int intValue = Convert.ToInt32(MyColor.兰);\n            Console.WriteLine(intValue);//输出：2\n            Console.Read();\n\n        }\n    }\n\n    public enum MyColor\n    {\n        红, 黄, 兰, 黑, 白, 橙, 紫\n    }\n}\n\n\n```","slug":"枚举使用备忘","published":1,"updated":"2018-05-30T07:33:11.927Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayys002gocm7epicplto","content":"<a id=\"more\"></a>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Enum为枚举提供基类，其基础类型可以是除 Char 外的任何整型。如果没有显式声明基础类型，则使用Int32。编程语言通常提供语法来声明由一组已命名的常数和它们的值组成的枚举。<br>注意：枚举类型的基类型是除 Char 外的任何整型，所以枚举类型的值是整型值。</p>\n<p>Enum 提供一些实用的静态方法：</p>\n<p>(1)比较枚举类的实例的方法</p>\n<p>(2)将实例的值转换为其字符串表示形式的方法</p>\n<p>(3)将数字的字符串表示形式转换为此类的实例的方法</p>\n<p>(4)创建指定枚举和值的实例的方法。</p>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><p><strong>常用的就是将枚举按照字符串输出展示与枚举值（整形）保存到数据库。</strong><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> EnumDemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"built_in\">string</span>[] temp = System.Enum.GetNames(<span class=\"keyword\">new</span> MyColor().GetType());<span class=\"comment\">//获得枚举数组</span></div><div class=\"line\">            <span class=\"comment\">//Enum-&gt;string</span></div><div class=\"line\">            Console.WriteLine(MyColor.兰.ToString());<span class=\"comment\">//输出：兰</span></div><div class=\"line\">            Console.WriteLine(Enum.GetName(typeof(MyColor), <span class=\"number\">2</span>));<span class=\"comment\">//按照下标获得指定枚举，输出：兰</span></div><div class=\"line\">            Console.WriteLine(temp[<span class=\"number\">2</span>]);<span class=\"comment\">//输出：兰</span></div><div class=\"line\">            <span class=\"comment\">//Enum-&gt;int</span></div><div class=\"line\">            <span class=\"keyword\">int</span> intValue = Convert.ToInt32(MyColor.兰);</div><div class=\"line\">            Console.WriteLine(intValue);<span class=\"comment\">//输出：2</span></div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> MyColor</div><div class=\"line\">    &#123;</div><div class=\"line\">        红, 黄, 兰, 黑, 白, 橙, 紫</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Enum为枚举提供基类，其基础类型可以是除 Char 外的任何整型。如果没有显式声明基础类型，则使用Int32。编程语言通常提供语法来声明由一组已命名的常数和它们的值组成的枚举。<br>注意：枚举类型的基类型是除 Char 外的任何整型，所以枚举类型的值是整型值。</p>\n<p>Enum 提供一些实用的静态方法：</p>\n<p>(1)比较枚举类的实例的方法</p>\n<p>(2)将实例的值转换为其字符串表示形式的方法</p>\n<p>(3)将数字的字符串表示形式转换为此类的实例的方法</p>\n<p>(4)创建指定枚举和值的实例的方法。</p>\n<h2 id=\"示例代码\"><a href=\"#示例代码\" class=\"headerlink\" title=\"示例代码\"></a>示例代码</h2><p><strong>常用的就是将枚举按照字符串输出展示与枚举值（整形）保存到数据库。</strong><br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> EnumDemo</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"built_in\">string</span>[] temp = System.Enum.GetNames(<span class=\"keyword\">new</span> MyColor().GetType());<span class=\"comment\">//获得枚举数组</span></div><div class=\"line\">            <span class=\"comment\">//Enum-&gt;string</span></div><div class=\"line\">            Console.WriteLine(MyColor.兰.ToString());<span class=\"comment\">//输出：兰</span></div><div class=\"line\">            Console.WriteLine(Enum.GetName(typeof(MyColor), <span class=\"number\">2</span>));<span class=\"comment\">//按照下标获得指定枚举，输出：兰</span></div><div class=\"line\">            Console.WriteLine(temp[<span class=\"number\">2</span>]);<span class=\"comment\">//输出：兰</span></div><div class=\"line\">            <span class=\"comment\">//Enum-&gt;int</span></div><div class=\"line\">            <span class=\"keyword\">int</span> intValue = Convert.ToInt32(MyColor.兰);</div><div class=\"line\">            Console.WriteLine(intValue);<span class=\"comment\">//输出：2</span></div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> MyColor</div><div class=\"line\">    &#123;</div><div class=\"line\">        红, 黄, 兰, 黑, 白, 橙, 紫</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>"},{"title":"ASP.NET 文件上传大小限制","date":"2016-11-15T01:17:24.000Z","+description":"文件上传由于大小报错","_content":"\n1、主要有两个地方需要配置，\nhttpRuntime节点 maxRequestLength 最大请求长度 byte\nrequestLimits节点 maxAllowedContentLength 最大上传文件长度 byte\n这两个值需要设置为一致，IIS7 最大支持2GB 即2147483647B\n\n``` bash\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <connectionStrings configSource=\"XmlConfig\\database.config\" />\n  <appSettings configSource=\"XmlConfig\\system.config\" />\n  <system.web>\n    <!-- 文件上传 允许请求的最大长度 单位byte 默认4096KB-->\n    <httpRuntime requestValidationMode=\"2.0\" requestLengthDiskThreshold=\"256\" \n                 maxRequestLength=\"2147483647\" executionTimeout=\"1800\"/>\n  </system.web>\n  <system.webServer>\n    <modules runAllManagedModulesForAllRequests=\"true\" />\n    <security>\n      <requestFiltering>\n        <!--上传文件大小限制单位字节 byte 最大不超过2G-->\n        <requestLimits maxQueryString=\"2147483647\"  maxAllowedContentLength=\"2147483647\"/>\n      </requestFiltering>\n    </security>\n  </system.webServer>\n</configuration>\n```\n","source":"_posts/文件上传大小限制.md","raw":"---\ntitle: ASP.NET 文件上传大小限制\ndate: 2016-11-15 09:17:24\ntags:\n- ASP.NET\ncategories:\n- C#基础\n+description: \"文件上传由于大小报错\"\n---\n\n1、主要有两个地方需要配置，\nhttpRuntime节点 maxRequestLength 最大请求长度 byte\nrequestLimits节点 maxAllowedContentLength 最大上传文件长度 byte\n这两个值需要设置为一致，IIS7 最大支持2GB 即2147483647B\n\n``` bash\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<configuration>\n  <connectionStrings configSource=\"XmlConfig\\database.config\" />\n  <appSettings configSource=\"XmlConfig\\system.config\" />\n  <system.web>\n    <!-- 文件上传 允许请求的最大长度 单位byte 默认4096KB-->\n    <httpRuntime requestValidationMode=\"2.0\" requestLengthDiskThreshold=\"256\" \n                 maxRequestLength=\"2147483647\" executionTimeout=\"1800\"/>\n  </system.web>\n  <system.webServer>\n    <modules runAllManagedModulesForAllRequests=\"true\" />\n    <security>\n      <requestFiltering>\n        <!--上传文件大小限制单位字节 byte 最大不超过2G-->\n        <requestLimits maxQueryString=\"2147483647\"  maxAllowedContentLength=\"2147483647\"/>\n      </requestFiltering>\n    </security>\n  </system.webServer>\n</configuration>\n```\n","slug":"文件上传大小限制","published":1,"updated":"2018-06-19T06:01:28.188Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayyv002jocm70y968pmm","content":"<p>1、主要有两个地方需要配置，<br>httpRuntime节点 maxRequestLength 最大请求长度 byte<br>requestLimits节点 maxAllowedContentLength 最大上传文件长度 byte<br>这两个值需要设置为一致，IIS7 最大支持2GB 即2147483647B</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span>?&gt;</div><div class=\"line\">&lt;configuration&gt;</div><div class=\"line\">  &lt;connectionStrings configSource=<span class=\"string\">\"XmlConfig\\database.config\"</span> /&gt;</div><div class=\"line\">  &lt;appSettings configSource=<span class=\"string\">\"XmlConfig\\system.config\"</span> /&gt;</div><div class=\"line\">  &lt;system.web&gt;</div><div class=\"line\">    &lt;!-- 文件上传 允许请求的最大长度 单位byte 默认4096KB--&gt;</div><div class=\"line\">    &lt;httpRuntime requestValidationMode=<span class=\"string\">\"2.0\"</span> requestLengthDiskThreshold=<span class=\"string\">\"256\"</span> </div><div class=\"line\">                 maxRequestLength=<span class=\"string\">\"2147483647\"</span> executionTimeout=<span class=\"string\">\"1800\"</span>/&gt;</div><div class=\"line\">  &lt;/system.web&gt;</div><div class=\"line\">  &lt;system.webServer&gt;</div><div class=\"line\">    &lt;modules runAllManagedModulesForAllRequests=<span class=\"string\">\"true\"</span> /&gt;</div><div class=\"line\">    &lt;security&gt;</div><div class=\"line\">      &lt;requestFiltering&gt;</div><div class=\"line\">        &lt;!--上传文件大小限制单位字节 byte 最大不超过2G--&gt;</div><div class=\"line\">        &lt;requestLimits maxQueryString=<span class=\"string\">\"2147483647\"</span>  maxAllowedContentLength=<span class=\"string\">\"2147483647\"</span>/&gt;</div><div class=\"line\">      &lt;/requestFiltering&gt;</div><div class=\"line\">    &lt;/security&gt;</div><div class=\"line\">  &lt;/system.webServer&gt;</div><div class=\"line\">&lt;/configuration&gt;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>1、主要有两个地方需要配置，<br>httpRuntime节点 maxRequestLength 最大请求长度 byte<br>requestLimits节点 maxAllowedContentLength 最大上传文件长度 byte<br>这两个值需要设置为一致，IIS7 最大支持2GB 即2147483647B</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span>?&gt;</div><div class=\"line\">&lt;configuration&gt;</div><div class=\"line\">  &lt;connectionStrings configSource=<span class=\"string\">\"XmlConfig\\database.config\"</span> /&gt;</div><div class=\"line\">  &lt;appSettings configSource=<span class=\"string\">\"XmlConfig\\system.config\"</span> /&gt;</div><div class=\"line\">  &lt;system.web&gt;</div><div class=\"line\">    &lt;!-- 文件上传 允许请求的最大长度 单位byte 默认4096KB--&gt;</div><div class=\"line\">    &lt;httpRuntime requestValidationMode=<span class=\"string\">\"2.0\"</span> requestLengthDiskThreshold=<span class=\"string\">\"256\"</span> </div><div class=\"line\">                 maxRequestLength=<span class=\"string\">\"2147483647\"</span> executionTimeout=<span class=\"string\">\"1800\"</span>/&gt;</div><div class=\"line\">  &lt;/system.web&gt;</div><div class=\"line\">  &lt;system.webServer&gt;</div><div class=\"line\">    &lt;modules runAllManagedModulesForAllRequests=<span class=\"string\">\"true\"</span> /&gt;</div><div class=\"line\">    &lt;security&gt;</div><div class=\"line\">      &lt;requestFiltering&gt;</div><div class=\"line\">        &lt;!--上传文件大小限制单位字节 byte 最大不超过2G--&gt;</div><div class=\"line\">        &lt;requestLimits maxQueryString=<span class=\"string\">\"2147483647\"</span>  maxAllowedContentLength=<span class=\"string\">\"2147483647\"</span>/&gt;</div><div class=\"line\">      &lt;/requestFiltering&gt;</div><div class=\"line\">    &lt;/security&gt;</div><div class=\"line\">  &lt;/system.webServer&gt;</div><div class=\"line\">&lt;/configuration&gt;</div></pre></td></tr></table></figure>\n"},{"title":"流操作","date":"2017-08-18T01:38:39.000Z","_content":"  C#常用流操作\n\n文件流 [FileStream][FileStream] \n流读取器 [StreamReader][StreamReader]\n流写入器 [StreamWriter][StreamWriter]\n\n\n<!--more-->\n\n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.IO;\n\nnamespace FileStreamStudy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // 文件流和读取写入器操作完后，需要调用close()方法进行关闭\n            //读文件流\n            using (FileStream stream = new FileStream(\"D:\\\\license.xml\", FileMode.OpenOrCreate))//文件地址，文件读取模式FileMode枚举类\n            {\n                //流读取器\n                using (StreamReader reader = new StreamReader(stream))\n                {\n                    string currentLine = reader.ReadLine();//读取一行\n                    while (!string.IsNullOrEmpty(currentLine))\n                    {\n                        Console.WriteLine(currentLine);\n                        currentLine = reader.ReadLine();\n                    }\n                }\n            }\n            //写文件流\n            using (FileStream stream = new FileStream(\"d:\\\\1.txt\", FileMode.Append))\n            {\n                //流写入器\n                using (StreamWriter writer = new StreamWriter(stream))\n                {\n                    string s = \"12345\";\n                    writer.WriteLine(s);\n                    writer.Flush();//清空缓存\n                }\n            }\n            Console.Read();\n\n        }\n    }\n}\n\n```\n\n[FileStream]:https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&l=ZH-CN&k=k(System.IO.FileStream);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&rd=true\n[StreamReader]:https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&l=ZH-CN&k=k(System.IO.StreamReader);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&rd=true\n[StreamWriter]:https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&l=ZH-CN&k=k(System.IO.StreamWriter);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&rd=true","source":"_posts/流操作.md","raw":"---\ntitle: 流操作\ndate: 2017-08-18 09:38:39\ncategories:\n- C#基础\n---\n  C#常用流操作\n\n文件流 [FileStream][FileStream] \n流读取器 [StreamReader][StreamReader]\n流写入器 [StreamWriter][StreamWriter]\n\n\n<!--more-->\n\n```C\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.IO;\n\nnamespace FileStreamStudy\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            // 文件流和读取写入器操作完后，需要调用close()方法进行关闭\n            //读文件流\n            using (FileStream stream = new FileStream(\"D:\\\\license.xml\", FileMode.OpenOrCreate))//文件地址，文件读取模式FileMode枚举类\n            {\n                //流读取器\n                using (StreamReader reader = new StreamReader(stream))\n                {\n                    string currentLine = reader.ReadLine();//读取一行\n                    while (!string.IsNullOrEmpty(currentLine))\n                    {\n                        Console.WriteLine(currentLine);\n                        currentLine = reader.ReadLine();\n                    }\n                }\n            }\n            //写文件流\n            using (FileStream stream = new FileStream(\"d:\\\\1.txt\", FileMode.Append))\n            {\n                //流写入器\n                using (StreamWriter writer = new StreamWriter(stream))\n                {\n                    string s = \"12345\";\n                    writer.WriteLine(s);\n                    writer.Flush();//清空缓存\n                }\n            }\n            Console.Read();\n\n        }\n    }\n}\n\n```\n\n[FileStream]:https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&l=ZH-CN&k=k(System.IO.FileStream);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&rd=true\n[StreamReader]:https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&l=ZH-CN&k=k(System.IO.StreamReader);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&rd=true\n[StreamWriter]:https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&l=ZH-CN&k=k(System.IO.StreamWriter);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&rd=true","slug":"流操作","published":1,"updated":"2018-01-11T01:47:53.714Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayz1002mocm7revbvibr","content":"<p>  C#常用流操作</p>\n<p>文件流 <a href=\"https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&amp;l=ZH-CN&amp;k=k(System.IO.FileStream);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&amp;rd=true\" target=\"_blank\" rel=\"external\">FileStream</a><br>流读取器 <a href=\"https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&amp;l=ZH-CN&amp;k=k(System.IO.StreamReader);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&amp;rd=true\" target=\"_blank\" rel=\"external\">StreamReader</a><br>流写入器 <a href=\"https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&amp;l=ZH-CN&amp;k=k(System.IO.StreamWriter);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&amp;rd=true\" target=\"_blank\" rel=\"external\">StreamWriter</a></p>\n<a id=\"more\"></a>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> FileStreamStudy</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></span></div><div class=\"line\">        &#123;</div><div class=\"line\">            <span class=\"comment\">// 文件流和读取写入器操作完后，需要调用close()方法进行关闭</span></div><div class=\"line\">            <span class=\"comment\">//读文件流</span></div><div class=\"line\">            <span class=\"keyword\">using</span> (FileStream stream = <span class=\"keyword\">new</span> FileStream(<span class=\"string\">\"D:\\\\license.xml\"</span>, FileMode.OpenOrCreate))<span class=\"comment\">//文件地址，文件读取模式FileMode枚举类</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//流读取器</span></div><div class=\"line\">                <span class=\"keyword\">using</span> (StreamReader reader = <span class=\"keyword\">new</span> StreamReader(stream))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> currentLine = reader.ReadLine();<span class=\"comment\">//读取一行</span></div><div class=\"line\">                    <span class=\"keyword\">while</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(currentLine))</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        Console.WriteLine(currentLine);</div><div class=\"line\">                        currentLine = reader.ReadLine();</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">//写文件流</span></div><div class=\"line\">            <span class=\"keyword\">using</span> (FileStream stream = <span class=\"keyword\">new</span> FileStream(<span class=\"string\">\"d:\\\\1.txt\"</span>, FileMode.Append))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//流写入器</span></div><div class=\"line\">                <span class=\"keyword\">using</span> (StreamWriter writer = <span class=\"keyword\">new</span> StreamWriter(stream))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> s = <span class=\"string\">\"12345\"</span>;</div><div class=\"line\">                    writer.WriteLine(s);</div><div class=\"line\">                    writer.Flush();<span class=\"comment\">//清空缓存</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"<p>  C#常用流操作</p>\n<p>文件流 <a href=\"https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&amp;l=ZH-CN&amp;k=k(System.IO.FileStream);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&amp;rd=true\">FileStream</a><br>流读取器 <a href=\"https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&amp;l=ZH-CN&amp;k=k(System.IO.StreamReader);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&amp;rd=true\">StreamReader</a><br>流写入器 <a href=\"https://msdn.microsoft.com/query/dev12.query?appId=Dev12IDEF1&amp;l=ZH-CN&amp;k=k(System.IO.StreamWriter);k(TargetFrameworkMoniker-.NETFramework,Version%3Dv4.5);k(DevLang-csharp)&amp;rd=true\">StreamWriter</a></p>","more":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">using</span> System;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Linq;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Text;</div><div class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</div><div class=\"line\"><span class=\"keyword\">using</span> System.IO;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">namespace</span> FileStreamStudy</div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">class</span> Program</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span><span class=\"params\">(<span class=\"built_in\">string</span>[] args)</span></div><div class=\"line\">        </span>&#123;</div><div class=\"line\">            <span class=\"comment\">// 文件流和读取写入器操作完后，需要调用close()方法进行关闭</span></div><div class=\"line\">            <span class=\"comment\">//读文件流</span></div><div class=\"line\">            <span class=\"keyword\">using</span> (FileStream stream = <span class=\"keyword\">new</span> FileStream(<span class=\"string\">\"D:\\\\license.xml\"</span>, FileMode.OpenOrCreate))<span class=\"comment\">//文件地址，文件读取模式FileMode枚举类</span></div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//流读取器</span></div><div class=\"line\">                <span class=\"keyword\">using</span> (StreamReader reader = <span class=\"keyword\">new</span> StreamReader(stream))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> currentLine = reader.ReadLine();<span class=\"comment\">//读取一行</span></div><div class=\"line\">                    <span class=\"keyword\">while</span> (!<span class=\"built_in\">string</span>.IsNullOrEmpty(currentLine))</div><div class=\"line\">                    &#123;</div><div class=\"line\">                        Console.WriteLine(currentLine);</div><div class=\"line\">                        currentLine = reader.ReadLine();</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"comment\">//写文件流</span></div><div class=\"line\">            <span class=\"keyword\">using</span> (FileStream stream = <span class=\"keyword\">new</span> FileStream(<span class=\"string\">\"d:\\\\1.txt\"</span>, FileMode.Append))</div><div class=\"line\">            &#123;</div><div class=\"line\">                <span class=\"comment\">//流写入器</span></div><div class=\"line\">                <span class=\"keyword\">using</span> (StreamWriter writer = <span class=\"keyword\">new</span> StreamWriter(stream))</div><div class=\"line\">                &#123;</div><div class=\"line\">                    <span class=\"built_in\">string</span> s = <span class=\"string\">\"12345\"</span>;</div><div class=\"line\">                    writer.WriteLine(s);</div><div class=\"line\">                    writer.Flush();<span class=\"comment\">//清空缓存</span></div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">            Console.Read();</div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>"},{"title":"FireFox右键菜单兼容","date":"2016-10-14T12:58:34.000Z","_content":"# Firefox Event与 IE window Event兼容\n\n------\n在系统开发中，需要用户操作鼠标右键打开菜单时，IE直接通过使用window.event来获得对象的事件而火狐浏览器则使用触发方法中的event来获得，为了同时兼容，最后需要标准化事件对象。即：var evt=evt || event \n```html\n <script>\n    $(function(){\n         $(element).bind(\"contextmenu\", function (evt) {\n            //设置弹出框对象高度宽度\n            //获取的这个ID为obj的DIV对象就是个实例引起鼠标事件的元素\n            //evt代表事件对象（W3C DOM标准下）\n            var evt=evt || event; //标准化事件对象（W3C DOM 和IE DOM ）\n            evt.Target=evt.Target || evt.srcElement;//标准化事件对象属性<引起事件的元素>\n            //（W3C DOM 和IE DOM ）\n            evt.layerX=evt.layerX || evt.offsetX;//鼠标相对于引起事件的元素的父元素的X坐标(标准化IE)\n            evt.layerY=evt.layerY || evt.offsetY;//鼠标相对于引起事件的元素的父元素的Y坐标(标准化IE)\n            alert(\"相对这个DIV的X方向的坐标\"+evt.layerX+\"\\n相对这个DIV的Y方向的坐标\"+evt.layerY)\n        }\n    });\n </script>\n```\n```html\n //自定义右键菜单\n                jQuery(tabControl_tab_ul).bind(\"contextmenu\", function (e) {\n                    var event = e || window.event;//e表示火狐事件，window.event表示chrome或IE事件\n\t\t    var oMenu = jQuery('.rightMenu');//右键要显示的菜单\n                    oMenu.show();\n                    oMenu.css('top', event.clientY + \"px\");\n                    oMenu.css('left', event.clientX + \"px\");\n                    window.setTimeout(function () {\n                        oMenu.hide();//延时2秒后自动关闭\n                    }, 10000);\n\n                    return false;\n                }).bind(\"click\", function () {\n                    oMenu.hide();//单击后关闭\n                });\n```\n\n","source":"_posts/浏览器兼容.md","raw":"---\ntitle: FireFox右键菜单兼容\ndate: 2016-10-14 20:58:34\ncategories: \n- 前端基础\ntags:\n- 浏览器兼容\n---\n# Firefox Event与 IE window Event兼容\n\n------\n在系统开发中，需要用户操作鼠标右键打开菜单时，IE直接通过使用window.event来获得对象的事件而火狐浏览器则使用触发方法中的event来获得，为了同时兼容，最后需要标准化事件对象。即：var evt=evt || event \n```html\n <script>\n    $(function(){\n         $(element).bind(\"contextmenu\", function (evt) {\n            //设置弹出框对象高度宽度\n            //获取的这个ID为obj的DIV对象就是个实例引起鼠标事件的元素\n            //evt代表事件对象（W3C DOM标准下）\n            var evt=evt || event; //标准化事件对象（W3C DOM 和IE DOM ）\n            evt.Target=evt.Target || evt.srcElement;//标准化事件对象属性<引起事件的元素>\n            //（W3C DOM 和IE DOM ）\n            evt.layerX=evt.layerX || evt.offsetX;//鼠标相对于引起事件的元素的父元素的X坐标(标准化IE)\n            evt.layerY=evt.layerY || evt.offsetY;//鼠标相对于引起事件的元素的父元素的Y坐标(标准化IE)\n            alert(\"相对这个DIV的X方向的坐标\"+evt.layerX+\"\\n相对这个DIV的Y方向的坐标\"+evt.layerY)\n        }\n    });\n </script>\n```\n```html\n //自定义右键菜单\n                jQuery(tabControl_tab_ul).bind(\"contextmenu\", function (e) {\n                    var event = e || window.event;//e表示火狐事件，window.event表示chrome或IE事件\n\t\t    var oMenu = jQuery('.rightMenu');//右键要显示的菜单\n                    oMenu.show();\n                    oMenu.css('top', event.clientY + \"px\");\n                    oMenu.css('left', event.clientX + \"px\");\n                    window.setTimeout(function () {\n                        oMenu.hide();//延时2秒后自动关闭\n                    }, 10000);\n\n                    return false;\n                }).bind(\"click\", function () {\n                    oMenu.hide();//单击后关闭\n                });\n```\n\n","slug":"浏览器兼容","published":1,"updated":"2018-01-11T01:55:56.507Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayz3002qocm7gi3852jj","content":"<h1 id=\"Firefox-Event与-IE-window-Event兼容\"><a href=\"#Firefox-Event与-IE-window-Event兼容\" class=\"headerlink\" title=\"Firefox Event与 IE window Event兼容\"></a>Firefox Event与 IE window Event兼容</h1><hr>\n<p>在系统开发中，需要用户操作鼠标右键打开菜单时，IE直接通过使用window.event来获得对象的事件而火狐浏览器则使用触发方法中的event来获得，为了同时兼容，最后需要标准化事件对象。即：var evt=evt || event<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></span></div><div class=\"line\">   $(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        $(element).bind(<span class=\"string\">\"contextmenu\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">evt</span>) </span>&#123;</div><div class=\"line\">           <span class=\"comment\">//设置弹出框对象高度宽度</span></div><div class=\"line\">           <span class=\"comment\">//获取的这个ID为obj的DIV对象就是个实例引起鼠标事件的元素</span></div><div class=\"line\">           <span class=\"comment\">//evt代表事件对象（W3C DOM标准下）</span></div><div class=\"line\">           <span class=\"keyword\">var</span> evt=evt || event; <span class=\"comment\">//标准化事件对象（W3C DOM 和IE DOM ）</span></div><div class=\"line\">           evt.Target=evt.Target || evt.srcElement;<span class=\"comment\">//标准化事件对象属性&lt;引起事件的元素&gt;</span></div><div class=\"line\">           <span class=\"comment\">//（W3C DOM 和IE DOM ）</span></div><div class=\"line\">           evt.layerX=evt.layerX || evt.offsetX;<span class=\"comment\">//鼠标相对于引起事件的元素的父元素的X坐标(标准化IE)</span></div><div class=\"line\">           evt.layerY=evt.layerY || evt.offsetY;<span class=\"comment\">//鼠标相对于引起事件的元素的父元素的Y坐标(标准化IE)</span></div><div class=\"line\">           alert(<span class=\"string\">\"相对这个DIV的X方向的坐标\"</span>+evt.layerX+<span class=\"string\">\"\\n相对这个DIV的Y方向的坐标\"</span>+evt.layerY)</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;);</div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">//自定义右键菜单</div><div class=\"line\">               jQuery(tabControl_tab_ul).bind(\"contextmenu\", function (e) &#123;</div><div class=\"line\">                   var event = e || window.event;//e表示火狐事件，window.event表示chrome或IE事件</div><div class=\"line\">\t    var oMenu = jQuery('.rightMenu');//右键要显示的菜单</div><div class=\"line\">                   oMenu.show();</div><div class=\"line\">                   oMenu.css('top', event.clientY + \"px\");</div><div class=\"line\">                   oMenu.css('left', event.clientX + \"px\");</div><div class=\"line\">                   window.setTimeout(function () &#123;</div><div class=\"line\">                       oMenu.hide();//延时2秒后自动关闭</div><div class=\"line\">                   &#125;, 10000);</div><div class=\"line\"></div><div class=\"line\">                   return false;</div><div class=\"line\">               &#125;).bind(\"click\", function () &#123;</div><div class=\"line\">                   oMenu.hide();//单击后关闭</div><div class=\"line\">               &#125;);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h1 id=\"Firefox-Event与-IE-window-Event兼容\"><a href=\"#Firefox-Event与-IE-window-Event兼容\" class=\"headerlink\" title=\"Firefox Event与 IE window Event兼容\"></a>Firefox Event与 IE window Event兼容</h1><hr>\n<p>在系统开发中，需要用户操作鼠标右键打开菜单时，IE直接通过使用window.event来获得对象的事件而火狐浏览器则使用触发方法中的event来获得，为了同时兼容，最后需要标准化事件对象。即：var evt=evt || event<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"javascript\"></div><div class=\"line\">   $(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">        $(element).bind(<span class=\"string\">\"contextmenu\"</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">evt</span>) </span>&#123;</div><div class=\"line\">           <span class=\"comment\">//设置弹出框对象高度宽度</span></div><div class=\"line\">           <span class=\"comment\">//获取的这个ID为obj的DIV对象就是个实例引起鼠标事件的元素</span></div><div class=\"line\">           <span class=\"comment\">//evt代表事件对象（W3C DOM标准下）</span></div><div class=\"line\">           <span class=\"keyword\">var</span> evt=evt || event; <span class=\"comment\">//标准化事件对象（W3C DOM 和IE DOM ）</span></div><div class=\"line\">           evt.Target=evt.Target || evt.srcElement;<span class=\"comment\">//标准化事件对象属性&lt;引起事件的元素&gt;</span></div><div class=\"line\">           <span class=\"comment\">//（W3C DOM 和IE DOM ）</span></div><div class=\"line\">           evt.layerX=evt.layerX || evt.offsetX;<span class=\"comment\">//鼠标相对于引起事件的元素的父元素的X坐标(标准化IE)</span></div><div class=\"line\">           evt.layerY=evt.layerY || evt.offsetY;<span class=\"comment\">//鼠标相对于引起事件的元素的父元素的Y坐标(标准化IE)</span></div><div class=\"line\">           alert(<span class=\"string\">\"相对这个DIV的X方向的坐标\"</span>+evt.layerX+<span class=\"string\">\"\\n相对这个DIV的Y方向的坐标\"</span>+evt.layerY)</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;);</div><div class=\"line\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div></pre></td></tr></table></figure></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">//自定义右键菜单</div><div class=\"line\">               jQuery(tabControl_tab_ul).bind(\"contextmenu\", function (e) &#123;</div><div class=\"line\">                   var event = e || window.event;//e表示火狐事件，window.event表示chrome或IE事件</div><div class=\"line\">\t    var oMenu = jQuery('.rightMenu');//右键要显示的菜单</div><div class=\"line\">                   oMenu.show();</div><div class=\"line\">                   oMenu.css('top', event.clientY + \"px\");</div><div class=\"line\">                   oMenu.css('left', event.clientX + \"px\");</div><div class=\"line\">                   window.setTimeout(function () &#123;</div><div class=\"line\">                       oMenu.hide();//延时2秒后自动关闭</div><div class=\"line\">                   &#125;, 10000);</div><div class=\"line\"></div><div class=\"line\">                   return false;</div><div class=\"line\">               &#125;).bind(\"click\", function () &#123;</div><div class=\"line\">                   oMenu.hide();//单击后关闭</div><div class=\"line\">               &#125;);</div></pre></td></tr></table></figure>\n"},{"title":"百度地图常用功能的使用","date":"2016-09-10T12:56:05.000Z","+description":"项目中用到了百度地图，整理一下常用的方便查阅","_content":"百度地图API使用\n<!--more-->\n# 资料\n1.[JavaScript API](http://lbsyun.baidu.com/index.php?title=jspopular)\n2.[demo](http://developer.baidu.com/map/jsdemo.htm)\n3.[工具开源库](http://developer.baidu.com/map/jsdemo.htm)（如鼠标点击后计算范围、聚合效果等）\n\n# 常用的功能及实现\n## 引入资源包\n引入常用的资源包（引入http://api.map.baidu.com/api?v=2.0&ak=tzAcIFZ5xCoRwm63NcBGfoVB 时ak是自己申请的一个秘钥）\n```html\n <script src=\"http://libs.baidu.com/jquery/2.0.0/jquery.min.js\"></script>\n    <!--jquery-->\n    <!--百度地图-->\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=tzAcIFZ5xCoRwm63NcBGfoVB\"></script>\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js\"></script>\n    <link rel=\"stylesheet\" href=\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css\" />\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.js\"></script>\n    <link rel=\"stylesheet\" href=\"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.css\" />\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/AreaRestriction/1.2/src/AreaRestriction_min.js\"></script>\n    <!--聚合-->\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js\"></script>\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer.js\"></script>\n    <!--聚合-->\n    <!--百度地图-->\n```\n## 初始化地图\n```html\n$(function(){ /*所有js代码放入*/});\n```\n\n## 设置中心点\n创建地图对象设置中心点以及缩放的级别zoom\n```html\n\t// 百度地图API功能\n            var map = new BMap.Map(\"allmap\");    // 创建Map实例\n            /*centerAndZoom(center:Point, zoom:Number)  none 设初始化地图。 \n             <span style=\"color:#ff0000;\"> 如果center类型为Point时，zoom必须赋值，范围3-19级，</span>若调用高清底图（针对移动端开发）时，\n              zoom可赋值范围为3-18级。如果<span style=\"color:#ff0000;\">center类型为字符串时，比如“北京”，zoom可以忽略</span>，地图将自动根据center适配最佳zoom级别。 \n            */\n            //map.centerAndZoom(new BMap.Point(113.195425, 39.657158), 10);  //初始化地图,设置中心点坐标和地图级别\n            map.centerAndZoom(\"北京市\");\n        });\n```\n## 插入缩放定位等控件\n```html\n    var navigationControl = new BMap.NavigationControl({\n\t// 靠左上角位置\n\tanchor: BMAP_ANCHOR_TOP_LEFT,\n\t// LARGE类型\n\ttype: BMAP_NAVIGATION_CONTROL_LARGE,\n\t// 启用显示定位\n\tenableGeolocation: true,\n\tshowZoomInfo: true,\n    });\n    map.addControl(navigationControl);\n\n```\n ![](http://i2.buimg.com/4851/bf4465457e5af658.jpg)\n## 开启滚轮缩放及禁用双击放大\n```html\n   map.enableScrollWheelZoom();     //开启鼠标滚轮缩放\n   map.disableDoubleClickZoom(true);//禁用双击放大。 \n```\n## 限制地图显示区域\n超出显示区域自动修改回限制区域，参数需要两个点的坐标，即限制区域地图的左上角和右下角坐标\n```html\n  //限制区域\n    var b = new BMap.Bounds(new BMap.Point(111.822527, 40.296748), new BMap.Point(114.566024,39.043834));\n    try {\n            BMapLib.AreaRestriction.setBounds(map, b);\n        } catch (e) {\n            alert(e);\n        }\t\n```\n## 添加行政区域（县、区级别）\n```html\n\t\tfunction getBoundary() {\n                var bdary = new BMap.Boundary();\n                bdary.get(\"西安市雁塔区\", function (rs) {       //获取行政区域\n                    map.clearOverlays();        //清除地图覆盖物       \n                    var count = rs.boundaries.length; //行政区域的点有多少个\n                    if (count === 0) {\n                        alert('未能获取当前输入行政区域');\n                        return;\n                    }\n                    var pointArray = [];\n                    for (var i = 0; i < count; i++) {\n                        var ply = new BMap.Polygon(rs.boundaries[i], { strokeWeight: 2, strokeColor: \"#ff0000\" }); //建立多边形覆盖物\n                        map.addOverlay(ply);  //添加覆盖物\n                        pointArray = pointArray.concat(ply.getPath());\n                    }\n                    map.setViewport(pointArray);    //调整视野                 \n                });\n            }\n```\n![](http://i2.buimg.com/4851/4ef2bb7e1d222d65.jpg)\n## 结合后台获得制定区域并画出\n```html\nShowArea();\n            //读取已有区域\n            function ShowArea() {\n\n                $.post(\"Handler.ashx?action=getAreaData\", \"\", function (data, status) {\n                    //var data = eval(dataJSON);\n                    var points = GetPointsArray(data);\n                    var polygon1 = new BMap.Polygon(points, { strokeColor: \"blue\", fillColor: \"#f0979f\", strokeWeight: 2, strokeOpacity: 0.5, fillOpacity: 0.3 });  //创建多边形\n                    map.addOverlay(polygon1);   //增加多边形\n                });\n            }\n            function GetPointsArray(points) {\n                var pointsArray = points.split(\";\");\n                var result = new Array();\n                for (var i = 0; i < pointsArray.length; i++) {\n                    result[i] = new BMap.Point(pointsArray[i].split(\",\")[0], pointsArray[i].split(\",\")[1]);\n                }\n\n                return result;\n            }\n```\n## 后台获得区域（点的集合）\n使用ajax与一般处理程序\n```html\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\n\nnamespace WebApplication3\n{\n    /// <summary>\n    /// Handler 的摘要说明\n    /// </summary>\n    public class Handler : IHttpHandler\n    {\n\n        public void ProcessRequest(HttpContext context)\n        {\n            string action=context.Request[\"action\"];\n            switch(action)\n            {\n                case \"getAreaData\":\n                    GetAreaData(context);\n                    break;\n\n            }\n        }\n\n        public void GetAreaData(HttpContext context)\n        {\n            string s = \"108.860872, 34.258506;108.831975, 34.258587;108.827325, 34.254061;108.82198, 34.253861;108.821721, 34.242147;108.82502, 34.242241;108.825366, 34.235732;108.828081, 34.235904;108.828549, 34.225515;108.841104, 34.22704;108.836877, 34.210519;108.839338, 34.205291;108.852262, 34.206639;108.852829, 34.18584;108.875588, 34.185636;108.875624, 34.177398;108.980798, 34.177959;109.00823, 34.180186;109.022781, 34.185512;109.039102, 34.182088;109.060345, 34.191182;109.053019, 34.212803;109.056843, 34.243072;109.054189, 34.257263;109.033871, 34.257004;109.036981, 34.256214;109.037215, 34.240337;109.027373, 34.240809;109.027372, 34.243714;109.022632, 34.243735;109.02261, 34.248791;109.002924, 34.248887;108.971729, 34.236415;108.938526, 34.235527;108.897292, 34.253332;108.89572, 34.257881;108.860872, 34.258506\";\n            context.Response.Write(s);\n        }\n\n\n        public bool IsReusable\n        {\n            get\n            {\n                return false;\n            }\n        }\n    }\n}\n```\n## 点聚合及批量弹出窗口\n```html\n // 百度地图API功能\n            var map = new BMap.Map(\"allmap\");\n            map.centerAndZoom(new BMap.Point(116.404, 39.915), 4);\n            map.enableScrollWheelZoom();\n\n            var MAX = 10;\n            var markers = [];\n            var pt = null;\n            var i = 0;\n            for (; i < MAX; i++) {\n                pt = new BMap.Point(Math.random() * 40 + 85, Math.random() * 30 + 21);\n                var marker = new BMap.Marker(pt);\n                markers.push(marker);\n                var content1 = '<div style=\"margin:0;line-height:20px;padding:2px;\">内容</div>';\n                markers.push(marker);\n               <span style=\"color:#ff0000;\"> //使用闭包 这样内容才能显示的不同，否则全部都会只显示最后一个content1的内容</span>\n                (function (content1) {\n                    marker.addEventListener(\"click\", function (e) {\n\n                        //创建检索信息窗口对象\n                        var searchInfoWindow = null;\n                        searchInfoWindow = new BMapLib.SearchInfoWindow(map, content1, {\n                            title: '信息<a target=\"_top\" onclick=\"alert(1)\" style=\"margin-left:5px;font-size:12px;line-height:30px;color:#3d6dcc;font-weight:normal;text-decoration:none;cursor:pointer;\">详情»</a>',      //标题\n                            width: 250,             //宽度\n                            height: 200,              //高度\n                            panel: \"panel\",         //检索结果面板\n                            enableAutoPan: true,     //自动平移\n                            enableSendToPhone: false,//百度发送短信图标\n                            searchTypes: [\n                                //BMAPLIB_TAB_SEARCH,   //周边检索\n                                //BMAPLIB_TAB_TO_HERE,  //到这里去\n                                //BMAPLIB_TAB_FROM_HERE //从这里出发\n                            ]\n                        });\n\n                        searchInfoWindow.open(e.target);\n\n                    });\n                })(content1)\n            }\n       \n            //最简单的用法，生成一个marker数组，然后调用markerClusterer类即可。\n            var markerClusterer = new BMapLib.MarkerClusterer(map, { markers: markers });\n```\n![](http://i2.buimg.com/4851/f6830ddc390b1e99.jpg)\n![](http://i2.buimg.com/4851/fad49890bc5afa59.jpg)\n","source":"_posts/百度地图常用功能的使用.md","raw":"---\ntitle: 百度地图常用功能的使用\ndate: 2016-09-10 20:56:05\ntags:\n- 百度地图\n- 地图操作\ncategories:\n- 插件\n+description: \"项目中用到了百度地图，整理一下常用的方便查阅\"\n---\n百度地图API使用\n<!--more-->\n# 资料\n1.[JavaScript API](http://lbsyun.baidu.com/index.php?title=jspopular)\n2.[demo](http://developer.baidu.com/map/jsdemo.htm)\n3.[工具开源库](http://developer.baidu.com/map/jsdemo.htm)（如鼠标点击后计算范围、聚合效果等）\n\n# 常用的功能及实现\n## 引入资源包\n引入常用的资源包（引入http://api.map.baidu.com/api?v=2.0&ak=tzAcIFZ5xCoRwm63NcBGfoVB 时ak是自己申请的一个秘钥）\n```html\n <script src=\"http://libs.baidu.com/jquery/2.0.0/jquery.min.js\"></script>\n    <!--jquery-->\n    <!--百度地图-->\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/api?v=2.0&ak=tzAcIFZ5xCoRwm63NcBGfoVB\"></script>\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js\"></script>\n    <link rel=\"stylesheet\" href=\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css\" />\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.js\"></script>\n    <link rel=\"stylesheet\" href=\"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.css\" />\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/AreaRestriction/1.2/src/AreaRestriction_min.js\"></script>\n    <!--聚合-->\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js\"></script>\n    <script type=\"text/javascript\" src=\"http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer.js\"></script>\n    <!--聚合-->\n    <!--百度地图-->\n```\n## 初始化地图\n```html\n$(function(){ /*所有js代码放入*/});\n```\n\n## 设置中心点\n创建地图对象设置中心点以及缩放的级别zoom\n```html\n\t// 百度地图API功能\n            var map = new BMap.Map(\"allmap\");    // 创建Map实例\n            /*centerAndZoom(center:Point, zoom:Number)  none 设初始化地图。 \n             <span style=\"color:#ff0000;\"> 如果center类型为Point时，zoom必须赋值，范围3-19级，</span>若调用高清底图（针对移动端开发）时，\n              zoom可赋值范围为3-18级。如果<span style=\"color:#ff0000;\">center类型为字符串时，比如“北京”，zoom可以忽略</span>，地图将自动根据center适配最佳zoom级别。 \n            */\n            //map.centerAndZoom(new BMap.Point(113.195425, 39.657158), 10);  //初始化地图,设置中心点坐标和地图级别\n            map.centerAndZoom(\"北京市\");\n        });\n```\n## 插入缩放定位等控件\n```html\n    var navigationControl = new BMap.NavigationControl({\n\t// 靠左上角位置\n\tanchor: BMAP_ANCHOR_TOP_LEFT,\n\t// LARGE类型\n\ttype: BMAP_NAVIGATION_CONTROL_LARGE,\n\t// 启用显示定位\n\tenableGeolocation: true,\n\tshowZoomInfo: true,\n    });\n    map.addControl(navigationControl);\n\n```\n ![](http://i2.buimg.com/4851/bf4465457e5af658.jpg)\n## 开启滚轮缩放及禁用双击放大\n```html\n   map.enableScrollWheelZoom();     //开启鼠标滚轮缩放\n   map.disableDoubleClickZoom(true);//禁用双击放大。 \n```\n## 限制地图显示区域\n超出显示区域自动修改回限制区域，参数需要两个点的坐标，即限制区域地图的左上角和右下角坐标\n```html\n  //限制区域\n    var b = new BMap.Bounds(new BMap.Point(111.822527, 40.296748), new BMap.Point(114.566024,39.043834));\n    try {\n            BMapLib.AreaRestriction.setBounds(map, b);\n        } catch (e) {\n            alert(e);\n        }\t\n```\n## 添加行政区域（县、区级别）\n```html\n\t\tfunction getBoundary() {\n                var bdary = new BMap.Boundary();\n                bdary.get(\"西安市雁塔区\", function (rs) {       //获取行政区域\n                    map.clearOverlays();        //清除地图覆盖物       \n                    var count = rs.boundaries.length; //行政区域的点有多少个\n                    if (count === 0) {\n                        alert('未能获取当前输入行政区域');\n                        return;\n                    }\n                    var pointArray = [];\n                    for (var i = 0; i < count; i++) {\n                        var ply = new BMap.Polygon(rs.boundaries[i], { strokeWeight: 2, strokeColor: \"#ff0000\" }); //建立多边形覆盖物\n                        map.addOverlay(ply);  //添加覆盖物\n                        pointArray = pointArray.concat(ply.getPath());\n                    }\n                    map.setViewport(pointArray);    //调整视野                 \n                });\n            }\n```\n![](http://i2.buimg.com/4851/4ef2bb7e1d222d65.jpg)\n## 结合后台获得制定区域并画出\n```html\nShowArea();\n            //读取已有区域\n            function ShowArea() {\n\n                $.post(\"Handler.ashx?action=getAreaData\", \"\", function (data, status) {\n                    //var data = eval(dataJSON);\n                    var points = GetPointsArray(data);\n                    var polygon1 = new BMap.Polygon(points, { strokeColor: \"blue\", fillColor: \"#f0979f\", strokeWeight: 2, strokeOpacity: 0.5, fillOpacity: 0.3 });  //创建多边形\n                    map.addOverlay(polygon1);   //增加多边形\n                });\n            }\n            function GetPointsArray(points) {\n                var pointsArray = points.split(\";\");\n                var result = new Array();\n                for (var i = 0; i < pointsArray.length; i++) {\n                    result[i] = new BMap.Point(pointsArray[i].split(\",\")[0], pointsArray[i].split(\",\")[1]);\n                }\n\n                return result;\n            }\n```\n## 后台获得区域（点的集合）\n使用ajax与一般处理程序\n```html\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Web;\n\nnamespace WebApplication3\n{\n    /// <summary>\n    /// Handler 的摘要说明\n    /// </summary>\n    public class Handler : IHttpHandler\n    {\n\n        public void ProcessRequest(HttpContext context)\n        {\n            string action=context.Request[\"action\"];\n            switch(action)\n            {\n                case \"getAreaData\":\n                    GetAreaData(context);\n                    break;\n\n            }\n        }\n\n        public void GetAreaData(HttpContext context)\n        {\n            string s = \"108.860872, 34.258506;108.831975, 34.258587;108.827325, 34.254061;108.82198, 34.253861;108.821721, 34.242147;108.82502, 34.242241;108.825366, 34.235732;108.828081, 34.235904;108.828549, 34.225515;108.841104, 34.22704;108.836877, 34.210519;108.839338, 34.205291;108.852262, 34.206639;108.852829, 34.18584;108.875588, 34.185636;108.875624, 34.177398;108.980798, 34.177959;109.00823, 34.180186;109.022781, 34.185512;109.039102, 34.182088;109.060345, 34.191182;109.053019, 34.212803;109.056843, 34.243072;109.054189, 34.257263;109.033871, 34.257004;109.036981, 34.256214;109.037215, 34.240337;109.027373, 34.240809;109.027372, 34.243714;109.022632, 34.243735;109.02261, 34.248791;109.002924, 34.248887;108.971729, 34.236415;108.938526, 34.235527;108.897292, 34.253332;108.89572, 34.257881;108.860872, 34.258506\";\n            context.Response.Write(s);\n        }\n\n\n        public bool IsReusable\n        {\n            get\n            {\n                return false;\n            }\n        }\n    }\n}\n```\n## 点聚合及批量弹出窗口\n```html\n // 百度地图API功能\n            var map = new BMap.Map(\"allmap\");\n            map.centerAndZoom(new BMap.Point(116.404, 39.915), 4);\n            map.enableScrollWheelZoom();\n\n            var MAX = 10;\n            var markers = [];\n            var pt = null;\n            var i = 0;\n            for (; i < MAX; i++) {\n                pt = new BMap.Point(Math.random() * 40 + 85, Math.random() * 30 + 21);\n                var marker = new BMap.Marker(pt);\n                markers.push(marker);\n                var content1 = '<div style=\"margin:0;line-height:20px;padding:2px;\">内容</div>';\n                markers.push(marker);\n               <span style=\"color:#ff0000;\"> //使用闭包 这样内容才能显示的不同，否则全部都会只显示最后一个content1的内容</span>\n                (function (content1) {\n                    marker.addEventListener(\"click\", function (e) {\n\n                        //创建检索信息窗口对象\n                        var searchInfoWindow = null;\n                        searchInfoWindow = new BMapLib.SearchInfoWindow(map, content1, {\n                            title: '信息<a target=\"_top\" onclick=\"alert(1)\" style=\"margin-left:5px;font-size:12px;line-height:30px;color:#3d6dcc;font-weight:normal;text-decoration:none;cursor:pointer;\">详情»</a>',      //标题\n                            width: 250,             //宽度\n                            height: 200,              //高度\n                            panel: \"panel\",         //检索结果面板\n                            enableAutoPan: true,     //自动平移\n                            enableSendToPhone: false,//百度发送短信图标\n                            searchTypes: [\n                                //BMAPLIB_TAB_SEARCH,   //周边检索\n                                //BMAPLIB_TAB_TO_HERE,  //到这里去\n                                //BMAPLIB_TAB_FROM_HERE //从这里出发\n                            ]\n                        });\n\n                        searchInfoWindow.open(e.target);\n\n                    });\n                })(content1)\n            }\n       \n            //最简单的用法，生成一个marker数组，然后调用markerClusterer类即可。\n            var markerClusterer = new BMapLib.MarkerClusterer(map, { markers: markers });\n```\n![](http://i2.buimg.com/4851/f6830ddc390b1e99.jpg)\n![](http://i2.buimg.com/4851/fad49890bc5afa59.jpg)\n","slug":"百度地图常用功能的使用","published":1,"updated":"2018-01-11T01:55:17.323Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayz5002tocm77nglahln","content":"<p>百度地图API使用<br><a id=\"more\"></a></p>\n<h1 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h1><p>1.<a href=\"http://lbsyun.baidu.com/index.php?title=jspopular\" target=\"_blank\" rel=\"external\">JavaScript API</a><br>2.<a href=\"http://developer.baidu.com/map/jsdemo.htm\" target=\"_blank\" rel=\"external\">demo</a><br>3.<a href=\"http://developer.baidu.com/map/jsdemo.htm\" target=\"_blank\" rel=\"external\">工具开源库</a>（如鼠标点击后计算范围、聚合效果等）</p>\n<h1 id=\"常用的功能及实现\"><a href=\"#常用的功能及实现\" class=\"headerlink\" title=\"常用的功能及实现\"></a>常用的功能及实现</h1><h2 id=\"引入资源包\"><a href=\"#引入资源包\" class=\"headerlink\" title=\"引入资源包\"></a>引入资源包</h2><p>引入常用的资源包（引入<a href=\"http://api.map.baidu.com/api?v=2.0&amp;ak=tzAcIFZ5xCoRwm63NcBGfoVB\" target=\"_blank\" rel=\"external\">http://api.map.baidu.com/api?v=2.0&amp;ak=tzAcIFZ5xCoRwm63NcBGfoVB</a> 时ak是自己申请的一个秘钥）<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://libs.baidu.com/jquery/2.0.0/jquery.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--jquery--&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--百度地图--&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/api?v=2.0&amp;ak=tzAcIFZ5xCoRwm63NcBGfoVB\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.css\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/AreaRestriction/1.2/src/AreaRestriction_min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--聚合--&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--聚合--&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--百度地图--&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"初始化地图\"><a href=\"#初始化地图\" class=\"headerlink\" title=\"初始化地图\"></a>初始化地图</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(function()&#123; /*所有js代码放入*/&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"设置中心点\"><a href=\"#设置中心点\" class=\"headerlink\" title=\"设置中心点\"></a>设置中心点</h2><p>创建地图对象设置中心点以及缩放的级别zoom<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 百度地图API功能</div><div class=\"line\">           var map = new BMap.Map(\"allmap\");    // 创建Map实例</div><div class=\"line\">           /*centerAndZoom(center:Point, zoom:Number)  none 设初始化地图。 </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:#ff0000;\"</span>&gt;</span> 如果center类型为Point时，zoom必须赋值，范围3-19级，<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>若调用高清底图（针对移动端开发）时，</div><div class=\"line\">             zoom可赋值范围为3-18级。如果<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:#ff0000;\"</span>&gt;</span>center类型为字符串时，比如“北京”，zoom可以忽略<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>，地图将自动根据center适配最佳zoom级别。 </div><div class=\"line\">           */</div><div class=\"line\">           //map.centerAndZoom(new BMap.Point(113.195425, 39.657158), 10);  //初始化地图,设置中心点坐标和地图级别</div><div class=\"line\">           map.centerAndZoom(\"北京市\");</div><div class=\"line\">       &#125;);</div></pre></td></tr></table></figure></p>\n<h2 id=\"插入缩放定位等控件\"><a href=\"#插入缩放定位等控件\" class=\"headerlink\" title=\"插入缩放定位等控件\"></a>插入缩放定位等控件</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">   var navigationControl = new BMap.NavigationControl(&#123;</div><div class=\"line\">// 靠左上角位置</div><div class=\"line\">anchor: BMAP_ANCHOR_TOP_LEFT,</div><div class=\"line\">// LARGE类型</div><div class=\"line\">type: BMAP_NAVIGATION_CONTROL_LARGE,</div><div class=\"line\">// 启用显示定位</div><div class=\"line\">enableGeolocation: true,</div><div class=\"line\">showZoomInfo: true,</div><div class=\"line\">   &#125;);</div><div class=\"line\">   map.addControl(navigationControl);</div></pre></td></tr></table></figure>\n<p> <img src=\"http://i2.buimg.com/4851/bf4465457e5af658.jpg\" alt=\"\"></p>\n<h2 id=\"开启滚轮缩放及禁用双击放大\"><a href=\"#开启滚轮缩放及禁用双击放大\" class=\"headerlink\" title=\"开启滚轮缩放及禁用双击放大\"></a>开启滚轮缩放及禁用双击放大</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">map.enableScrollWheelZoom();     //开启鼠标滚轮缩放</div><div class=\"line\">map.disableDoubleClickZoom(true);//禁用双击放大。</div></pre></td></tr></table></figure>\n<h2 id=\"限制地图显示区域\"><a href=\"#限制地图显示区域\" class=\"headerlink\" title=\"限制地图显示区域\"></a>限制地图显示区域</h2><p>超出显示区域自动修改回限制区域，参数需要两个点的坐标，即限制区域地图的左上角和右下角坐标<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">//限制区域</div><div class=\"line\">  var b = new BMap.Bounds(new BMap.Point(111.822527, 40.296748), new BMap.Point(114.566024,39.043834));</div><div class=\"line\">  try &#123;</div><div class=\"line\">          BMapLib.AreaRestriction.setBounds(map, b);</div><div class=\"line\">      &#125; catch (e) &#123;</div><div class=\"line\">          alert(e);</div><div class=\"line\">      &#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"添加行政区域（县、区级别）\"><a href=\"#添加行政区域（县、区级别）\" class=\"headerlink\" title=\"添加行政区域（县、区级别）\"></a>添加行政区域（县、区级别）</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">function getBoundary() &#123;</div><div class=\"line\">              var bdary = new BMap.Boundary();</div><div class=\"line\">              bdary.get(\"西安市雁塔区\", function (rs) &#123;       //获取行政区域</div><div class=\"line\">                  map.clearOverlays();        //清除地图覆盖物       </div><div class=\"line\">                  var count = rs.boundaries.length; //行政区域的点有多少个</div><div class=\"line\">                  if (count === 0) &#123;</div><div class=\"line\">                      alert('未能获取当前输入行政区域');</div><div class=\"line\">                      return;</div><div class=\"line\">                  &#125;</div><div class=\"line\">                  var pointArray = [];</div><div class=\"line\">                  for (var i = 0; i <span class=\"tag\">&lt; <span class=\"attr\">count</span>; <span class=\"attr\">i</span>++) &#123;</span></div><div class=\"line\">                      <span class=\"attr\">var</span> <span class=\"attr\">ply</span> = <span class=\"string\">new</span> <span class=\"attr\">BMap.Polygon</span>(<span class=\"attr\">rs.boundaries</span>[<span class=\"attr\">i</span>], &#123; <span class=\"attr\">strokeWeight:</span> <span class=\"attr\">2</span>, <span class=\"attr\">strokeColor:</span> \"#<span class=\"attr\">ff0000</span>\" &#125;); //建立多边形覆盖物</div><div class=\"line\">                      <span class=\"attr\">map.addOverlay</span>(<span class=\"attr\">ply</span>);  //添加覆盖物</div><div class=\"line\">                      <span class=\"attr\">pointArray</span> = <span class=\"string\">pointArray.concat(ply.getPath());</span></div><div class=\"line\">                  &#125;</div><div class=\"line\">                  <span class=\"attr\">map.setViewport</span>(<span class=\"attr\">pointArray</span>);    //调整视野                 </div><div class=\"line\">              &#125;);</div><div class=\"line\">          &#125;</div></pre></td></tr></table></figure>\n<p><img src=\"http://i2.buimg.com/4851/4ef2bb7e1d222d65.jpg\" alt=\"\"></p>\n<h2 id=\"结合后台获得制定区域并画出\"><a href=\"#结合后台获得制定区域并画出\" class=\"headerlink\" title=\"结合后台获得制定区域并画出\"></a>结合后台获得制定区域并画出</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">ShowArea();</div><div class=\"line\">            //读取已有区域</div><div class=\"line\">            function ShowArea() &#123;</div><div class=\"line\"></div><div class=\"line\">                $.post(\"Handler.ashx?action=getAreaData\", \"\", function (data, status) &#123;</div><div class=\"line\">                    //var data = eval(dataJSON);</div><div class=\"line\">                    var points = GetPointsArray(data);</div><div class=\"line\">                    var polygon1 = new BMap.Polygon(points, &#123; strokeColor: \"blue\", fillColor: \"#f0979f\", strokeWeight: 2, strokeOpacity: 0.5, fillOpacity: 0.3 &#125;);  //创建多边形</div><div class=\"line\">                    map.addOverlay(polygon1);   //增加多边形</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            function GetPointsArray(points) &#123;</div><div class=\"line\">                var pointsArray = points.split(\";\");</div><div class=\"line\">                var result = new Array();</div><div class=\"line\">                for (var i = 0; i <span class=\"tag\">&lt; <span class=\"attr\">pointsArray.length</span>; <span class=\"attr\">i</span>++) &#123;</span></div><div class=\"line\">                    <span class=\"attr\">result</span>[<span class=\"attr\">i</span>] = <span class=\"string\">new</span> <span class=\"attr\">BMap.Point</span>(<span class=\"attr\">pointsArray</span>[<span class=\"attr\">i</span>]<span class=\"attr\">.split</span>(\",\")[<span class=\"attr\">0</span>], <span class=\"attr\">pointsArray</span>[<span class=\"attr\">i</span>]<span class=\"attr\">.split</span>(\",\")[<span class=\"attr\">1</span>]);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"attr\">return</span> <span class=\"attr\">result</span>;</div><div class=\"line\">            &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"后台获得区域（点的集合）\"><a href=\"#后台获得区域（点的集合）\" class=\"headerlink\" title=\"后台获得区域（点的集合）\"></a>后台获得区域（点的集合）</h2><p>使用ajax与一般处理程序<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">using System;</div><div class=\"line\">using System.Collections.Generic;</div><div class=\"line\">using System.Linq;</div><div class=\"line\">using System.Web;</div><div class=\"line\"></div><div class=\"line\">namespace WebApplication3</div><div class=\"line\">&#123;</div><div class=\"line\">    /// <span class=\"tag\">&lt;<span class=\"name\">summary</span>&gt;</span></div><div class=\"line\">    /// Handler 的摘要说明</div><div class=\"line\">    /// <span class=\"tag\">&lt;/<span class=\"name\">summary</span>&gt;</span></div><div class=\"line\">    public class Handler : IHttpHandler</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        public void ProcessRequest(HttpContext context)</div><div class=\"line\">        &#123;</div><div class=\"line\">            string action=context.Request[\"action\"];</div><div class=\"line\">            switch(action)</div><div class=\"line\">            &#123;</div><div class=\"line\">                case \"getAreaData\":</div><div class=\"line\">                    GetAreaData(context);</div><div class=\"line\">                    break;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void GetAreaData(HttpContext context)</div><div class=\"line\">        &#123;</div><div class=\"line\">            string s = \"108.860872, 34.258506;108.831975, 34.258587;108.827325, 34.254061;108.82198, 34.253861;108.821721, 34.242147;108.82502, 34.242241;108.825366, 34.235732;108.828081, 34.235904;108.828549, 34.225515;108.841104, 34.22704;108.836877, 34.210519;108.839338, 34.205291;108.852262, 34.206639;108.852829, 34.18584;108.875588, 34.185636;108.875624, 34.177398;108.980798, 34.177959;109.00823, 34.180186;109.022781, 34.185512;109.039102, 34.182088;109.060345, 34.191182;109.053019, 34.212803;109.056843, 34.243072;109.054189, 34.257263;109.033871, 34.257004;109.036981, 34.256214;109.037215, 34.240337;109.027373, 34.240809;109.027372, 34.243714;109.022632, 34.243735;109.02261, 34.248791;109.002924, 34.248887;108.971729, 34.236415;108.938526, 34.235527;108.897292, 34.253332;108.89572, 34.257881;108.860872, 34.258506\";</div><div class=\"line\">            context.Response.Write(s);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        public bool IsReusable</div><div class=\"line\">        &#123;</div><div class=\"line\">            get</div><div class=\"line\">            &#123;</div><div class=\"line\">                return false;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"点聚合及批量弹出窗口\"><a href=\"#点聚合及批量弹出窗口\" class=\"headerlink\" title=\"点聚合及批量弹出窗口\"></a>点聚合及批量弹出窗口</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 百度地图API功能</div><div class=\"line\">           var map = new BMap.Map(\"allmap\");</div><div class=\"line\">           map.centerAndZoom(new BMap.Point(116.404, 39.915), 4);</div><div class=\"line\">           map.enableScrollWheelZoom();</div><div class=\"line\"></div><div class=\"line\">           var MAX = 10;</div><div class=\"line\">           var markers = [];</div><div class=\"line\">           var pt = null;</div><div class=\"line\">           var i = 0;</div><div class=\"line\">           for (; i &lt; MAX; i++) &#123;</div><div class=\"line\">               pt = new BMap.Point(Math.random() * 40 + 85, Math.random() * 30 + 21);</div><div class=\"line\">               var marker = new BMap.Marker(pt);</div><div class=\"line\">               markers.push(marker);</div><div class=\"line\">               var content1 = '&lt;div style=\"margin:0;line-height:20px;padding:2px;\"&gt;内容&lt;/div&gt;';</div><div class=\"line\">               markers.push(marker);</div><div class=\"line\">              &lt;span style=\"color:#ff0000;\"&gt; //使用闭包 这样内容才能显示的不同，否则全部都会只显示最后一个content1的内容&lt;/span&gt;</div><div class=\"line\">               (function (content1) &#123;</div><div class=\"line\">                   marker.addEventListener(\"click\", function (e) &#123;</div><div class=\"line\"></div><div class=\"line\">                       //创建检索信息窗口对象</div><div class=\"line\">                       var searchInfoWindow = null;</div><div class=\"line\">                       searchInfoWindow = new BMapLib.SearchInfoWindow(map, content1, &#123;</div><div class=\"line\">                           title: '信息&lt;a target=\"_top\" onclick=\"alert(1)\" style=\"margin-left:5px;font-size:12px;line-height:30px;color:#3d6dcc;font-weight:normal;text-decoration:none;cursor:pointer;\"&gt;详情»&lt;/a&gt;',      //标题</div><div class=\"line\">                           width: 250,             //宽度</div><div class=\"line\">                           height: 200,              //高度</div><div class=\"line\">                           panel: \"panel\",         //检索结果面板</div><div class=\"line\">                           enableAutoPan: true,     //自动平移</div><div class=\"line\">                           enableSendToPhone: false,//百度发送短信图标</div><div class=\"line\">                           searchTypes: [</div><div class=\"line\">                               //BMAPLIB_TAB_SEARCH,   //周边检索</div><div class=\"line\">                               //BMAPLIB_TAB_TO_HERE,  //到这里去</div><div class=\"line\">                               //BMAPLIB_TAB_FROM_HERE //从这里出发</div><div class=\"line\">                           ]</div><div class=\"line\">                       &#125;);</div><div class=\"line\"></div><div class=\"line\">                       searchInfoWindow.open(e.target);</div><div class=\"line\"></div><div class=\"line\">                   &#125;);</div><div class=\"line\">               &#125;)(content1)</div><div class=\"line\">           &#125;</div><div class=\"line\">      </div><div class=\"line\">           //最简单的用法，生成一个marker数组，然后调用markerClusterer类即可。</div><div class=\"line\">           var markerClusterer = new BMapLib.MarkerClusterer(map, &#123; markers: markers &#125;);</div></pre></td></tr></table></figure>\n<p><img src=\"http://i2.buimg.com/4851/f6830ddc390b1e99.jpg\" alt=\"\"><br><img src=\"http://i2.buimg.com/4851/fad49890bc5afa59.jpg\" alt=\"\"></p>\n","excerpt":"<p>百度地图API使用<br>","more":"</p>\n<h1 id=\"资料\"><a href=\"#资料\" class=\"headerlink\" title=\"资料\"></a>资料</h1><p>1.<a href=\"http://lbsyun.baidu.com/index.php?title=jspopular\">JavaScript API</a><br>2.<a href=\"http://developer.baidu.com/map/jsdemo.htm\">demo</a><br>3.<a href=\"http://developer.baidu.com/map/jsdemo.htm\">工具开源库</a>（如鼠标点击后计算范围、聚合效果等）</p>\n<h1 id=\"常用的功能及实现\"><a href=\"#常用的功能及实现\" class=\"headerlink\" title=\"常用的功能及实现\"></a>常用的功能及实现</h1><h2 id=\"引入资源包\"><a href=\"#引入资源包\" class=\"headerlink\" title=\"引入资源包\"></a>引入资源包</h2><p>引入常用的资源包（引入<a href=\"http://api.map.baidu.com/api?v=2.0&amp;ak=tzAcIFZ5xCoRwm63NcBGfoVB\">http://api.map.baidu.com/api?v=2.0&amp;ak=tzAcIFZ5xCoRwm63NcBGfoVB</a> 时ak是自己申请的一个秘钥）<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://libs.baidu.com/jquery/2.0.0/jquery.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--jquery--&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--百度地图--&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/api?v=2.0&amp;ak=tzAcIFZ5xCoRwm63NcBGfoVB\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.css\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.css\"</span> /&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/AreaRestriction/1.2/src/AreaRestriction_min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--聚合--&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span> <span class=\"attr\">src</span>=<span class=\"string\">\"http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--聚合--&gt;</span></div><div class=\"line\">   <span class=\"comment\">&lt;!--百度地图--&gt;</span></div></pre></td></tr></table></figure></p>\n<h2 id=\"初始化地图\"><a href=\"#初始化地图\" class=\"headerlink\" title=\"初始化地图\"></a>初始化地图</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$(function()&#123; /*所有js代码放入*/&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"设置中心点\"><a href=\"#设置中心点\" class=\"headerlink\" title=\"设置中心点\"></a>设置中心点</h2><p>创建地图对象设置中心点以及缩放的级别zoom<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 百度地图API功能</div><div class=\"line\">           var map = new BMap.Map(\"allmap\");    // 创建Map实例</div><div class=\"line\">           /*centerAndZoom(center:Point, zoom:Number)  none 设初始化地图。 </div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:#ff0000;\"</span>&gt;</span> 如果center类型为Point时，zoom必须赋值，范围3-19级，<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>若调用高清底图（针对移动端开发）时，</div><div class=\"line\">             zoom可赋值范围为3-18级。如果<span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">style</span>=<span class=\"string\">\"color:#ff0000;\"</span>&gt;</span>center类型为字符串时，比如“北京”，zoom可以忽略<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span>，地图将自动根据center适配最佳zoom级别。 </div><div class=\"line\">           */</div><div class=\"line\">           //map.centerAndZoom(new BMap.Point(113.195425, 39.657158), 10);  //初始化地图,设置中心点坐标和地图级别</div><div class=\"line\">           map.centerAndZoom(\"北京市\");</div><div class=\"line\">       &#125;);</div></pre></td></tr></table></figure></p>\n<h2 id=\"插入缩放定位等控件\"><a href=\"#插入缩放定位等控件\" class=\"headerlink\" title=\"插入缩放定位等控件\"></a>插入缩放定位等控件</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">   var navigationControl = new BMap.NavigationControl(&#123;</div><div class=\"line\">// 靠左上角位置</div><div class=\"line\">anchor: BMAP_ANCHOR_TOP_LEFT,</div><div class=\"line\">// LARGE类型</div><div class=\"line\">type: BMAP_NAVIGATION_CONTROL_LARGE,</div><div class=\"line\">// 启用显示定位</div><div class=\"line\">enableGeolocation: true,</div><div class=\"line\">showZoomInfo: true,</div><div class=\"line\">   &#125;);</div><div class=\"line\">   map.addControl(navigationControl);</div></pre></td></tr></table></figure>\n<p> <img src=\"http://i2.buimg.com/4851/bf4465457e5af658.jpg\" alt=\"\"></p>\n<h2 id=\"开启滚轮缩放及禁用双击放大\"><a href=\"#开启滚轮缩放及禁用双击放大\" class=\"headerlink\" title=\"开启滚轮缩放及禁用双击放大\"></a>开启滚轮缩放及禁用双击放大</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">map.enableScrollWheelZoom();     //开启鼠标滚轮缩放</div><div class=\"line\">map.disableDoubleClickZoom(true);//禁用双击放大。</div></pre></td></tr></table></figure>\n<h2 id=\"限制地图显示区域\"><a href=\"#限制地图显示区域\" class=\"headerlink\" title=\"限制地图显示区域\"></a>限制地图显示区域</h2><p>超出显示区域自动修改回限制区域，参数需要两个点的坐标，即限制区域地图的左上角和右下角坐标<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">//限制区域</div><div class=\"line\">  var b = new BMap.Bounds(new BMap.Point(111.822527, 40.296748), new BMap.Point(114.566024,39.043834));</div><div class=\"line\">  try &#123;</div><div class=\"line\">          BMapLib.AreaRestriction.setBounds(map, b);</div><div class=\"line\">      &#125; catch (e) &#123;</div><div class=\"line\">          alert(e);</div><div class=\"line\">      &#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"添加行政区域（县、区级别）\"><a href=\"#添加行政区域（县、区级别）\" class=\"headerlink\" title=\"添加行政区域（县、区级别）\"></a>添加行政区域（县、区级别）</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">function getBoundary() &#123;</div><div class=\"line\">              var bdary = new BMap.Boundary();</div><div class=\"line\">              bdary.get(\"西安市雁塔区\", function (rs) &#123;       //获取行政区域</div><div class=\"line\">                  map.clearOverlays();        //清除地图覆盖物       </div><div class=\"line\">                  var count = rs.boundaries.length; //行政区域的点有多少个</div><div class=\"line\">                  if (count === 0) &#123;</div><div class=\"line\">                      alert('未能获取当前输入行政区域');</div><div class=\"line\">                      return;</div><div class=\"line\">                  &#125;</div><div class=\"line\">                  var pointArray = [];</div><div class=\"line\">                  for (var i = 0; i <span class=\"tag\">&lt; <span class=\"attr\">count</span>; <span class=\"attr\">i</span>++) &#123;</div><div class=\"line\">                      <span class=\"attr\">var</span> <span class=\"attr\">ply</span> = <span class=\"string\">new</span> <span class=\"attr\">BMap.Polygon</span>(<span class=\"attr\">rs.boundaries</span>[<span class=\"attr\">i</span>], &#123; <span class=\"attr\">strokeWeight:</span> <span class=\"attr\">2</span>, <span class=\"attr\">strokeColor:</span> \"#<span class=\"attr\">ff0000</span>\" &#125;); //建立多边形覆盖物</div><div class=\"line\">                      <span class=\"attr\">map.addOverlay</span>(<span class=\"attr\">ply</span>);  //添加覆盖物</div><div class=\"line\">                      <span class=\"attr\">pointArray</span> = <span class=\"string\">pointArray.concat(ply.getPath());</span></div><div class=\"line\">                  &#125;</div><div class=\"line\">                  <span class=\"attr\">map.setViewport</span>(<span class=\"attr\">pointArray</span>);    //调整视野                 </div><div class=\"line\">              &#125;);</div><div class=\"line\">          &#125;</span></div></pre></td></tr></table></figure>\n<p><img src=\"http://i2.buimg.com/4851/4ef2bb7e1d222d65.jpg\" alt=\"\"></p>\n<h2 id=\"结合后台获得制定区域并画出\"><a href=\"#结合后台获得制定区域并画出\" class=\"headerlink\" title=\"结合后台获得制定区域并画出\"></a>结合后台获得制定区域并画出</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">ShowArea();</div><div class=\"line\">            //读取已有区域</div><div class=\"line\">            function ShowArea() &#123;</div><div class=\"line\"></div><div class=\"line\">                $.post(\"Handler.ashx?action=getAreaData\", \"\", function (data, status) &#123;</div><div class=\"line\">                    //var data = eval(dataJSON);</div><div class=\"line\">                    var points = GetPointsArray(data);</div><div class=\"line\">                    var polygon1 = new BMap.Polygon(points, &#123; strokeColor: \"blue\", fillColor: \"#f0979f\", strokeWeight: 2, strokeOpacity: 0.5, fillOpacity: 0.3 &#125;);  //创建多边形</div><div class=\"line\">                    map.addOverlay(polygon1);   //增加多边形</div><div class=\"line\">                &#125;);</div><div class=\"line\">            &#125;</div><div class=\"line\">            function GetPointsArray(points) &#123;</div><div class=\"line\">                var pointsArray = points.split(\";\");</div><div class=\"line\">                var result = new Array();</div><div class=\"line\">                for (var i = 0; i <span class=\"tag\">&lt; <span class=\"attr\">pointsArray.length</span>; <span class=\"attr\">i</span>++) &#123;</div><div class=\"line\">                    <span class=\"attr\">result</span>[<span class=\"attr\">i</span>] = <span class=\"string\">new</span> <span class=\"attr\">BMap.Point</span>(<span class=\"attr\">pointsArray</span>[<span class=\"attr\">i</span>]<span class=\"attr\">.split</span>(\",\")[<span class=\"attr\">0</span>], <span class=\"attr\">pointsArray</span>[<span class=\"attr\">i</span>]<span class=\"attr\">.split</span>(\",\")[<span class=\"attr\">1</span>]);</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"attr\">return</span> <span class=\"attr\">result</span>;</div><div class=\"line\">            &#125;</span></div></pre></td></tr></table></figure>\n<h2 id=\"后台获得区域（点的集合）\"><a href=\"#后台获得区域（点的集合）\" class=\"headerlink\" title=\"后台获得区域（点的集合）\"></a>后台获得区域（点的集合）</h2><p>使用ajax与一般处理程序<br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div></pre></td><td class=\"code\"><pre><div class=\"line\">using System;</div><div class=\"line\">using System.Collections.Generic;</div><div class=\"line\">using System.Linq;</div><div class=\"line\">using System.Web;</div><div class=\"line\"></div><div class=\"line\">namespace WebApplication3</div><div class=\"line\">&#123;</div><div class=\"line\">    /// <span class=\"tag\">&lt;<span class=\"name\">summary</span>&gt;</span></div><div class=\"line\">    /// Handler 的摘要说明</div><div class=\"line\">    /// <span class=\"tag\">&lt;/<span class=\"name\">summary</span>&gt;</span></div><div class=\"line\">    public class Handler : IHttpHandler</div><div class=\"line\">    &#123;</div><div class=\"line\"></div><div class=\"line\">        public void ProcessRequest(HttpContext context)</div><div class=\"line\">        &#123;</div><div class=\"line\">            string action=context.Request[\"action\"];</div><div class=\"line\">            switch(action)</div><div class=\"line\">            &#123;</div><div class=\"line\">                case \"getAreaData\":</div><div class=\"line\">                    GetAreaData(context);</div><div class=\"line\">                    break;</div><div class=\"line\"></div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        public void GetAreaData(HttpContext context)</div><div class=\"line\">        &#123;</div><div class=\"line\">            string s = \"108.860872, 34.258506;108.831975, 34.258587;108.827325, 34.254061;108.82198, 34.253861;108.821721, 34.242147;108.82502, 34.242241;108.825366, 34.235732;108.828081, 34.235904;108.828549, 34.225515;108.841104, 34.22704;108.836877, 34.210519;108.839338, 34.205291;108.852262, 34.206639;108.852829, 34.18584;108.875588, 34.185636;108.875624, 34.177398;108.980798, 34.177959;109.00823, 34.180186;109.022781, 34.185512;109.039102, 34.182088;109.060345, 34.191182;109.053019, 34.212803;109.056843, 34.243072;109.054189, 34.257263;109.033871, 34.257004;109.036981, 34.256214;109.037215, 34.240337;109.027373, 34.240809;109.027372, 34.243714;109.022632, 34.243735;109.02261, 34.248791;109.002924, 34.248887;108.971729, 34.236415;108.938526, 34.235527;108.897292, 34.253332;108.89572, 34.257881;108.860872, 34.258506\";</div><div class=\"line\">            context.Response.Write(s);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">        public bool IsReusable</div><div class=\"line\">        &#123;</div><div class=\"line\">            get</div><div class=\"line\">            &#123;</div><div class=\"line\">                return false;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"点聚合及批量弹出窗口\"><a href=\"#点聚合及批量弹出窗口\" class=\"headerlink\" title=\"点聚合及批量弹出窗口\"></a>点聚合及批量弹出窗口</h2><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div></pre></td><td class=\"code\"><pre><div class=\"line\">// 百度地图API功能</div><div class=\"line\">           var map = new BMap.Map(\"allmap\");</div><div class=\"line\">           map.centerAndZoom(new BMap.Point(116.404, 39.915), 4);</div><div class=\"line\">           map.enableScrollWheelZoom();</div><div class=\"line\"></div><div class=\"line\">           var MAX = 10;</div><div class=\"line\">           var markers = [];</div><div class=\"line\">           var pt = null;</div><div class=\"line\">           var i = 0;</div><div class=\"line\">           for (; i &lt; MAX; i++) &#123;</div><div class=\"line\">               pt = new BMap.Point(Math.random() * 40 + 85, Math.random() * 30 + 21);</div><div class=\"line\">               var marker = new BMap.Marker(pt);</div><div class=\"line\">               markers.push(marker);</div><div class=\"line\">               var content1 = '&lt;div style=\"margin:0;line-height:20px;padding:2px;\"&gt;内容&lt;/div&gt;';</div><div class=\"line\">               markers.push(marker);</div><div class=\"line\">              &lt;span style=\"color:#ff0000;\"&gt; //使用闭包 这样内容才能显示的不同，否则全部都会只显示最后一个content1的内容&lt;/span&gt;</div><div class=\"line\">               (function (content1) &#123;</div><div class=\"line\">                   marker.addEventListener(\"click\", function (e) &#123;</div><div class=\"line\"></div><div class=\"line\">                       //创建检索信息窗口对象</div><div class=\"line\">                       var searchInfoWindow = null;</div><div class=\"line\">                       searchInfoWindow = new BMapLib.SearchInfoWindow(map, content1, &#123;</div><div class=\"line\">                           title: '信息&lt;a target=\"_top\" onclick=\"alert(1)\" style=\"margin-left:5px;font-size:12px;line-height:30px;color:#3d6dcc;font-weight:normal;text-decoration:none;cursor:pointer;\"&gt;详情»&lt;/a&gt;',      //标题</div><div class=\"line\">                           width: 250,             //宽度</div><div class=\"line\">                           height: 200,              //高度</div><div class=\"line\">                           panel: \"panel\",         //检索结果面板</div><div class=\"line\">                           enableAutoPan: true,     //自动平移</div><div class=\"line\">                           enableSendToPhone: false,//百度发送短信图标</div><div class=\"line\">                           searchTypes: [</div><div class=\"line\">                               //BMAPLIB_TAB_SEARCH,   //周边检索</div><div class=\"line\">                               //BMAPLIB_TAB_TO_HERE,  //到这里去</div><div class=\"line\">                               //BMAPLIB_TAB_FROM_HERE //从这里出发</div><div class=\"line\">                           ]</div><div class=\"line\">                       &#125;);</div><div class=\"line\"></div><div class=\"line\">                       searchInfoWindow.open(e.target);</div><div class=\"line\"></div><div class=\"line\">                   &#125;);</div><div class=\"line\">               &#125;)(content1)</div><div class=\"line\">           &#125;</div><div class=\"line\">      </div><div class=\"line\">           //最简单的用法，生成一个marker数组，然后调用markerClusterer类即可。</div><div class=\"line\">           var markerClusterer = new BMapLib.MarkerClusterer(map, &#123; markers: markers &#125;);</div></pre></td></tr></table></figure>\n<p><img src=\"http://i2.buimg.com/4851/f6830ddc390b1e99.jpg\" alt=\"\"><br><img src=\"http://i2.buimg.com/4851/fad49890bc5afa59.jpg\" alt=\"\"></p>"},{"title":"进度检查","date":"2018-05-11T12:36:38.000Z","_content":"{% asset_img 20180511111324119.jpg 进度检查%}\n","source":"_posts/进度检查.md","raw":"---\ntitle: 进度检查\ndate: 2018-05-11 20:36:38\ntags:\ncategories:\n- 生活\n---\n{% asset_img 20180511111324119.jpg 进度检查%}\n","slug":"进度检查","published":1,"updated":"2018-06-19T06:03:47.713Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjilaayz7002wocm7yspyajxm","content":"<img src=\"/2018/05/11/进度检查/20180511111324119.jpg\" alt=\"进度检查\" title=\"进度检查\">\n","excerpt":"","more":"<img src=\"/2018/05/11/进度检查/20180511111324119.jpg\" alt=\"进度检查\" title=\"进度检查\">\n"}],"PostAsset":[{"_id":"source/_posts/2018计划/15146072072192945.jpg","slug":"15146072072192945.jpg","post":"cjilaayto0004ocm7em2rp61a","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/IMG_1108.PNG","slug":"IMG_1108.PNG","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2018计划/20180110153516.jpg","slug":"20180110153516.jpg","post":"cjilaayto0004ocm7em2rp61a","modified":0,"renderable":0},{"_id":"source/_posts/DecoratorPattern/20180116085436.jpg","slug":"20180116085436.jpg","post":"cjilaaytx0006ocm7ezajvhlq","modified":0,"renderable":0},{"_id":"source/_posts/PDF操作/20180611152915.jpg","slug":"20180611152915.jpg","post":"cjilaayul000hocm71593gxpc","modified":0,"renderable":0},{"_id":"source/_posts/AbstractFactoryPattern/20180111104640.jpg","slug":"20180111104640.jpg","post":"cjilaayts0005ocm7fpwznb06","modified":0,"renderable":0},{"_id":"source/_posts/AbstractFactoryPattern/20180116090042.jpg","slug":"20180116090042.jpg","post":"cjilaayts0005ocm7fpwznb06","modified":0,"renderable":0},{"_id":"source/_posts/FactoryMethodPattern/20180110175538.jpg","slug":"20180110175538.jpg","post":"cjilaayu7000aocm7jwhg7ptv","modified":0,"renderable":0},{"_id":"source/_posts/FactoryMethodPattern/20180116090202.jpg","slug":"20180116090202.jpg","post":"cjilaayu7000aocm7jwhg7ptv","modified":0,"renderable":0},{"_id":"source/_posts/NET防止SQL注入/Global.png","slug":"Global.png","post":"cjilaayuh000focm72kt4ers0","modified":0,"renderable":0},{"_id":"source/_posts/NET防止SQL注入/SafeHelper.png","slug":"SafeHelper.png","post":"cjilaayuh000focm72kt4ers0","modified":0,"renderable":0},{"_id":"source/_posts/SimpleFactoryPattern/20180110165111.jpg","slug":"20180110165111.jpg","post":"cjilaayuu000jocm7294b5z7t","modified":0,"renderable":0},{"_id":"source/_posts/SimpleFactoryPattern/20180116085858.jpg","slug":"20180116085858.jpg","post":"cjilaayuu000jocm7294b5z7t","modified":0,"renderable":0},{"_id":"source/_posts/2018计划/20180110153158.jpg","slug":"20180110153158.jpg","post":"cjilaayto0004ocm7em2rp61a","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/20180102145853.jpg","slug":"20180102145853.jpg","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/20180102151554.jpg","slug":"20180102151554.jpg","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/20180102153048.jpg","slug":"20180102153048.jpg","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/20180102162248.jpg","slug":"20180102162248.jpg","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/20180102162322.jpg","slug":"20180102162322.jpg","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/20180102163619.jpg","slug":"20180102163619.jpg","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/IMG_1109.PNG","slug":"IMG_1109.PNG","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/book.jpg","slug":"book.jpg","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/laishixiong.JPG","slug":"laishixiong.JPG","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/2017年终总结/sitecore.JPG","slug":"sitecore.JPG","post":"cjilaays60001ocm7n6x0bjte","modified":0,"renderable":0},{"_id":"source/_posts/定时任务组件FluentScheduler/20171219164453.png","slug":"20171219164453.png","post":"cjilaayyk0026ocm7wt741u8x","modified":0,"renderable":0},{"_id":"source/_posts/进度检查/20180511111324119.jpg","slug":"20180511111324119.jpg","post":"cjilaayz7002wocm7yspyajxm","modified":0,"renderable":0},{"_id":"source/_posts/去除微信昵称中emoji字符/20171218174151.png","slug":"20171218174151.png","post":"cjilaayyi0024ocm7kvyokz6l","modified":0,"renderable":0},{"_id":"source/_posts/aspmvc通用授权/20180530161151.jpg","slug":"20180530161151.jpg","post":"cjilaaywt001cocm79xzdn8kc","modified":0,"renderable":0},{"_id":"source/_posts/aspmvc通用授权/20180530161842.jpg","slug":"20180530161842.jpg","post":"cjilaaywt001cocm79xzdn8kc","modified":0,"renderable":0},{"_id":"source/_posts/aspmvc通用授权/20180530162310.jpg","slug":"20180530162310.jpg","post":"cjilaaywt001cocm79xzdn8kc","modified":0,"renderable":0},{"_id":"source/_posts/aspmvc通用授权/20180530162445.jpg","slug":"20180530162445.jpg","post":"cjilaaywt001cocm79xzdn8kc","modified":0,"renderable":0},{"_id":"source/_posts/aspmvc通用授权/20180530162838.jpg","slug":"20180530162838.jpg","post":"cjilaaywt001cocm79xzdn8kc","modified":0,"renderable":0},{"_id":"source/_posts/aspmvc通用授权/20180530162916.jpg","slug":"20180530162916.jpg","post":"cjilaaywt001cocm79xzdn8kc","modified":0,"renderable":0},{"_id":"source/_posts/aspmvc通用授权/20180530163018.jpg","slug":"20180530163018.jpg","post":"cjilaaywt001cocm79xzdn8kc","modified":0,"renderable":0},{"_id":"source/_posts/aspmvc通用授权/20180530163137.jpg","slug":"20180530163137.jpg","post":"cjilaaywt001cocm79xzdn8kc","modified":0,"renderable":0},{"_id":"source/_posts/aspmvc通用授权/sethost.png","slug":"sethost.png","post":"cjilaaywt001cocm79xzdn8kc","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cjilaays60001ocm7n6x0bjte","category_id":"cjilaaytk0003ocm7pd01gcfe","_id":"cjilaayu70009ocm7fqpjv68l"},{"post_id":"cjilaayto0004ocm7em2rp61a","category_id":"cjilaaytk0003ocm7pd01gcfe","_id":"cjilaayug000eocm7d5pny4ck"},{"post_id":"cjilaayts0005ocm7fpwznb06","category_id":"cjilaayub000bocm7847urpjd","_id":"cjilaayuw000kocm740w6i8uq"},{"post_id":"cjilaaytx0006ocm7ezajvhlq","category_id":"cjilaayub000bocm7847urpjd","_id":"cjilaayuz000oocm7szrnv6ov"},{"post_id":"cjilaayuu000jocm7294b5z7t","category_id":"cjilaayub000bocm7847urpjd","_id":"cjilaayv0000rocm7ppazi290"},{"post_id":"cjilaayu20008ocm73dd4z79p","category_id":"cjilaayux000locm7nr3tgz1q","_id":"cjilaayv2000tocm7qea3wq7m"},{"post_id":"cjilaayu7000aocm7jwhg7ptv","category_id":"cjilaayub000bocm7847urpjd","_id":"cjilaayv4000wocm7jadf5iv3"},{"post_id":"cjilaayue000docm7syj0uk8a","category_id":"cjilaayv2000uocm732oikkdd","_id":"cjilaayv7000zocm7kxdyunbd"},{"post_id":"cjilaayuh000focm72kt4ers0","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayvc0014ocm7r5n77irj"},{"post_id":"cjilaayul000hocm71593gxpc","category_id":"cjilaayv2000uocm732oikkdd","_id":"cjilaayvd0016ocm7oz91szsi"},{"post_id":"cjilaaywf0017ocm7peua3acl","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayww001docm7b1lf47vk"},{"post_id":"cjilaaywo0019ocm7l2k8sr90","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayxm001gocm7703uqf6x"},{"post_id":"cjilaaywy001eocm7hc0dfrp8","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayxt001locm7gbvocd2t"},{"post_id":"cjilaaywt001cocm79xzdn8kc","category_id":"cjilaayxm001focm70xjnloh5","_id":"cjilaayy6001uocm7t5x55jz7"},{"post_id":"cjilaayxt001mocm7zgfl40o3","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayy9001xocm7ozwwi8gp"},{"post_id":"cjilaayy0001oocm75yjgtaw1","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayyc001zocm79nusamp4"},{"post_id":"cjilaayy3001rocm7v72kf6oy","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayyh0023ocm7ub6uuie1"},{"post_id":"cjilaayy7001vocm7qi47imvu","category_id":"cjilaayv2000uocm732oikkdd","_id":"cjilaayyk0025ocm72mt77ozo"},{"post_id":"cjilaayya001yocm7iodlgigr","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayym0028ocm7kvsoxsja"},{"post_id":"cjilaayyi0024ocm7kvyokz6l","category_id":"cjilaayxm001focm70xjnloh5","_id":"cjilaayyo002bocm7xcjjrkzo"},{"post_id":"cjilaayyk0026ocm7wt741u8x","category_id":"cjilaayv2000uocm732oikkdd","_id":"cjilaayys002focm7s0b22dyn"},{"post_id":"cjilaayym0029ocm74tm333m8","category_id":"cjilaayxm001focm70xjnloh5","_id":"cjilaayyu002iocm7beytdzcz"},{"post_id":"cjilaayyp002cocm7wnnseu3a","category_id":"cjilaayxm001focm70xjnloh5","_id":"cjilaayz1002locm7r8qem81h"},{"post_id":"cjilaayys002gocm7epicplto","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayz3002pocm76v25nejl"},{"post_id":"cjilaayyv002jocm70y968pmm","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayz5002socm79xfahy1n"},{"post_id":"cjilaayz1002mocm7revbvibr","category_id":"cjilaayv5000xocm7lx8zqfo8","_id":"cjilaayz6002vocm7239qjrxw"},{"post_id":"cjilaayz3002qocm7gi3852jj","category_id":"cjilaayux000locm7nr3tgz1q","_id":"cjilaayz8002yocm73994ow72"},{"post_id":"cjilaayz5002tocm77nglahln","category_id":"cjilaayv2000uocm732oikkdd","_id":"cjilaayz9002zocm7dx3x9n59"},{"post_id":"cjilaayz7002wocm7yspyajxm","category_id":"cjilaaytk0003ocm7pd01gcfe","_id":"cjilaayzc0032ocm7l98u7j5s"},{"post_id":"cjilaayxq001kocm73mlghw28","category_id":"cjilaaytk0003ocm7pd01gcfe","_id":"cjilac3xe00018om7ozjdtond"}],"PostTag":[{"post_id":"cjilaayu20008ocm73dd4z79p","tag_id":"cjilaayud000cocm7j2a8up4v","_id":"cjilaayuz000nocm7y1pbih7s"},{"post_id":"cjilaayu20008ocm73dd4z79p","tag_id":"cjilaayus000iocm7hu4nf0bs","_id":"cjilaayv0000qocm76u3l3iex"},{"post_id":"cjilaayue000docm7syj0uk8a","tag_id":"cjilaayuy000mocm72r030nlu","_id":"cjilaayv80010ocm7sx8g1h5n"},{"post_id":"cjilaayue000docm7syj0uk8a","tag_id":"cjilaayv1000socm7jf1j06od","_id":"cjilaayv90012ocm7mq1tq6p8"},{"post_id":"cjilaayue000docm7syj0uk8a","tag_id":"cjilaayv3000vocm74p0lc6hd","_id":"cjilaayvc0013ocm7bu87wyan"},{"post_id":"cjilaayuh000focm72kt4ers0","tag_id":"cjilaayv5000yocm7281ci99o","_id":"cjilaayvc0015ocm75p303tlg"},{"post_id":"cjilaaywf0017ocm7peua3acl","tag_id":"cjilaaywt001bocm73y8ixtfq","_id":"cjilaayxq001jocm739tvwdd7"},{"post_id":"cjilaaywt001cocm79xzdn8kc","tag_id":"cjilaayxp001iocm7rgnf3fsv","_id":"cjilaayy1001pocm7q5uh5971"},{"post_id":"cjilaayxt001mocm7zgfl40o3","tag_id":"cjilaayv5000yocm7281ci99o","_id":"cjilaayy4001socm7dp3le4sl"},{"post_id":"cjilaaywy001eocm7hc0dfrp8","tag_id":"cjilaayxx001nocm7yuar3i8q","_id":"cjilaayy8001wocm7pwuwkfa0"},{"post_id":"cjilaayy0001oocm75yjgtaw1","tag_id":"cjilaayy5001tocm74v98vvhh","_id":"cjilaayyh0022ocm7aiegx15u"},{"post_id":"cjilaayy3001rocm7v72kf6oy","tag_id":"cjilaayv5000yocm7281ci99o","_id":"cjilaayyn002aocm7j0om659o"},{"post_id":"cjilaayy3001rocm7v72kf6oy","tag_id":"cjilaayyf0021ocm7rxqvpqjq","_id":"cjilaayyr002docm7jpfbf1kj"},{"post_id":"cjilaayyk0026ocm7wt741u8x","tag_id":"cjilaayv5000yocm7281ci99o","_id":"cjilaayyu002hocm7eq1hsa1v"},{"post_id":"cjilaayy7001vocm7qi47imvu","tag_id":"cjilaayyl0027ocm7o2tj54i8","_id":"cjilaayz0002kocm72gu7k82o"},{"post_id":"cjilaayyv002jocm70y968pmm","tag_id":"cjilaayv5000yocm7281ci99o","_id":"cjilaayz3002oocm7yh6lefan"},{"post_id":"cjilaayym0029ocm74tm333m8","tag_id":"cjilaayyr002eocm77uijgxb3","_id":"cjilaayz4002rocm7bb3f5av8"},{"post_id":"cjilaayyp002cocm7wnnseu3a","tag_id":"cjilaayz2002nocm7tw261e23","_id":"cjilaayz8002xocm7vz7l1xc6"},{"post_id":"cjilaayz3002qocm7gi3852jj","tag_id":"cjilaayz6002uocm7qzhysq7z","_id":"cjilaayzb0031ocm7l9cwwm66"},{"post_id":"cjilaayz5002tocm77nglahln","tag_id":"cjilaayza0030ocm7cf2ach6w","_id":"cjilaayzh0034ocm75pd1l0y4"},{"post_id":"cjilaayz5002tocm77nglahln","tag_id":"cjilaayzf0033ocm73zbxxi6u","_id":"cjilaayzh0035ocm72yh8tvtq"}],"Tag":[{"name":"javascript","_id":"cjilaayud000cocm7j2a8up4v"},{"name":"easyui","_id":"cjilaayus000iocm7hu4nf0bs"},{"name":"Log4Net","_id":"cjilaayuy000mocm72r030nlu"},{"name":"ASP.NET日志","_id":"cjilaayv1000socm7jf1j06od"},{"name":"空日志删除","_id":"cjilaayv3000vocm74p0lc6hd"},{"name":"ASP.NET","_id":"cjilaayv5000yocm7281ci99o"},{"name":"加密解密","_id":"cjilaaywt001bocm73y8ixtfq"},{"name":"ASP.MVC","_id":"cjilaayxp001iocm7rgnf3fsv"},{"name":"扩展方法","_id":"cjilaayxx001nocm7yuar3i8q"},{"name":"WinForm","_id":"cjilaayy5001tocm74v98vvhh"},{"name":"IIS","_id":"cjilaayyf0021ocm7rxqvpqjq"},{"name":"c#基础","_id":"cjilaayyl0027ocm7o2tj54i8"},{"name":"发送消息","_id":"cjilaayyr002eocm77uijgxb3"},{"name":"支付宝","_id":"cjilaayz2002nocm7tw261e23"},{"name":"浏览器兼容","_id":"cjilaayz6002uocm7qzhysq7z"},{"name":"百度地图","_id":"cjilaayza0030ocm7cf2ach6w"},{"name":"地图操作","_id":"cjilaayzf0033ocm73zbxxi6u"}]}}